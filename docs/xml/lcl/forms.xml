<?xml version="1.0" encoding="ISO8859-1"?>
<fpdoc-descriptions>
<package name="lcl">

<!--
  ====================================================================
    Forms
  ====================================================================
-->

<module name="Forms">
<short></short>
<descr>
</descr>

<!-- unresolved type reference Visibility: default -->
<element name="Classes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="SysUtils">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Math">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLStrConsts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLIntf">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="InterfaceBase">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LResources">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="GraphType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Graphics">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Menus">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LMessages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="CustomTimer">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="ActnList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="ClipBrd">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="CustApp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLClasses">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Controls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TProcedure">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TProcedureOfObject">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPosition.poDesigned">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPosition.poDefault">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPosition.poDefaultPosOnly">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPosition.poDefaultSizeOnly">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPosition.poScreenCenter">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPosition.poDesktopCenter">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPosition.poMainFormCenter">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPosition.poOwnerFormCenter">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TWindowState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWindowState.wsNormal">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWindowState.wsMinimized">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWindowState.wsMaximized">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TCloseAction">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCloseAction.caNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCloseAction.caHide">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCloseAction.caFree">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCloseAction.caMinimize">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TScrollingWinControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TScrollBarKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TScrollBarKind.sbHorizontal">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TScrollBarKind.sbVertical">
<short></short>
</element>

<!-- range type Visibility: default -->
<element name="TScrollBarInc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TScrollBarStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TScrollBarStyle.ssRegular">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TScrollBarStyle.ssFlat">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TScrollBarStyle.ssHotTrack">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="EScrollBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TControlScrollBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlScrollBar.FAutoRange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlScrollBar.FIncrement">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlScrollBar.FKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlScrollBar.FPage">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlScrollBar.FPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlScrollBar.FRange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlScrollBar.FSmooth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlScrollBar.FVisible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: protected -->
<element name="TControlScrollBar.FControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.ControlAutoScroll">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.ControlAutoScroll.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.ControlHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.ControlHandle.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.GetIncrement">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetIncrement.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.GetPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetPage.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.GetPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetPosition.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.GetRange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetRange.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.GetSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetSize.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.GetSmooth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetSmooth.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.GetVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetVisible.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.HandleAllocated">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.HandleAllocated.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.SmoothIsStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.SmoothIsStored.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlScrollBar.VisibleIsStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.VisibleIsStored.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.AutoCalcRange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.ControlUpdateScrollBars">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.ScrollControlBy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.ScrollControlBy.DeltaX">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.ScrollControlBy.DeltaY">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.ScrollHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.ScrollHandler.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.SetIncrement">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.SetIncrement.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.SetPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.SetPage.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.SetPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.SetPosition.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.SetRange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.SetRange.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.SetSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.SetSize.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.SetSmooth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.SetSmooth.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.SetVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.SetVisible.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlScrollBar.UpdateScrollBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TControlScrollBar.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.Create.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.Create.AKind">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControlScrollBar.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlScrollBar.Assign.Source">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControlScrollBar.IsScrollBarVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.IsScrollBarVisible.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControlScrollBar.ScrollPos">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.ScrollPos.Result">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TControlScrollBar.Kind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TControlScrollBar.GetOtherScrollBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetOtherScrollBar.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControlScrollBar.GetHorzScrollBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetHorzScrollBar.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControlScrollBar.GetVertScrollBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlScrollBar.GetVertScrollBar.Result">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TControlScrollBar.Size">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlScrollBar.Increment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlScrollBar.Page">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlScrollBar.Smooth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlScrollBar.Position">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlScrollBar.Range">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlScrollBar.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TScrollingWinControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScrollingWinControl.FHorzScrollBar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScrollingWinControl.FVertScrollBar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScrollingWinControl.FAutoScroll">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScrollingWinControl.FOnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScrollingWinControl.FCanvas">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScrollingWinControl.FIsUpdating">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TScrollingWinControl.SetAutoScroll">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.SetAutoScroll.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TScrollingWinControl.SetHorzScrollBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.SetHorzScrollBar.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TScrollingWinControl.SetVertScrollBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.SetVertScrollBar.Value">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TScrollingWinControl.StoreScrollBars">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScrollingWinControl.StoreScrollBars.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TScrollingWinControl.AlignControls">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.AlignControls.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.AlignControls.ARect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TScrollingWinControl.CreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TScrollingWinControl.WMEraseBkgnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.WMEraseBkgnd.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TScrollingWinControl.WMPaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.WMPaint.message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TScrollingWinControl.DoOnResize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TScrollingWinControl.WMHScroll">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.WMHScroll.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TScrollingWinControl.WMVScroll">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.WMVScroll.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TScrollingWinControl.ScrollBy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.ScrollBy.DeltaX">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.ScrollBy.DeltaY">
<short></short>
</element>

<!-- property Visibility: protected -->
<element name="TScrollingWinControl.OnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TScrollingWinControl.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TScrollingWinControl.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TScrollingWinControl.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TScrollingWinControl.PaintWindow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollingWinControl.PaintWindow.dc">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScrollingWinControl.UpdateScrollbars">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TScrollingWinControl.HasVisibleScrollbars">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScrollingWinControl.HasVisibleScrollbars.Result">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TScrollingWinControl.Canvas">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollingWinControl.AutoScroll">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollingWinControl.HorzScrollBar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollingWinControl.VertScrollBar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TScrollBox">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TScrollBox.GetClientScrollOffset">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScrollBox.GetClientScrollOffset.Result">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TScrollBox.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScrollBox.Create.AOwner">
<short></short>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.DragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.Ctl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.ParentCtl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnConstrainedResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnMouseWheel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnMouseWheelDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnMouseWheelUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TScrollBox.OnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomFrame">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomFrame.AddActionList">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomFrame.AddActionList.ActionList">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomFrame.RemoveActionList">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomFrame.RemoveActionList.ActionList">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomFrame.GetChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomFrame.GetChildren.Proc">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomFrame.GetChildren.Root">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomFrame.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomFrame.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomFrame.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomFrame.SetParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomFrame.SetParent.AParent">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomFrame.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomFrame.Create.AOwner">
<short></short>
</element>

<!-- "class of" type Visibility: default -->
<element name="TCustomFrameClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TFrame">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.AutoScroll">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.DockSite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.DragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.Ctl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.ParentCtl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnConstrainedResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnDockDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnDockOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnEndDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnGetSiteInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnMouseWheel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnMouseWheelDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnMouseWheelUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnStartDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TFrame.OnUnDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TIDesigner">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TBorderIcon">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBorderIcon.biSystemMenu">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBorderIcon.biMinimize">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBorderIcon.biMaximize">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBorderIcon.biHelp">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TBorderIcons">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TCloseEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCloseEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCloseEvent.CloseAction">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TCloseQueryEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCloseQueryEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCloseQueryEvent.CanClose">
<short></short>
</element>

<!-- function type Visibility: default -->
<element name="THelpEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="THelpEvent.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="THelpEvent.Command">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="THelpEvent.Data">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="THelpEvent.CallHelp">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TFormStateType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStateType.fsCreating">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStateType.fsVisible">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStateType.fsShowing">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStateType.fsModal">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStateType.fsCreatedMDIChild">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStateType.fsBorderStyleChanged">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStateType.fsFormStyleChanged">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStateType.fsFirstShow">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TFormState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- range type Visibility: default -->
<element name="TModalResult">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TFormHandlerType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormHandlerType.fhtFirstShow">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormHandlerType.fhtClose">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TCustomForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FActive">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FActiveControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FBorderIcons">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FDefaultControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FCancelControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FDesigner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FDummyTextHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FFormState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FFormStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FFormUpdateCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FFormHandlers">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FHelpFile">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FIcon">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FKeyPreview">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FModalResult">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnActivate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnClose">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnCloseQuery">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnCreate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnDeactivate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnDestroy">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnHelp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnHide">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnShow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FOnWindowStateChanged">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FPixelsPerInch">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomForm.FWindowState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TCustomForm.IsForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.IsForm.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomForm.IsHelpFileStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.IsHelpFileStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomForm.IsIconStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.IsIconStored.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.ClientWndProc">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.ClientWndProc.Message">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.CloseModal">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.DoCreate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.DoDestroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.IconChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.IconChanged.Sender">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomForm.IsKeyPreviewStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.IsKeyPreviewStored.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetActive">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetActive.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetActiveControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetActiveControl.AWinControl">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetBorderIcons">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetBorderIcons.NewIcons">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetFormBorderStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetFormBorderStyle.NewStyle">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetCancelControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetCancelControl.NewControl">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetDefaultControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetDefaultControl.NewControl">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetDesigner">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetDesigner.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetFormStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetFormStyle.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetIcon">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetIcon.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetMenu">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetMenu.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetModalResult">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetModalResult.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetPosition.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetVisible.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetWindowFocus">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.SetWindowState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetWindowState.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.WMActivate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.WMActivate.Message">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.WMCloseQuery">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.WMCloseQuery.message">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.WMDeactivate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.WMDeactivate.Message">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.WMPaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.WMPaint.message">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.WMShowWindow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.WMShowWindow.message">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.WMSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.WMSize.message">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.AddHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.AddHandler.HandlerType">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.AddHandler.Handler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.AddHandler.AsLast">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomForm.RemoveHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.RemoveHandler.HandlerType">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.RemoveHandler.Handler">
<short></short>
</element>

<!-- variable Visibility: protected -->
<element name="TCustomForm.FFormBorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: protected -->
<element name="TCustomForm.FActionLists">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TCustomForm.CloseQuery">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.CloseQuery.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomForm.FormUpdating">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.FormUpdating.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.Activate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.ActiveChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.BeginFormUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.CreateParams">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.CreateParams.Params">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.CreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.Deactivate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.DestroyWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.DoClose">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.DoClose.CloseAction">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.DoHide">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.DoShow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.EndFormUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.GetChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.GetChildren.Proc">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.GetChildren.Root">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.ChildHandlesCreated">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.PaintWindow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.PaintWindow.dc">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.RequestAlign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.SetZOrder">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetZOrder.Topmost">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.SetParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetParent.NewParent">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.UpdateShowing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.DoFirstShow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.UpdateWindowState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.VisibleChanging">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.WndProc">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.WndProc.TheMessage">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomForm.VisibleIsStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.VisibleIsStored.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomForm.ColorIsStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.ColorIsStored.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.DoDock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.DoDock.NewDockSite">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.DoDock.ARect">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomForm.GetFloating">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.GetFloating.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.CMActionExecute">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.CMActionExecute.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.CMActionUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.CMActionUpdate.Message">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomForm.DoExecuteAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.DoExecuteAction.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.DoExecuteAction.ExeAction">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomForm.DoUpdateAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.DoUpdateAction.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.DoUpdateAction.TheAction">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomForm.UpdateActions">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomForm.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.Create.AOwner">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomForm.CreateNew">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.CreateNew.AOwner">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.CreateNew.Num">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.BeforeDestruction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomForm.GetIconHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.GetIconHandle.Result">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomForm.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.Close">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.Release">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.Hide">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.Show">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.ShowOnTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomForm.WantChildKey">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.WantChildKey.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.WantChildKey.Child">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.WantChildKey.Message">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.DefocusControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.DefocusControl.Control">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.DefocusControl.Removing">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.SetFocus">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomForm.SetFocusedControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.SetFocusedControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.SetFocusedControl.Control">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.FocusControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.FocusControl.WinControl">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomForm.ShowModal">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.ShowModal.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomForm.GetRolesForControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomForm.GetRolesForControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.GetRolesForControl.AControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.RemoveAllHandlersOfObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.RemoveAllHandlersOfObject.AnObject">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.AddHandlerFirstShow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.AddHandlerFirstShow.OnFirstShowHandler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.AddHandlerFirstShow.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.RemoveHandlerFirstShow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.RemoveHandlerFirstShow.OnFirstShowHandler">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.AddHandlerClose">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.AddHandlerClose.OnCloseHandler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.AddHandlerClose.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.RemoveHandlerClose">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.RemoveHandlerClose.OnCloseHandler">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomForm.Dock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.Dock.NewDockSite">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomForm.Dock.ARect">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.Active">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.ActiveControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.BorderIcons">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.CancelControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.DefaultControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.Designer">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.FormState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.FormStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.HelpFile">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.Icon">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.KeyPreview">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.Menu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.ModalResult">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnActivate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnClose">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnCloseQuery">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnCreate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnDeactivate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnDestroy">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnHelp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnHide">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnShow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.OnWindowStateChanged">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.PixelsPerInch">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.Position">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.TextHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomForm.WindowState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TForm.FClientHandle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TForm.ClientHandle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TForm.DockManager">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Action">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.ActiveControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.BorderIcons">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.ClientHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.ClientWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.DockSite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.FormStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.HelpFile">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Icon">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.KeyPreview">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Menu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnActivate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnClose">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnCloseQuery">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnCreate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnDeactivate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnDestroy">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnDockDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnDockOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnEndDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnGetSiteInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnHide">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnKeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnKeyUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnHelp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnShow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnStartDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.OnUnDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.PixelsPerInch">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Position">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.SessionProperties">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.TextHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.UseDockManager">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TForm.WindowState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- "class of" type Visibility: default -->
<element name="TFormClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomDockForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomDockForm.DoAddDockClient">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomDockForm.DoAddDockClient.Client">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomDockForm.DoAddDockClient.ARect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomDockForm.DoRemoveDockClient">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomDockForm.DoRemoveDockClient.Client">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomDockForm.GetSiteInfo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomDockForm.GetSiteInfo.Client">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomDockForm.GetSiteInfo.InfluenceRect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomDockForm.GetSiteInfo.MousePos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomDockForm.GetSiteInfo.CanDock">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomDockForm.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomDockForm.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomDockForm.Create.TheOwner">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomDockForm.AutoScroll">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomDockForm.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomDockForm.FormStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomDockForm.PixelsPerInch">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="THintWindow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="THintWindow.FActivating">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="THintWindow.FAutoHide">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="THintWindow.FAutoHideTimer">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="THintWindow.FHideInterval">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="THintWindow.SetAutoHide">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="THintWindow.SetAutoHide.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="THintWindow.AutoHideHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="THintWindow.AutoHideHint.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="THintWindow.SetHideInterval">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="THintWindow.SetHideInterval.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="THintWindow.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="THintWindow.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="THintWindow.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="THintWindow.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="THintWindow.ActivateHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="THintWindow.ActivateHint.ARect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="THintWindow.ActivateHint.AHint">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="THintWindow.CalcHintRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="THintWindow.CalcHintRect.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="THintWindow.CalcHintRect.MaxWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="THintWindow.CalcHintRect.AHint">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="THintWindow.CalcHintRect.AData">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="THintWindow.ReleaseHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="THintWindow.AutoHide">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="THintWindow.HideInterval">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- "class of" type Visibility: default -->
<element name="THintWindowClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- pointer type Visibility: default -->
<element name="PCursorRec">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TCursorRec">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCursorRec.Next">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCursorRec.Index">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCursorRec.Handle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TScreenFormEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreenFormEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreenFormEvent.Form">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TScreenActiveFormChangedEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreenActiveFormChangedEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreenActiveFormChangedEvent.LastForm">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TScreenControlEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreenControlEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreenControlEvent.LastControl">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TScreenNotification">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TScreenNotification.snFormAdded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TScreenNotification.snRemoveForm">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TScreenNotification.snActiveControlChanged">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TScreenNotification.snActiveFormChanged">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TScreen">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FActiveControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FActiveCustomForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FActiveForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FCursorCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FCursorList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FCustomForms">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FCustomFormsZOrdered">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FDefaultCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FHintFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FFocusedForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FFonts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FFormList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FScreenHandlers">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FLastActiveControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FLastActiveCustomForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FOnActiveControlChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FOnActiveFormChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FPixelsPerInch">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TScreen.FSaveFocusedList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.CreateCursors">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.DeleteCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.DeleteCursor.Index">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.DestroyCursors">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TScreen.GetCursors">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetCursors.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.GetCursors.Index">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TScreen.GetCustomFormCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetCustomFormCount.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TScreen.GetCustomForms">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetCustomForms.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.GetCustomForms.Index">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TScreen.GetCustomFormsZOrdered">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetCustomFormsZOrdered.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.GetCustomFormsZOrdered.Index">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TScreen.GetFonts">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetFonts.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TScreen.GetFormCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetFormCount.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TScreen.GetForms">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetForms.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.GetForms.IIndex">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TScreen.GetHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetHeight.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TScreen.GetWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetWidth.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.AddForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddForm.AForm">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.RemoveForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.RemoveForm.AForm">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.SetCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.SetCursor.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.SetCursors">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.SetCursors.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.SetCursors.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.UpdateLastActive">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.AddHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandler.HandlerType">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandler.Handler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandler.AsLast">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TScreen.RemoveHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.RemoveHandler.HandlerType">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.RemoveHandler.Handler">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TScreen.GetHintFont">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.GetHintFont.Result">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TScreen.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TScreen.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TScreen.CustomFormIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.CustomFormIndex.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.CustomFormIndex.AForm">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TScreen.FormIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.FormIndex.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.FormIndex.AForm">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TScreen.CustomFormZIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TScreen.CustomFormZIndex.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.CustomFormZIndex.AForm">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.MoveFormToFocusFront">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.MoveFormToFocusFront.ACustomForm">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.MoveFormToZFront">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.MoveFormToZFront.ACustomForm">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.UpdateScreen">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.AddHandlerFormAdded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandlerFormAdded.OnFormAdded">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandlerFormAdded.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.RemoveHandlerFormAdded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.RemoveHandlerFormAdded.OnFormAdded">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.AddHandlerRemoveForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandlerRemoveForm.OnRemoveForm">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandlerRemoveForm.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.RemoveHandlerRemoveForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.RemoveHandlerRemoveForm.OnRemoveForm">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.AddHandlerActiveControlChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandlerActiveControlChanged.OnActiveControlChanged">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandlerActiveControlChanged.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.RemoveHandlerActiveControlChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.RemoveHandlerActiveControlChanged.OnActiveControlChanged">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.AddHandlerActiveFormChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandlerActiveFormChanged.OnActiveFormChanged">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.AddHandlerActiveFormChanged.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TScreen.RemoveHandlerActiveFormChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.RemoveHandlerActiveFormChanged.OnActiveFormChanged">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TScreen.ActiveControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.ActiveCustomForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.ActiveForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.Cursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.Cursors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.Cursors.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TScreen.CustomFormCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.CustomForms">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.CustomForms.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TScreen.CustomFormsZOrdered">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.CustomFormsZOrdered.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TScreen.FocusedForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.FormCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.Forms">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TScreen.Forms.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TScreen.Fonts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.HintFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.OnActiveControlChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.OnActiveFormChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TScreen.PixelsPerInch">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TExceptionEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TExceptionEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TExceptionEvent.E">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TIdleEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIdleEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TIdleEvent.Done">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TOnUserInputEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TOnUserInputEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TOnUserInputEvent.Msg">
<short></short>
</element>

<!-- pointer type Visibility: default -->
<element name="PHintInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="THintInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.HintControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.HintWindowClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.HintPos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.HintMaxWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.HintColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.CursorRect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.CursorPos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.ReshowTimeout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.HideTimeout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.HintStr">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfo.HintData">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TCMHintShow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMHintShow.Msg">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMHintShow.Reserved">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMHintShow.HintInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMHintShow.Result">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TCMHintShowPause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMHintShowPause.Msg">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMHintShowPause.WasActive">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMHintShowPause.Pause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMHintShowPause.Result">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TAppHintTimerType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAppHintTimerType.ahtNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAppHintTimerType.ahtShowHint">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAppHintTimerType.ahtHideHint">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAppHintTimerType.ahtReshowHint">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TShowHintEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TShowHintEvent.HintStr">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TShowHintEvent.CanShow">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TShowHintEvent.HintInfo">
<short></short>
</element>

<!-- record type Visibility: default -->
<element name="THintInfoAtMouse">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfoAtMouse.MousePos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfoAtMouse.Control">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="THintInfoAtMouse.ControlHasHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TApplicationFlag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationFlag.AppWaiting">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationFlag.AppIdleEndSent">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationFlag.AppHandlingException">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationFlag.AppNoExceptionMessages">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationFlag.AppDestroying">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationFlag.AppDoNotReleaseComponents">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TApplicationFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TApplicationNavigationOption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationNavigationOption.anoTabToSelectNext">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationNavigationOption.anoReturnForDefaultControl">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationNavigationOption.anoEscapeForCancelControl">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TApplicationNavigationOptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TApplicationHandlerType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationHandlerType.ahtIdle">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationHandlerType.ahtIdleEnd">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationHandlerType.ahtKeyDownBefore">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationHandlerType.ahtKeyDownAfter">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TApplicationHandlerType.ahtUserInput">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TApplication">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FApplicationHandlers">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FCaptureExceptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHandle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHintColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHintControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHintHidePause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHintPause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHintShortCuts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHintShortPause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHintTimer">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHintTimerType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FHintWindow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FIcon">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FFormList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FMainForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FMouseControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FNavigation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FOldExceptProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FOnActionExecute">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FOnActionUpdate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FOnHelp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FOnHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FOnIdle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FOnIdleEnd">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FOnShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FOnUserInput">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FReleaseComponents">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplication.FShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.DoOnIdleEnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TApplication.GetCurrentHelpFile">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.GetCurrentHelpFile.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TApplication.GetExename">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.GetExename.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TApplication.GetIconHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.GetIconHandle.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TApplication.GetTitle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.GetTitle.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.IconChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.IconChanged.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.Idle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TApplication.InvokeHelp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.InvokeHelp.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.InvokeHelp.Command">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.InvokeHelp.Data">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TApplication.GetControlAtMouse">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.GetControlAtMouse.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.SetNavigation">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.SetNavigation.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.UpdateMouseControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.UpdateMouseControl.NewMouseControl">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.MouseIdle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.MouseIdle.CurrentControl">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.SetCaptureExceptions">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.SetCaptureExceptions.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.SetHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.SetHint.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.SetHintColor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.SetHintColor.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.SetIcon">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.SetIcon.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.SetShowHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.SetShowHint.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.StopHintTimer">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TApplication.ValidateHelpSystem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.ValidateHelpSystem.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.WndProc">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.WndProc.AMessage">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TApplication.DispatchAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.DispatchAction.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.DispatchAction.Msg">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.DispatchAction.Action">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.AddHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddHandler.HandlerType">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddHandler.Handler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddHandler.AsLast">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TApplication.RemoveHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.RemoveHandler.HandlerType">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.RemoveHandler.Handler">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TApplication.GetConsoleApplication">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.GetConsoleApplication.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.NotifyIdleHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.NotifyIdleEndHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TApplication.IsHintMsg">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.IsHintMsg.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.IsHintMsg.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.DoOnMouseMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.ShowHintWindow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.ShowHintWindow.Info">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.OnHintTimer">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.OnHintTimer.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.SetTitle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.SetTitle.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.StartHintTimer">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.StartHintTimer.Interval">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.StartHintTimer.TimerType">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.UpdateVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.DoIdleActions">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.MenuPopupHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.MenuPopupHandler.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplication.DoFreeReleaseComponents">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TApplication.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TApplication.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.ControlDestroyed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.ControlDestroyed.AControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.BringToFront">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.CreateForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.CreateForm.InstanceClass">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.CreateForm.Reference">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.ReleaseComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.ReleaseComponent.AComponent">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TApplication.ExecuteAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.ExecuteAction.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.ExecuteAction.ExeAction">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TApplication.UpdateAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.UpdateAction.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.UpdateAction.TheAction">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TApplication.HandleAllocated">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.HandleAllocated.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.HandleException">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.HandleException.Sender">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.HandleMessage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TApplication.HelpCommand">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.HelpCommand.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.HelpCommand.Command">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.HelpCommand.Data">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TApplication.HelpContext">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.HelpContext.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.HelpContext.Context">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TApplication.HelpJump">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.HelpJump.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.HelpJump.JumpID">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TApplication.HelpKeyword">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.HelpKeyword.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.HelpKeyword.Keyword">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.HideAllFormsWithStayOnTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TApplication.IsWaiting">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.IsWaiting.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.CancelHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.HideHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.HintMouseMessage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.HintMouseMessage.Control">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.HintMouseMessage.AMessage">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TApplication.Icon">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.Initialize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TApplication.MessageBox">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TApplication.MessageBox.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.MessageBox.Text">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.MessageBox.Caption">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.MessageBox.Flags">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.Minimize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.ProcessMessages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.Run">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.ShowException">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.ShowException.E">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.Terminate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.NotifyUserInputHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.NotifyUserInputHandler.Msg">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.NotifyKeyDownBeforeHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.NotifyKeyDownBeforeHandler.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.NotifyKeyDownBeforeHandler.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.NotifyKeyDownBeforeHandler.Shift">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.NotifyKeyDownHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.NotifyKeyDownHandler.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.NotifyKeyDownHandler.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.NotifyKeyDownHandler.Shift">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.ControlKeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.ControlKeyDown.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.ControlKeyDown.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.ControlKeyDown.Shift">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.AddOnIdleHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnIdleHandler.Handler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnIdleHandler.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.RemoveOnIdleHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.RemoveOnIdleHandler.Handler">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.AddOnIdleEndHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnIdleEndHandler.Handler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnIdleEndHandler.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.RemoveOnIdleEndHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.RemoveOnIdleEndHandler.Handler">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.AddOnUserInputHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnUserInputHandler.Handler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnUserInputHandler.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.RemoveOnUserInputHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.RemoveOnUserInputHandler.Handler">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.AddOnKeyDownBeforeHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnKeyDownBeforeHandler.Handler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnKeyDownBeforeHandler.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.RemoveOnKeyDownBeforeHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.RemoveOnKeyDownBeforeHandler.Handler">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.AddOnKeyDownHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnKeyDownHandler.Handler">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.AddOnKeyDownHandler.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.RemoveOnKeyDownHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.RemoveOnKeyDownHandler.Handler">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.RemoveAllHandlersOfObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.RemoveAllHandlersOfObject.AnObject">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TApplication.DoBeforeMouseMessage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplication.DoBeforeMouseMessage.CurMouseControl">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TApplication.CaptureExceptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.Handle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.Hint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.HintColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.HintHidePause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.HintPause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.HintShortCuts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.HintShortPause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.Navigation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.MainForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.OnActionExecute">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.OnActionUpdate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.OnIdle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.OnIdleEnd">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.OnHelp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.OnHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.OnShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.OnUserInput">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TApplication.Title">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TApplicationProperties">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FCaptureExceptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FHelpFile">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FHintColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FHintHidePause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FHintPause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FHintShortCuts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FHintShortPause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FTitle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FOnException">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FOnIdle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FOnIdleEnd">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FOnHelp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FOnHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FOnShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TApplicationProperties.FOnUserInput">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetCaptureExceptions">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetCaptureExceptions.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetHelpFile">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetHelpFile.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetHint.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetHintColor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetHintColor.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetHintHidePause">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetHintHidePause.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetHintPause">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetHintPause.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetHintShortCuts">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetHintShortCuts.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetHintShortPause">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetHintShortPause.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetShowHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetShowHint.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetTitle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetTitle.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetOnException">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetOnException.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetOnIdle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetOnIdle.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetOnIdleEnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetOnIdleEnd.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetOnHelp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetOnHelp.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetOnHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetOnHint.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetOnShowHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetOnShowHint.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TApplicationProperties.SetOnUserInput">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.SetOnUserInput.AValue">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TApplicationProperties.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TApplicationProperties.Create.AOwner">
<short></short>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.CaptureExceptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.HelpFile">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.Hint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.HintColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.HintHidePause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.HintPause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.HintShortCuts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.HintShortPause">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.Title">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.OnException">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.OnIdle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.OnIdleEnd">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.OnHelp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.OnHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.OnShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TApplicationProperties.OnUserInput">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TIDesigner">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TIDesigner.IsDesignMsg">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TIDesigner.IsDesignMsg.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TIDesigner.IsDesignMsg.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TIDesigner.IsDesignMsg.Message">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TIDesigner.Modified">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TIDesigner.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIDesigner.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TIDesigner.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TIDesigner.PaintGrid">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TIDesigner.ValidateRename">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIDesigner.ValidateRename.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TIDesigner.ValidateRename.CurName">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TIDesigner.ValidateRename.NewName">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TIDesigner.GetShiftState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TIDesigner.GetShiftState.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TIDesigner.SelectOnlyThisComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIDesigner.SelectOnlyThisComponent.AComponent">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TIDesigner.UniqueName">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TIDesigner.UniqueName.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TIDesigner.UniqueName.BaseName">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TFormPropertyStorage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TFormPropertyStorage.FormFirstShow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TFormPropertyStorage.FormFirstShow.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TFormPropertyStorage.FormClose">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TFormPropertyStorage.FormClose.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TFormPropertyStorage.FormClose.CloseAction">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TFormPropertyStorage.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TFormPropertyStorage.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TFormPropertyStorage.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TDataModule">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDataModule.FDesignSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDataModule.FDesignOffset">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDataModule.FOnCreate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDataModule.FOnDestroy">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDataModule.FOldCreateOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TDataModule.OldCreateOrderIsStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDataModule.OldCreateOrderIsStored.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TDataModule.ReadHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.ReadHeight.Reader">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TDataModule.ReadHorizontalOffset">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.ReadHorizontalOffset.Reader">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TDataModule.ReadVerticalOffset">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.ReadVerticalOffset.Reader">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TDataModule.ReadWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.ReadWidth.Reader">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TDataModule.WriteWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.WriteWidth.Writer">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TDataModule.WriteHorizontalOffset">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.WriteHorizontalOffset.Writer">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TDataModule.WriteVerticalOffset">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.WriteVerticalOffset.Writer">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TDataModule.WriteHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.WriteHeight.Writer">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDataModule.DoCreate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TDataModule.DoDestroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TDataModule.DefineProperties">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.DefineProperties.Filer">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDataModule.GetChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.GetChildren.Proc">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.GetChildren.Root">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TDataModule.HandleCreateException">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDataModule.HandleCreateException.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDataModule.ReadState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.ReadState.Reader">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TDataModule.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.Create.TheOwner">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TDataModule.CreateNew">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.CreateNew.TheOwner">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDataModule.CreateNew.CreateMode">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TDataModule.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TDataModule.AfterConstruction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TDataModule.BeforeDestruction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDataModule.DesignOffset">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDataModule.DesignSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TDataModule.OnCreate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TDataModule.OnDestroy">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TDataModule.OldCreateOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="AddDataModule">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="DataModule">
<short></short>
</element>

<!-- constant Visibility: default -->
<element name="RemoveDataModule">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="DataModule">
<short></short>
</element>

<!-- constant Visibility: default -->
<element name="ApplicationHandleException">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="Sender">
<short></short>
</element>

<!-- constant Visibility: default -->
<element name="ApplicationShowException">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="E">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="KeysToShiftState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="KeysToShiftState.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="KeysToShiftState.Keys">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="KeyDataToShiftState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="KeyDataToShiftState.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="KeyDataToShiftState.KeyData">
<short></short>
</element>

<!-- alias type Visibility: default -->
<element name="TFocusState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="SaveFocusState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="SaveFocusState.Result">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="RestoreFocusState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="RestoreFocusState.FocusState">
<short></short>
</element>

<!-- function type Visibility: default -->
<element name="TGetDesignerFormEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TGetDesignerFormEvent.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TGetDesignerFormEvent.AComponent">
<short></short>
</element>

<!-- variable Visibility: default -->
<element name="OnGetDesignerForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="GetParentForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="GetParentForm.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="GetParentForm.Control">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="GetDesignerForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="GetDesignerForm.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="GetDesignerForm.AComponent">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="FindRootDesigner">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="FindRootDesigner.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="FindRootDesigner.AComponent">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="IsAccel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="IsAccel.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="IsAccel.VK">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="IsAccel.Str">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="NotifyApplicationUserInput">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="NotifyApplicationUserInput.Msg">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="InitResourceComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="InitResourceComponent.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="InitResourceComponent.Instance">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="InitResourceComponent.RootAncestor">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="GetShortHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="GetShortHint.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="GetShortHint.Hint">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="GetLongHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="GetLongHint.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="GetLongHint.Hint">
<short></short>
</element>

<!-- variable Visibility: default -->
<element name="Application">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="Screen">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="ExceptionObject">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="HintWindowClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function type Visibility: default -->
<element name="TMessageBoxFunction">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TMessageBoxFunction.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMessageBoxFunction.Text">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMessageBoxFunction.Caption">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMessageBoxFunction.Flags">
<short></short>
</element>

<!-- variable Visibility: default -->
<element name="MessageBoxFunction">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="FreeInterfaceObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="Register">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>
</module> <!-- Forms -->
</package>
</fpdoc-descriptions>
