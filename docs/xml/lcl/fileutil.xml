<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="lcl">
    <!--
  ====================================================================
    FileUtil
  ====================================================================
-->
    <module name="FileUtil">
      <short/>
      <descr/>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="SysUtils">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLStrConsts">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Masks">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="UTF8FileHeader">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: default -->
      <element name="CompareFilenames">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="CompareFilenames.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareFilenames.Filename1"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareFilenames.Filename2"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareFilenames.ResolveLinks"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareFilenames.Len1"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareFilenames.Len2"><short/></element>
      <!-- function Visibility: default -->
      <element name="FilenameIsAbsolute">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FilenameIsAbsolute.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FilenameIsAbsolute.TheFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="FilenameIsWinAbsolute">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FilenameIsWinAbsolute.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FilenameIsWinAbsolute.TheFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="FilenameIsUnixAbsolute">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FilenameIsUnixAbsolute.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FilenameIsUnixAbsolute.TheFilename"><short/></element>
      <!-- procedure Visibility: default -->
      <element name="CheckIfFileIsExecutable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="CheckIfFileIsExecutable.AFilename"><short/></element>
      <!-- procedure Visibility: default -->
      <element name="CheckIfFileIsSymlink">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="CheckIfFileIsSymlink.AFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="FileIsReadable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FileIsReadable.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsReadable.AFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="FileIsWritable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FileIsWritable.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsWritable.AFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="FileIsText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FileIsText.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsText.AFilename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsText.FileReadable"><short/></element>
      <!-- function Visibility: default -->
      <element name="FileIsExecutable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FileIsExecutable.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsExecutable.AFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="FileIsSymlink">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FileIsSymlink.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsSymlink.AFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="FileSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FileSize.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileSize.Filename"><short/></element>
      <!-- function Visibility: default -->
      <element name="GetFileDescription">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="GetFileDescription.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="GetFileDescription.AFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="ReadAllLinks">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="ReadAllLinks.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ReadAllLinks.Filename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ReadAllLinks.ExceptionOnError"><short/></element>
      <!-- function Visibility: default -->
      <element name="DirPathExists">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="DirPathExists.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="DirPathExists.FileName"><short/></element>
      <!-- function Visibility: default -->
      <element name="ForceDirectory">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="ForceDirectory.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ForceDirectory.DirectoryName"><short/></element>
      <!-- function Visibility: default -->
      <element name="DeleteDirectory">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="DeleteDirectory.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="DeleteDirectory.DirectoryName"><short/></element>
      <!-- argument Visibility: default -->
      <element name="DeleteDirectory.OnlyChilds"><short/></element>
      <!-- function Visibility: default -->
      <element name="ProgramDirectory">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="ProgramDirectory.Result"><short/></element>
      <!-- function Visibility: default -->
      <element name="DirectoryIsWritable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="DirectoryIsWritable.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="DirectoryIsWritable.DirectoryName"><short/></element>
      <!-- constant Visibility: default -->
      <element name="PascalFileExt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: default -->
      <element name="ExtractFileNameOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="ExtractFileNameOnly.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ExtractFileNameOnly.AFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="ExtractFileNameWithoutExt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="ExtractFileNameWithoutExt.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ExtractFileNameWithoutExt.AFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="CompareFileExt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="CompareFileExt.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareFileExt.Filename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareFileExt.Ext"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareFileExt.CaseSensitive"><short/></element>
      <!-- function Visibility: default -->
      <element name="FilenameIsPascalUnit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FilenameIsPascalUnit.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FilenameIsPascalUnit.Filename"><short/></element>
      <!-- function Visibility: default -->
      <element name="AppendPathDelim">
        <short>Appends the path delimeter to the path.</short>
        <descr>AppendPathDelim checks if the last character in the path is the path delimeter. If it isn't the path delimeter, it is added, otherwise the unmodified path is returned.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="AppendPathDelim.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="AppendPathDelim.Path"><short/></element>
      <!-- function Visibility: default -->
      <element name="ChompPathDelim">
        <short>Removes trailing path delimeter</short>
        <descr>ChompPathDelim checks if the last character in the path is the path delimeter. If it is the path delimeter, it is removed, otherwise the unmodified path is returned.</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="ChompPathDelim.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ChompPathDelim.Path"><short/></element>
      <!-- function Visibility: default -->
      <element name="TrimFilename">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TrimFilename.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TrimFilename.AFilename"><short/></element>
      <!-- function Visibility: default -->
      <element name="CleanAndExpandFilename">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="CleanAndExpandFilename.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CleanAndExpandFilename.Filename"><short/></element>
      <!-- function Visibility: default -->
      <element name="CleanAndExpandDirectory">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="CleanAndExpandDirectory.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CleanAndExpandDirectory.Filename"><short/></element>
      <!-- function Visibility: default -->
      <element name="CreateAbsoluteSearchPath">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="CreateAbsoluteSearchPath.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CreateAbsoluteSearchPath.SearchPath"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CreateAbsoluteSearchPath.BaseDirectory"><short/></element>
      <!-- function Visibility: default -->
      <element name="CreateRelativePath">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="CreateRelativePath.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CreateRelativePath.Filename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CreateRelativePath.BaseDirectory"><short/></element>
      <!-- function Visibility: default -->
      <element name="FileIsInPath">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FileIsInPath.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsInPath.Filename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsInPath.Path"><short/></element>
      <!-- function Visibility: default -->
      <element name="FileIsInDirectory">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FileIsInDirectory.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsInDirectory.Filename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FileIsInDirectory.Directory"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TSearchFileInPathFlag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TSearchFileInPathFlag.sffDontSearchInBasePath"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TSearchFileInPathFlag.sffSearchLoUpCase"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TSearchFileInPathFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="AllDirectoryEntriesMask">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: default -->
      <element name="GetAllFilesMask">
        <short>File mask representing all files suitable for showing in a file filter.</short>
        <descr>GetAllFilesMask returns a File Mask suitable for showing in a filter of a Open File Dialog.


 windows '*.*' is returned, on other operating systems just '*'.</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="GetAllFilesMask.Result"><short/></element>
      <!-- function Visibility: default -->
      <element name="GetExeExt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="GetExeExt.Result"><short/></element>
      <!-- function Visibility: default -->
      <element name="SearchFileInPath">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="SearchFileInPath.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchFileInPath.Filename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchFileInPath.BasePath"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchFileInPath.SearchPath"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchFileInPath.Delimiter"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchFileInPath.Flags"><short/></element>
      <!-- function Visibility: default -->
      <element name="SearchAllFilesInPath">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="SearchAllFilesInPath.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchAllFilesInPath.Filename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchAllFilesInPath.BasePath"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchAllFilesInPath.SearchPath"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchAllFilesInPath.Delimiter"><short/></element>
      <!-- argument Visibility: default -->
      <element name="SearchAllFilesInPath.Flags"><short/></element>
      <!-- function Visibility: default -->
      <element name="FindDiskFilename">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FindDiskFilename.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FindDiskFilename.Filename"><short/></element>
      <!-- function Visibility: default -->
      <element name="FindDiskFileCaseInsensitive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FindDiskFileCaseInsensitive.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FindDiskFileCaseInsensitive.Filename"><short/></element>
      <!-- function Visibility: default -->
      <element name="FindDefaultExecutablePath">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FindDefaultExecutablePath.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="FindDefaultExecutablePath.Executable"><short/></element>
      <!-- object Visibility: default -->
      <element name="TFileIterator">
        <short>Class for getting info about found file or directory.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFileIterator.FPath">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFileIterator.FLevel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFileIterator.FFileInfo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFileIterator.FSearching">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TFileIterator.GetFileName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFileIterator.GetFileName.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TFileIterator.Stop">
        <short>Stops the searching process.</short>
        <descr/>
        <errors/>
        <seealso>
		  <link id="TFileSearcher.Search"/>
		</seealso>
      </element>
      <!-- function Visibility: public -->
      <element name="TFileIterator.IsDirectory">
        <short>If the current file is directory.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TFileIterator.IsDirectory.Result"><short/></element>
      <!-- property Visibility: public -->
      <element name="TFileIterator.FileName">
        <short>Gets the current file name.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFileIterator.FileInfo">
        <short>Gets the current file info.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFileIterator.Level">
        <short>Gets the current file path level relative to base search path.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFileIterator.Path">
        <short>Gets the current file path.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFileIterator.Searching">
        <short>If the searching is in process.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TFileFoundEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFileFoundEvent.FileIterator"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TDirectoryFoundEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDirectoryFoundEvent.FileIterator"><short/></element>
      <!-- object Visibility: default -->
      <element name="TFileSearcher">
        <short>Class for searching files.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFileSearcher.FOnFileFound">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TFileSearcher.FOnDirectoryFound">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TFileSearcher.RaiseSearchingError">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TFileSearcher.DoDirectoryEnter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TFileSearcher.DoDirectoryFound">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TFileSearcher.DoFileFound">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TFileSearcher.Create">
        <short>Creates new file searcher object.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TFileSearcher.Search">
        <short>Searches for files in specified path with passed options.</short>
        <descr>
		  Searches for files in specified path. When file is found the OnFileFound event is invoked, for directories
		  OnDirectoryFound event. You can abort searching process by calling Stop method in this events.
		</descr>
        <errors/>
        <seealso>
		  <link id="TFileSearcher.OnFileFound"/>
		  <link id="TFileSearcher.OnDirectoryFound"/>
		  <link id="TFileIterator.Stop"/>
		</seealso>
      </element>
      <!-- argument Visibility: default -->
      <element name="TFileSearcher.Search.ASearchPath"><short>Base path for searching files.</short></element>
      <!-- argument Visibility: default -->
      <element name="TFileSearcher.Search.ASearchMask"><short>Mask which file should match.</short></element>
      <!-- argument Visibility: default -->
      <element name="TFileSearcher.Search.ASearchSubDirs"><short>If search recursively sub directories.</short></element>
      <!-- property Visibility: public -->
      <element name="TFileSearcher.OnDirectoryFound">
        <short>Is invoked when directory is found.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TFileSearcher.OnFileFound">
        <short>Is invoked when file is found.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: default -->
      <element name="FindAllFiles">
        <short>Returns the list of found files in the specified path according to passed options.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FindAllFiles.Result"><short>List of found files.</short></element>
      <!-- argument Visibility: default -->
      <element name="FindAllFiles.SearchPath"><short>Base path for searching files.</short></element>
      <!-- argument Visibility: default -->
      <element name="FindAllFiles.SearchMask"><short>Mask which file should match.</short></element>
      <!-- argument Visibility: default -->
      <element name="FindAllFiles.SearchSubDirs"><short>If search recursively sub directories.</short></element>
      <!-- function Visibility: default -->
      <element name="ReadFileToString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="ReadFileToString.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ReadFileToString.Filename"><short/></element>
      <!-- function Visibility: default -->
      <element name="CopyFile">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="CopyFile.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CopyFile.SrcFilename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CopyFile.DestFilename"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CopyFile.PreserveTime"><short/></element>
      <!-- function Visibility: default -->
      <element name="GetTempFilename">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="GetTempFilename.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="GetTempFilename.Directory"><short/></element>
      <!-- argument Visibility: default -->
      <element name="GetTempFilename.Prefix"><short/></element>
    </module>
    <!-- FileUtil -->
  </package>
</fpdoc-descriptions>
