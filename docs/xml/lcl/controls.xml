<?xml version="1.0" encoding="ISO8859-1"?>
<fpdoc-descriptions>
<package name="lcl">

<!--
  ====================================================================
    Controls
  ====================================================================
-->

<module name="Controls">
<short></short>
<descr>
</descr>

<!-- unresolved type reference Visibility: default -->
<element name="Classes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="SysUtils">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="DynHashArray">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLStrConsts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="GraphType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Graphics">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LMessages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLIntf">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="InterfaceBase">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="ImgList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="UTrace">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="PropertyStorage">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Menus">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="ActnList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLClasses">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_BASE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_ACTIVATE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_DEACTIVATE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_GOTFOCUS">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_LOSTFOCUS">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_CANCELMODE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_DIALOGKEY">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_DIALOGCHAR">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_FOCUSCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_PARENTFONTCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_PARENTCOLORCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_HITTEST">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_VISIBLECHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_ENABLEDCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_COLORCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_FONTCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_CURSORCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_CTL3DCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_PARENTCTL3DCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_TEXTCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_MOUSEENTER">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_MOUSELEAVE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_MENUCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_APPKEYDOWN">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_APPSYSCOMMAND">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_BUTTONPRESSED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_SHOWINGCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_ENTER">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_EXIT">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_DESIGNHITTEST">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_ICONCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_WANTSPECIALKEY">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_INVOKEHELP">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_WINDOWHOOK">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_RELEASE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_SHOWHINTCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_PARENTSHOWHINTCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_SYSCOLORCHANGE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_WININICHANGE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_FONTCHANGE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_TIMECHANGE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_TABSTOPCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_UIACTIVATE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_UIDEACTIVATE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_DOCWINDOWACTIVATE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_CONTROLLISTCHANGE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_GETDATALINK">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_CHILDKEY">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_DRAG">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_HINTSHOW">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_DIALOGHANDLE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_ISTOOLCONTROL">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_RECREATEWND">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_INVALIDATE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_SYSFONTCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_CONTROLCHANGE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_CHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_DOCKCLIENT">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_UNDOCKCLIENT">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_FLOAT">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_BORDERCHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_BIDIMODECHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_PARENTBIDIMODECHANGED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_ALLCHILDRENFLIPPED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_ACTIONUPDATE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_ACTIONEXECUTE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_HINTSHOWPAUSE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_DOCKNOTIFICATION">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CM_MOUSEWHEEL">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_BASE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_CHARTOITEM">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_COMMAND">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_COMPAREITEM">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_CTLCOLORBTN">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_CTLCOLORDLG">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_CTLCOLOREDIT">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_CTLCOLORLISTBOX">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_CTLCOLORMSGBOX">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_CTLCOLORSCROLLBAR">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_CTLCOLORSTATIC">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_DELETEITEM">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_DRAWITEM">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_HSCROLL">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_MEASUREITEM">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_PARENTNOTIFY">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_VKEYTOITEM">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_VSCROLL">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_KEYDOWN">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_KEYUP">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_CHAR">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_SYSKEYUP">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_SYSKEYDOWN">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_SYSCHAR">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_NOTIFY">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrNone">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrOK">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrCancel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrAbort">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrRetry">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrIgnore">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrYes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrNo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrAll">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrNoToAll">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrYesToAll">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="mrLast">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- alias type Visibility: default -->
<element name="TTranslateString">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TWinControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- "class of" type Visibility: default -->
<element name="TWinControlClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- "type" alias type Visibility: default -->
<element name="TDate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- "type" alias type Visibility: default -->
<element name="TTime">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TCMMouseWheel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMMouseWheel.MSg">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMMouseWheel.ShiftState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMMouseWheel.Unused">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMMouseWheel.WheelData">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- alias type Visibility: default -->
<element name="TCMHitTest">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TCMControlChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMControlChange.Msg">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMControlChange.Control">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMControlChange.Inserting">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMControlChange.Result">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- alias type Visibility: default -->
<element name="TCMDialogChar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- alias type Visibility: default -->
<element name="TCMDialogKey">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TAlign">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAlign.alNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAlign.alTop">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAlign.alBottom">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAlign.alLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAlign.alRight">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAlign.alClient">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAlign.alCustom">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TAlignSet">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TAnchorKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAnchorKind.akTop">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAnchorKind.akLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAnchorKind.akRight">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAnchorKind.akBottom">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TAnchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- alias type Visibility: default -->
<element name="TCaption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- range type Visibility: default -->
<element name="TCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TFormStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStyle.fsNormal">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStyle.fsMDIChild">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStyle.fsMDIFORM">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStyle.fsStayOnTop">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormStyle.fsSplash">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TFormBorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormBorderStyle.bsNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormBorderStyle.bsSingle">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormBorderStyle.bsSizeable">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormBorderStyle.bsDialog">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormBorderStyle.bsToolWindow">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TFormBorderStyle.bsSizeToolWin">
<short></short>
</element>

<!-- range type Visibility: default -->
<element name="TBorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- alias type Visibility: default -->
<element name="TControlBorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TControlRoleForForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlRoleForForm.crffDefault">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlRoleForForm.crffCancel">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TControlRolesForForm">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- alias type Visibility: default -->
<element name="TBevelCut">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TMouseButton">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TMouseButton.mbLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TMouseButton.mbRight">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TMouseButton.mbMiddle">
<short></short>
</element>

<!-- constant Visibility: default -->
<element name="fsAllStayOnTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crHigh">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crDefault">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crNone">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crArrow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crCross">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crIBeam">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crSizeNESW">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crSizeNS">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crSizeNWSE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crSizeWE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crUpArrow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crHourGlass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crNoDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crHSplit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crVSplit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crMultiDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crSQLWait">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crNo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crAppStart">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crHelp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crHandPoint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crSizeAll">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="crLow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TWndMethod">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWndMethod.TheMessage">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TControlStyleType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csAcceptsControls">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csCaptureMouse">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csDesignInteractive">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csClickEvents">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csFramed">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csSetCaption">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csOpaque">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csDoubleClicks">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csTripleClicks">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csQuadClicks">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csFixedWidth">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csFixedHeight">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csNoDesignVisible">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csReplicatable">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csNoStdEvents">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csDisplayDragImage">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csReflector">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csActionClient">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csMenuEvents">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csNoFocus">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csNeedsBorderPaint">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csParentBackground">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csDesignNoSmoothResize">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csDesignFixedBounds">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csHasDefaultAction">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStyleType.csHasCancelAction">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TControlStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="csMultiClicks">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TControlStateType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csLButtonDown">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csClicked">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csPalette">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csReadingState">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csAlignmentNeeded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csFocusing">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csCreating">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csPaintCopy">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csCustomPaint">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csDestroyingHandle">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csDocking">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlStateType.csVisibleSetInLoading">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TControlState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TControlCanvas">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlCanvas.FControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlCanvas.FDeviceContext">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlCanvas.FWindowHandle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TControlCanvas.SetControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlCanvas.SetControl.AControl">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlCanvas.CreateFont">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlCanvas.CreateHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TControlCanvas.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- destructor Visibility: public -->
<element name="TControlCanvas.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControlCanvas.FreeHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControlCanvas.Control">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TDragImageList">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TKeyEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TKeyEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TKeyEvent.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TKeyEvent.Shift">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TKeyPressEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TKeyPressEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TKeyPressEvent.Key">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TUTF8KeyPressEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TUTF8KeyPressEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TUTF8KeyPressEvent.UTF8Key">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TMouseEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TMouseEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseEvent.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseEvent.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseEvent.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseEvent.Y">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TMouseMoveEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TMouseMoveEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseMoveEvent.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseMoveEvent.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseMoveEvent.Y">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TMouseWheelEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TMouseWheelEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseWheelEvent.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseWheelEvent.WheelDelta">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseWheelEvent.MousePos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseWheelEvent.Handled">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TMouseWheelUpDownEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TMouseWheelUpDownEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseWheelUpDownEvent.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseWheelUpDownEvent.MousePos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TMouseWheelUpDownEvent.Handled">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TDragObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TDragState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragState.dsDragEnter">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragState.dsDragLeave">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragState.dsDragMove">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TDragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragMode.dmManual">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragMode.dmAutomatic">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TDragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragKind.dkDrag">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragKind.dkDock">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TDragOperation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragOperation.dopNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragOperation.dopDrag">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragOperation.dopDock">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TDragMessage">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragMessage.dmDragEnter">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragMessage.dmDragLeave">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragMessage.dmDragMove">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragMessage.dmDragDrop">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragMessage.dmDragCancel">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDragMessage.dmFindTarget">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TDragOverEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragOverEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragOverEvent.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragOverEvent.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragOverEvent.Y">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragOverEvent.State">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragOverEvent.Accept">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TDragDropEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragDropEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragDropEvent.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragDropEvent.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragDropEvent.Y">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TStartDragEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStartDragEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TStartDragEvent.DragObject">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TEndDragEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TEndDragEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TEndDragEvent.Target">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TEndDragEvent.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TEndDragEvent.Y">
<short></short>
</element>

<!-- pointer type Visibility: default -->
<element name="PDragRec">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TDragRec">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDragRec.Pos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDragRec.Source">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDragRec.Target">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDragRec.Docking">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TCMDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMDrag.Msg">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMDrag.DragMessage">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMDrag.Reserved1">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMDrag.Reserved2">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMDrag.DragRec">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TCMDrag.Result">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TDragObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragObject.FDragTarget">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragObject.FDragHandle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragObject.FDragPos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragObject.FDragTargetPos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragObject.FDropped">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragObject.FMouseDeltaX">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragObject.FMouseDeltaY">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragObject.FCancelling">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TDragObject.Capture">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDragObject.Capture.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragObject.Finished">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.Finished.Target">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.Finished.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.Finished.Y">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.Finished.Accepted">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TDragObject.GetDragCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDragObject.GetDragCursor.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.GetDragCursor.Accepted">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.GetDragCursor.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.GetDragCursor.Y">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TDragObject.GetDragImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDragObject.GetDragImages.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragObject.MouseMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseMove.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseMove.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseMove.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragObject.MouseDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseDown.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseDown.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseDown.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseDown.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragObject.MouseUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseUp.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseUp.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseUp.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.MouseUp.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragObject.CaptureChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.CaptureChanged.OldCaptureControl">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragObject.KeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.KeyDown.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.KeyDown.Shift">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragObject.KeyUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.KeyUp.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.KeyUp.Shift">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TDragObject.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TDragObject.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragObject.Assign.Source">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TDragObject.GetName">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDragObject.GetName.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TDragObject.HideDragImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TDragObject.Instance">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDragObject.Instance.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TDragObject.ShowDragImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragObject.Cancelling">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragObject.DragHandle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragObject.DragPos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragObject.DragTargetPos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragObject.DragTarget">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragObject.Dropped">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragObject.MouseDeltaX">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragObject.MouseDeltaY">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- "class of" type Visibility: default -->
<element name="TDragObjectClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TBaseDragControlObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TBaseDragControlObject.FControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TBaseDragControlObject.EndDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TBaseDragControlObject.EndDrag.Target">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TBaseDragControlObject.EndDrag.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TBaseDragControlObject.EndDrag.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TBaseDragControlObject.Finished">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TBaseDragControlObject.Finished.Target">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TBaseDragControlObject.Finished.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TBaseDragControlObject.Finished.Y">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TBaseDragControlObject.Finished.Accepted">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TBaseDragControlObject.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TBaseDragControlObject.Create.AControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TBaseDragControlObject.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TBaseDragControlObject.Assign.Source">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TBaseDragControlObject.Control">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TDragControlObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TDragControlObject.GetDragCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDragControlObject.GetDragCursor.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragControlObject.GetDragCursor.Accepted">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragControlObject.GetDragCursor.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragControlObject.GetDragCursor.Y">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TDragControlObject.GetDragImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDragControlObject.GetDragImages.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TDragControlObject.HideDragImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TDragControlObject.ShowDragImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TDragDockObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TDockOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDockOrientation.doNoOrient">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDockOrientation.doHorizontal">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDockOrientation.doVertical">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TDockDropEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockDropEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockDropEvent.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockDropEvent.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockDropEvent.Y">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TDockOverEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockOverEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockOverEvent.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockOverEvent.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockOverEvent.Y">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockOverEvent.State">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockOverEvent.Accept">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TUnDockEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TUnDockEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TUnDockEvent.Client">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TUnDockEvent.NewTarget">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TUnDockEvent.Allow">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TStartDockEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStartDockEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TStartDockEvent.DragObject">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TGetSiteInfoEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TGetSiteInfoEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TGetSiteInfoEvent.DockClient">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TGetSiteInfoEvent.InfluenceRect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TGetSiteInfoEvent.MousePos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TGetSiteInfoEvent.CanDock">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TDragDockObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragDockObject.FBrush">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragDockObject.FDockRect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragDockObject.FDropAlign">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragDockObject.FDropOnControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDragDockObject.FFloating">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TDragDockObject.SetBrush">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.SetBrush.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragDockObject.AdjustDockRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.AdjustDockRect.ARect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragDockObject.DrawDragDockImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragDockObject.EndDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.EndDrag.Target">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.EndDrag.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.EndDrag.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDragDockObject.EraseDragDockImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TDragDockObject.GetDragCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDragDockObject.GetDragCursor.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.GetDragCursor.Accepted">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.GetDragCursor.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.GetDragCursor.Y">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TDragDockObject.GetFrameWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDragDockObject.GetFrameWidth.Result">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TDragDockObject.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.Create.AControl">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TDragDockObject.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TDragDockObject.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDragDockObject.Assign.Source">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TDragDockObject.Brush">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragDockObject.DockRect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragDockObject.DropAlign">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragDockObject.DropOnControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragDockObject.Floating">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDragDockObject.FrameWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TDockManager">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.GetControlBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.GetControlBounds.Control">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.GetControlBounds.AControlBounds">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.InsertControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.InsertControl.Control">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.InsertControl.InsertAt">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.InsertControl.DropCtl">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.LoadFromStream">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.LoadFromStream.Stream">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.PaintSite">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.PaintSite.DC">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.PositionDockRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.PositionDockRect.Client">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.PositionDockRect.DropCtl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.PositionDockRect.DropAlign">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.PositionDockRect.DockRect">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.RemoveControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.RemoveControl.Control">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.ResetBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.ResetBounds.Force">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.SaveToStream">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.SaveToStream.Stream">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TDockManager.SetReplacingControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockManager.SetReplacingControl.Control">
<short></short>
</element>

<!-- range type Visibility: default -->
<element name="TConstraintSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TSizeConstraintsOption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TSizeConstraintsOption.scoAdviceWidthAsMin">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TSizeConstraintsOption.scoAdviceWidthAsMax">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TSizeConstraintsOption.scoAdviceHeightAsMin">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TSizeConstraintsOption.scoAdviceHeightAsMax">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TSizeConstraintsOptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TSizeConstraints">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FMaxHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FMaxInterfaceHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FMaxInterfaceWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FMaxWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FMinHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FMinInterfaceHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FMinInterfaceWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FMinWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FOnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TSizeConstraints.FOptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TSizeConstraints.SetOptions">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.SetOptions.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TSizeConstraints.Change">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TSizeConstraints.AssignTo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.AssignTo.Dest">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TSizeConstraints.SetMaxHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.SetMaxHeight.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TSizeConstraints.SetMaxWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.SetMaxWidth.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TSizeConstraints.SetMinHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.SetMinHeight.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TSizeConstraints.SetMinWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.SetMinWidth.Value">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TSizeConstraints.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.Create.AControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TSizeConstraints.UpdateInterfaceConstraints">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TSizeConstraints.SetInterfaceConstraints">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.SetInterfaceConstraints.MinW">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.SetInterfaceConstraints.MinH">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.SetInterfaceConstraints.MaxW">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.SetInterfaceConstraints.MaxH">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TSizeConstraints.EffectiveMinWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TSizeConstraints.EffectiveMinWidth.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TSizeConstraints.EffectiveMinHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TSizeConstraints.EffectiveMinHeight.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TSizeConstraints.EffectiveMaxWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TSizeConstraints.EffectiveMaxWidth.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TSizeConstraints.EffectiveMaxHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TSizeConstraints.EffectiveMaxHeight.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TSizeConstraints.MinMaxWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TSizeConstraints.MinMaxWidth.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.MinMaxWidth.Width">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TSizeConstraints.MinMaxHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TSizeConstraints.MinMaxHeight.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TSizeConstraints.MinMaxHeight.Height">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TSizeConstraints.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TSizeConstraints.MaxInterfaceHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TSizeConstraints.MaxInterfaceWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TSizeConstraints.MinInterfaceHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TSizeConstraints.MinInterfaceWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TSizeConstraints.Control">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TSizeConstraints.Options">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSizeConstraints.MaxHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSizeConstraints.MaxWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSizeConstraints.MinHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSizeConstraints.MinWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TConstrainedResizeEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TConstrainedResizeEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TConstrainedResizeEvent.MinWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TConstrainedResizeEvent.MinHeight">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TConstrainedResizeEvent.MaxWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TConstrainedResizeEvent.MaxHeight">
<short></short>
</element>

<!-- range type Visibility: default -->
<element name="TSpacingSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TControlBorderSpacing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlBorderSpacing.FAround">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlBorderSpacing.FBottom">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlBorderSpacing.FControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlBorderSpacing.FLeft">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlBorderSpacing.FOnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlBorderSpacing.FRight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlBorderSpacing.FTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TControlBorderSpacing.SetAround">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.SetAround.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlBorderSpacing.SetBottom">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.SetBottom.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlBorderSpacing.SetLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.SetLeft.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlBorderSpacing.SetRight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.SetRight.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlBorderSpacing.SetTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.SetTop.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlBorderSpacing.Change">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TControlBorderSpacing.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.Create.OwnerControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControlBorderSpacing.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.Assign.Source">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControlBorderSpacing.AssignTo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.AssignTo.Dest">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControlBorderSpacing.IsEqual">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlBorderSpacing.IsEqual.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.IsEqual.Spacing">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControlBorderSpacing.GetSpaceAround">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlBorderSpacing.GetSpaceAround.SpaceAround">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TControlBorderSpacing.Control">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControlBorderSpacing.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlBorderSpacing.Left">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlBorderSpacing.Top">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlBorderSpacing.Right">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlBorderSpacing.Bottom">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlBorderSpacing.Around">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TControlActionLink">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: protected -->
<element name="TControlActionLink.FClient">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlActionLink.AssignClient">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.AssignClient.AClient">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlActionLink.IsCaptionLinked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlActionLink.IsCaptionLinked.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlActionLink.IsEnabledLinked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlActionLink.IsEnabledLinked.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlActionLink.IsHelpLinked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlActionLink.IsHelpLinked.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlActionLink.IsHintLinked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlActionLink.IsHintLinked.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlActionLink.IsVisibleLinked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlActionLink.IsVisibleLinked.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlActionLink.IsOnExecuteLinked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlActionLink.IsOnExecuteLinked.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControlActionLink.DoShowHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlActionLink.DoShowHint.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.DoShowHint.HintStr">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlActionLink.SetCaption">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.SetCaption.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlActionLink.SetEnabled">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.SetEnabled.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlActionLink.SetHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.SetHint.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlActionLink.SetHelpContext">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.SetHelpContext.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlActionLink.SetHelpKeyword">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.SetHelpKeyword.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlActionLink.SetHelpType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.SetHelpType.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlActionLink.SetVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.SetVisible.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlActionLink.SetOnExecute">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlActionLink.SetOnExecute.Value">
<short></short>
</element>

<!-- "class of" type Visibility: default -->
<element name="TControlActionLinkClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- range type Visibility: default -->
<element name="TTabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TControlShowHintEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlShowHintEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControlShowHintEvent.HintInfo">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TContextPopupEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TContextPopupEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TContextPopupEvent.MousePos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TContextPopupEvent.Handled">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TControlFlag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlFlag.cfRequestAlignNeeded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlFlag.cfClientWidthLoaded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlFlag.cfClientHeightLoaded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlFlag.cfLastAlignedBoundsValid">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlFlag.cfBoundsRectForNewParentValid">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlFlag.cfPreferredSizeValid">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TControlFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TControlHandlerType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlHandlerType.chtOnResize">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TControlHandlerType.chtOnChangeBounds">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FActionLink">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FAlign">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FAnchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FAutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FBaseBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FBaseBoundsLock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FBaseParentClientSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FBorderSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FBoundsRectForNewParent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FCaption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FConstraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FControlFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FControlHandlers">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FControlStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FCtl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FDockOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FDragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FDragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FDragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FEnabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FFloatingDockSiteClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FHelpContext">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FHelpKeyword">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FHelpType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FHostDockSite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FIsControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.fLastAlignedBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FLastChangebounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FLastDoChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FLastResizeClientHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FLastResizeClientWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FLastResizeHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FLastResizeWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FLeft">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FLoadedClientSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FLRDockWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FMouseEntered">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnConstrainedResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnEditingDone">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnEndDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnMouseEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnMouseLeave">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnQuadClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnStartDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FOnTripleClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FParent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FPopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FPreferredWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FPreferredHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FSessionProperties">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FSizeLock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FTabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FTabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FTBDockHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FUndockHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FUndockWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FVisible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControl.FWindowProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.DoActionChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoActionChange.Sender">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetBoundsRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetBoundsRect.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetClientHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetClientHeight.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetClientWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetClientWidth.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetLRDockWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetLRDockWidth.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetMouseCapture">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetMouseCapture.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetTBDockHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetTBDockHeight.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetTabOrder">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetTabOrder.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetText.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetUndockHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetUndockHeight.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.GetUndockWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetUndockWidth.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsCaptionStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsCaptionStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsColorStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsColorStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsEnabledStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsEnabledStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsFontStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsFontStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsHintStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsHintStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsHelpContextStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsHelpContextStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsHelpKeyWordStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsHelpKeyWordStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsOnClickStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsOnClickStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsShowHintStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsShowHintStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TControl.IsVisibleStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsVisibleStored.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.CheckMenuPopup">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CheckMenuPopup.P">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.DoBeforeMouseMessage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.DoConstrainedResize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoConstrainedResize.NewWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoConstrainedResize.NewHeight">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.DoMouseDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoMouseDown.Message">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoMouseDown.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoMouseDown.Shift">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.DoMouseUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoMouseUp.Message">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoMouseUp.Button">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetBorderSpacing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBorderSpacing.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetBoundsRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBoundsRect.ARect">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetBoundsRectForNewParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBoundsRectForNewParent.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetClientHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetClientHeight.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetClientSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetClientSize.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetClientWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetClientWidth.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetConstraints">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetConstraints.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetCursor.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetDragCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetDragCursor.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetFont">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetFont.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetHeight.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetHelpContext">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetHelpContext.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetHelpKeyword">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetHelpKeyword.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetHostDockSite">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetHostDockSite.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetLeft.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetMouseCapture">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetMouseCapture.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetParentShowHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetParentShowHint.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetParentColor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetParentColor.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetPopupMenu">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetPopupMenu.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetShowHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetShowHint.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetTabOrder">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetTabOrder.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetTabStop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetTabStop.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetText.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetTop.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetVisible.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.SetWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetWidth.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControl.UpdateTabOrder">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.UpdateTabOrder.value">
<short></short>
</element>

<!-- variable Visibility: protected -->
<element name="TControl.FControlState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: protected -->
<element name="TControl.AutoSizing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.AdjustSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoAutoSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TControl.AutoSizeCanStart">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.AutoSizeCanStart.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.AutoSizeDelayed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.AutoSizeDelayed.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetAlign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetAlign.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetAnchors">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetAnchors.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetAutoSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetAutoSize.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.BoundsChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoConstraintsChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoConstraintsChange.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoBorderSpacingChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoBorderSpacingChange.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SendMoveSizeMessages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SendMoveSizeMessages.SizeChanged">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SendMoveSizeMessages.PosChanged">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.ConstrainedResize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ConstrainedResize.MinWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ConstrainedResize.MinHeight">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ConstrainedResize.MaxWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ConstrainedResize.MaxHeight">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CalculatePreferredSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CalculatePreferredSize.PreferredWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CalculatePreferredSize.PreferredHeight">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoOnResize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoOnChangeBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.Resize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.RequestAlign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.UpdateBaseBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.UpdateBaseBounds.StoreBounds">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.UpdateBaseBounds.StoreParentClientSize">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.UpdateBaseBounds.UseLoadedValues">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.LockBaseBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.UnlockBaseBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.UpdateAnchorRules">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.ChangeBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ChangeBounds.ALeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ChangeBounds.ATop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ChangeBounds.AWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ChangeBounds.AHeight">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoSetBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoSetBounds.ALeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoSetBounds.ATop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoSetBounds.AWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoSetBounds.AHeight">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.ChangeScale">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ChangeScale.Multiplier">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ChangeScale.Divider">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.CanAutoSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.CanAutoSize.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CanAutoSize.NewWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CanAutoSize.NewHeight">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetAlignedBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetAlignedBounds.aLeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetAlignedBounds.aTop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetAlignedBounds.aWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetAlignedBounds.aHeight">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetClientOrigin">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetClientOrigin.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetClientRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetClientRect.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetScrolledClientRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetScrolledClientRect.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetChildsRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetChildsRect.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.GetChildsRect.Scrolled">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetClientScrollOffset">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetClientScrollOffset.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetControlOrigin">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetControlOrigin.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMLButtonDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMLButtonDown.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMRButtonDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMRButtonDown.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMMButtonDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMMButtonDown.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMLButtonDBLCLK">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMLButtonDBLCLK.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMRButtonDBLCLK">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMRButtonDBLCLK.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMMButtonDBLCLK">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMMButtonDBLCLK.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMLButtonTripleCLK">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMLButtonTripleCLK.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMRButtonTripleCLK">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMRButtonTripleCLK.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMMButtonTripleCLK">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMMButtonTripleCLK.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMLButtonQuadCLK">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMLButtonQuadCLK.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMRButtonQuadCLK">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMRButtonQuadCLK.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMMButtonQuadCLK">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMMButtonQuadCLK.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMMouseMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMMouseMove.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMLButtonUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMLButtonUp.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMRButtonUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMRButtonUp.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMMButtonUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMMButtonUp.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMDragStart">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMDragStart.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMMove.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMSize.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WMWindowPosChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WMWindowPosChanged.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.LMCaptureChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.LMCaptureChanged.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CMEnabledChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CMEnabledChanged.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CMHitTest">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CMHitTest.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CMMouseEnter">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CMMouseEnter.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CMMouseLeave">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CMMouseLeave.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CMHintShow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CMHintShow.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CMParentColorChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CMParentColorChanged.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CMParentShowHintChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CMParentShowHintChanged.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CMVisibleChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CMVisibleChanged.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CalculateDockSizes">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TControl.CreateFloatingDockSite">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.CreateFloatingDockSite.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CreateFloatingDockSite.Bounds">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetDockEdge">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetDockEdge.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.GetDockEdge.MousePos">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetFloating">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetFloating.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetFloatingDockSiteClass">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetFloatingDockSiteClass.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.BeginAutoDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DefaultDockImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DefaultDockImage.DragDockObject">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DefaultDockImage.Erase">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DockTrackNoTarget">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DockTrackNoTarget.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DockTrackNoTarget.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DockTrackNoTarget.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoDock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoDock.NewDockSite">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoDock.ARect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoDragMsg">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoDragMsg.DragMsg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoEndDock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoEndDock.Target">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoEndDock.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoEndDock.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoEndDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoEndDrag.Target">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoEndDrag.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoEndDrag.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoStartDock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoStartDock.DragObject">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoStartDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoStartDrag.DragObject">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DragCanceled">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DragOver">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DragOver.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DragOver.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DragOver.Y">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DragOver.State">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DragOver.Accept">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DrawDragDockImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DrawDragDockImage.DragDockObject">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.EraseDragDockImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.EraseDragDockImage.DragDockObject">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.PositionDockRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.PositionDockRect.DragDockObject">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetDragMode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetDragMode.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.Click">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DblClick">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.TripleClick">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.QuadClick">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.MouseDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseDown.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseDown.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseDown.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseDown.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.MouseMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseMove.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseMove.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseMove.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.MouseUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseUp.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseUp.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseUp.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.MouseUp.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.MouseEnter">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.MouseLeave">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.Changed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetPalette">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetPalette.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.ChildClassAllowed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ChildClassAllowed.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ChildClassAllowed.ChildClass">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DefineProperties">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DefineProperties.Filer">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.AssignTo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.AssignTo.Dest">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.InvalidateControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.InvalidateControl.CtrlIsVisible">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.InvalidateControl.CtrlIsOpaque">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.InvalidateControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.InvalidateControl.CtrlIsVisible">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.InvalidateControl.CtrlIsOpaque">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.InvalidateControl.IgnoreWinControls">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.FontChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.FontChanged.Sender">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetAction.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.RealGetText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.RealGetText.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.RealSetText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.RealSetText.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetAction.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetColor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetColor.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetEnabled">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetEnabled.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetHint.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetName">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetName.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetParent.NewParent">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetParentComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetParentComponent.NewParentComponent">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.WndProc">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.WndProc.TheMessage">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.ParentFormHandleInitialized">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.CaptureChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.Notification.Operation">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.CanTab">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.CanTab.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.Focused">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.Focused.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.SetFocus">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetDeviceContext">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetDeviceContext.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.GetDeviceContext.WindowHandle">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetEnabled">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetEnabled.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetPopupMenu">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetPopupMenu.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoOnShowHint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoOnShowHint.HintInfo">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.VisibleChanging">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.AddHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.AddHandler.HandlerType">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.AddHandler.AMethod">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.AddHandler.AsLast">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.RemoveHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.RemoveHandler.HandlerType">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.RemoveHandler.AMethod">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.DoContextPopup">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoContextPopup.MousePos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DoContextPopup.Handled">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TControl.GetActionLinkClass">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetActionLinkClass.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControl.ActionChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ActionChange.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ActionChange.CheckDefaults">
<short></short>
</element>

<!-- property Visibility: protected -->
<element name="TControl.ActionLink">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.Ctl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.DragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.MouseCapture">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.SessionProperties">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.Text">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnConstrainedResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnTripleClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnQuadClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnEndDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnMouseEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnMouseLeave">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnStartDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TControl.OnEditingDone">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: public -->
<element name="TControl.FCompStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.DragDrop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DragDrop.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DragDrop.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.DragDrop.Y">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.Dock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.Dock.NewDockSite">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.Dock.ARect">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.ManualDock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ManualDock.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ManualDock.NewDockSite">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ManualDock.DropControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ManualDock.ControlSide">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.ManualFloat">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ManualFloat.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ManualFloat.TheScreenRect">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.ReplaceDockedControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ReplaceDockedControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ReplaceDockedControl.Control">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ReplaceDockedControl.NewDockSite">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ReplaceDockedControl.DropControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ReplaceDockedControl.ControlSide">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TControl.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TControl.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TControl.PerformTab">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.PerformTab.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.PerformTab.ForwardTab">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.EditingDone">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.ExecuteDefaultAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.ExecuteCancelAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.BeginDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.BeginDrag.Immediate">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.BeginDrag.Threshold">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.BeginDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.BeginDrag.Immediate">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.BringToFront">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TControl.ColorIsStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ColorIsStored.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.HasParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.HasParent.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.IsParentOf">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsParentOf.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.IsParentOf.AControl">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.IsVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.IsVisible.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.Refresh">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.Repaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.Invalidate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.AddControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TControl.CheckChildClassAllowed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.CheckChildClassAllowed.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CheckChildClassAllowed.ChildClass">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CheckChildClassAllowed.ExceptionOnInvalid">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.CheckNewParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.CheckNewParent.AParent">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.SendToBack">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.SetTempCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetTempCursor.Value">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.UpdateRolesForForm">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.SetBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBounds.aLeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBounds.aTop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBounds.aWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBounds.aHeight">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.SetInitialBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetInitialBounds.aLeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetInitialBounds.aTop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetInitialBounds.aWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetInitialBounds.aHeight">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.SetBoundsKeepBase">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBoundsKeepBase.aLeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBoundsKeepBase.aTop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBoundsKeepBase.aWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBoundsKeepBase.aHeight">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetBoundsKeepBase.Lock">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.GetPreferredSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.GetPreferredSize.PreferredWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.GetPreferredSize.PreferredHeight">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.GetPreferredSize.Raw">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.InvalidatePreferredSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TControl.GetTextBuf">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetTextBuf.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.GetTextBuf.Buffer">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.GetTextBuf.BufSize">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.GetTextLen">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.GetTextLen.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.SetTextBuf">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetTextBuf.Buffer">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.Perform">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.Perform.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.Perform.Msg">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.Perform.WParam">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.Perform.LParam">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.ScreenToClient">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ScreenToClient.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ScreenToClient.APoint">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.ClientToScreen">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ClientToScreen.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ClientToScreen.APoint">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.ScreenToControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ScreenToControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ScreenToControl.APoint">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.ControlToScreen">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ControlToScreen.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.ControlToScreen.APoint">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.Dragging">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.Dragging.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.Show">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.Update">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.SetZOrderPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetZOrderPosition.NewPosition">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.SetZOrder">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.SetZOrder.TopMost">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.HandleObjectShouldBeVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.HandleObjectShouldBeVisible.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControl.ParentHandlesAllocated">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControl.ParentHandlesAllocated.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.InitiateAction">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.RemoveAllHandlersOfObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.RemoveAllHandlersOfObject.AnObject">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.AddHandlerOnResize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.AddHandlerOnResize.OnResizeEvent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.AddHandlerOnResize.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.RemoveHandlerOnResize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.RemoveHandlerOnResize.OnResizeEvent">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.AddHandlerOnChangeBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.AddHandlerOnChangeBounds.OnChangeBoundsEvent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControl.AddHandlerOnChangeBounds.AsLast">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControl.RemoveHandlerOnChangeBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControl.RemoveHandlerOnChangeBounds.OnChangeBoundsEvent">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TControl.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Action">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.BorderSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.BoundsRect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.BoundsRectForNewParent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.ClientOrigin">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.ClientRect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.ClientHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.ClientWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.ControlOrigin">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.ControlState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.ControlStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.IsControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.OnShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Parent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.WindowProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.MouseEntered">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.DockOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.Floating">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.FloatingDockSiteClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.HostDockSite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.LRDockWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.TBDockHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.UndockHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControl.UndockWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControl.Cursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControl.Left">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControl.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControl.Hint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControl.Top">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControl.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControl.HelpType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControl.HelpKeyword">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControl.HelpContext">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- range type Visibility: default -->
<element name="TBorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TGetChildProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TGetChildProc.Child">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TChildControlEnlargeStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TChildControlEnlargeStyle.cesAnchorAligning">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TChildControlEnlargeStyle.cesScaleChilds">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TChildControlEnlargeStyle.cesHomogenousChildGrowth">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TChildControlEnlargeStyle.cesHomogenousSpaceGrowth">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TChildControlShrinkStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TChildControlShrinkStyle.cssAnchorAligning">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TChildControlShrinkStyle.cssScaleChilds">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TChildControlShrinkStyle.cssHomogenousChildDecrease">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TControlChildSizing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FEnlargeHorizontal">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FEnlargeVertical">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FHorizontalSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FLeftRightSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FOnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FShrinkHorizontal">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FShrinkVertical">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FTopBottomSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TControlChildSizing.FVerticalSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TControlChildSizing.SetEnlargeHorizontal">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.SetEnlargeHorizontal.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlChildSizing.SetEnlargeVertical">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.SetEnlargeVertical.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlChildSizing.SetHorizontalSpacing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.SetHorizontalSpacing.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlChildSizing.SetLeftRightSpacing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.SetLeftRightSpacing.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlChildSizing.SetShrinkHorizontal">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.SetShrinkHorizontal.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlChildSizing.SetShrinkVertical">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.SetShrinkVertical.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlChildSizing.SetTopBottomSpacing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.SetTopBottomSpacing.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TControlChildSizing.SetVerticalSpacing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.SetVerticalSpacing.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlChildSizing.Change">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TControlChildSizing.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.Create.OwnerControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControlChildSizing.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.Assign.Source">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TControlChildSizing.AssignTo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.AssignTo.Dest">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TControlChildSizing.IsEqual">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TControlChildSizing.IsEqual.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TControlChildSizing.IsEqual.Sizing">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TControlChildSizing.Control">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TControlChildSizing.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlChildSizing.LeftRightSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlChildSizing.TopBottomSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlChildSizing.HorizontalSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlChildSizing.VerticalSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlChildSizing.EnlargeHorizontal">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlChildSizing.EnlargeVertical">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlChildSizing.ShrinkHorizontal">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TControlChildSizing.ShrinkVertical">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TWinControlActionLink">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControlActionLink.AssignClient">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControlActionLink.AssignClient.AClient">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControlActionLink.IsHelpContextLinked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControlActionLink.IsHelpContextLinked.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControlActionLink.SetHelpContext">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControlActionLink.SetHelpContext.Value">
<short></short>
</element>

<!-- "class of" type Visibility: default -->
<element name="TWinControlActionLinkClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TWinControlFlag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWinControlFlag.wcfClientRectNeedsUpdate">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWinControlFlag.wcfColorChanged">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWinControlFlag.wcfFontChanged">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWinControlFlag.wcfReAlignNeeded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWinControlFlag.wcfAligningControls">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWinControlFlag.wcfEraseBackground">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWinControlFlag.wcfAutoSizeNeeded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWinControlFlag.wcfCreatingHandle">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TWinControlFlag.wcfCreatingChildHandles">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TWinControlFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TWinControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FAlignLevel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FBorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FBoundsLockCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FBoundsRealized">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FBorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FBrush">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FAdjustClientRectRealized">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FChildSizing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FControls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FDefWndProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FDockClients">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FDoubleBuffered">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FClientWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FClientHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FDockManager">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FDockSite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FWinControlFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnDockDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnDockOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnGetSiteInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnKeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnKeyUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnMouseWheel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnMouseWheelDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnMouseWheelUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnUnDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FOnUTF8KeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FParentWindow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FParentCtl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FRealizeBoundsLockCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FHandle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FShowing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FShowingValid">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FTabList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FUseDockManager">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TWinControl.FWinControls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TWinControl.AlignControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.AlignControl.AControl">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.GetBrush">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetBrush.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.GetControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetControl.Index">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.GetControlCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetControlCount.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.GetDockClientCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetDockClientCount.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.GetDockClients">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetDockClients.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetDockClients.Index">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.GetHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetHandle.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.GetIsResizing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetIsResizing.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.GetTabOrder">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetTabOrder.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.GetVisibleDockClientCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetVisibleDockClientCount.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TWinControl.SetChildSizing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetChildSizing.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TWinControl.SetDockSite">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetDockSite.NewDockSite">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TWinControl.SetHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetHandle.NewHandle">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TWinControl.SetBorderWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetBorderWidth.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TWinControl.SetParentCtl3D">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetParentCtl3D.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TWinControl.SetUseDockManager">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetUseDockManager.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TWinControl.UpdateTabOrder">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.UpdateTabOrder.NewTabValue">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TWinControl.WantsKeyBeforeInterface">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.WantsKeyBeforeInterface.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WantsKeyBeforeInterface.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WantsKeyBeforeInterface.Shift">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.AssignTo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.AssignTo.Dest">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.ActionChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ActionChange.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ActionChange.CheckDefaults">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.GetActionLinkClass">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetActionLinkClass.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.AdjustSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.AutoSizeDelayed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.AutoSizeDelayed.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.AdjustClientRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.AdjustClientRect.ARect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.AlignControls">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.AlignControls.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.AlignControls.RemainingClientRect">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoAlignChildControls">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoAlignChildControls.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoAlignChildControls.TheAlign">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoAlignChildControls.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoAlignChildControls.AControlList">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoAlignChildControls.ARect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoChildSizingChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoChildSizingChange.Sender">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.CanTab">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.CanTab.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoDragMsg">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoDragMsg.DragMsg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CMDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CMDrag.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CMShowingChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CMShowingChanged.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CMVisibleChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CMVisibleChanged.TheMessage">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.ContainsControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.ContainsControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ContainsControl.Control">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.ControlsAligned">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoSendBoundsToInterface">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.RealizeBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CreateSubClass">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CreateSubClass.Params">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CreateSubClass.ControlClassName">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DestroyComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoConstraintsChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoConstraintsChange.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoSetBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoSetBounds.ALeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoSetBounds.ATop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoSetBounds.AWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoSetBounds.AHeight">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoAutoSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CalculatePreferredSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CalculatePreferredSize.PreferredWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CalculatePreferredSize.PreferredHeight">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.GetChildBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetChildBounds.ChildBounds">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetChildBounds.WithBorderSpace">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.GetChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetChildren.Proc">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetChildren.Root">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.ChildClassAllowed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.ChildClassAllowed.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ChildClassAllowed.ChildClass">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.PaintControls">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.PaintControls.DC">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.PaintControls.First">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.PaintHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.PaintHandler.TheMessage">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.PaintWindow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.PaintWindow.DC">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CreateBrush">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CMEnabledChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CMEnabledChanged.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CMShowHintChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CMShowHintChanged.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMEraseBkgnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMEraseBkgnd.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMNotify">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMNotify.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMSetFocus">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMSetFocus.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMKillFocus">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMKillFocus.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMShowWindow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMShowWindow.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMEnter">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMEnter.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMExit">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMExit.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMMouseWheel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMMouseWheel.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMKeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMKeyDown.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMSysKeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMSysKeyDown.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMKeyUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMKeyUp.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMSysKeyUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMSysKeyUp.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMChar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMChar.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMSysChar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMSysChar.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMPaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMPaint.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMDestroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMDestroy.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMMove.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WMSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WMSize.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CNKeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CNKeyDown.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CNSysKeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CNSysKeyDown.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CNKeyUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CNKeyUp.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CNSysKeyUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CNSysKeyUp.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CNChar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CNChar.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CNSysChar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CNSysChar.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoAddDockClient">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoAddDockClient.Client">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoAddDockClient.ARect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DockOver">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DockOver.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DockOver.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DockOver.Y">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DockOver.State">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DockOver.Accept">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoDockOver">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoDockOver.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoDockOver.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoDockOver.Y">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoDockOver.State">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoDockOver.Accept">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoRemoveDockClient">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoRemoveDockClient.Client">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoUnDock">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoUnDock.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoUnDock.NewTarget">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoUnDock.Client">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.GetSiteInfo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetSiteInfo.Client">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetSiteInfo.InfluenceRect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetSiteInfo.MousePos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetSiteInfo.CanDock">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.ReloadDockedControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ReloadDockedControl.AControlName">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ReloadDockedControl.AControl">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.CreateDockManager">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.CreateDockManager.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoEnter">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoExit">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoMouseWheel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoMouseWheel.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoMouseWheel.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoMouseWheel.WheelDelta">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoMouseWheel.MousePos">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoMouseWheelDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoMouseWheelDown.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoMouseWheelDown.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoMouseWheelDown.MousePos">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoMouseWheelUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoMouseWheelUp.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoMouseWheelUp.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoMouseWheelUp.MousePos">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoKeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoKeyDown.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoKeyDown.Message">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoRemainginKeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoRemainginKeyDown.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoRemainginKeyDown.Message">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoKeyPress">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoKeyPress.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoKeyPress.Message">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoUTF8KeyPress">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoUTF8KeyPress.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoUTF8KeyPress.UTF8Key">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.DoKeyUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.DoKeyUp.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DoKeyUp.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.ControlKeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlKeyDown.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlKeyDown.Shift">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.KeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.KeyDown.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.KeyDown.Shift">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.KeyDownBeforeInterface">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.KeyDownBeforeInterface.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.KeyDownBeforeInterface.Shift">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.KeyDownAfterInterface">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.KeyDownAfterInterface.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.KeyDownAfterInterface.Shift">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.KeyPress">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.KeyPress.Key">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.KeyUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.KeyUp.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.KeyUp.Shift">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.UTF8KeyPress">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.UTF8KeyPress.UTF8Key">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.FindNextControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.FindNextControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindNextControl.CurrentControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindNextControl.GoForward">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindNextControl.CheckTabStop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindNextControl.CheckParent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindNextControl.OnlyWinControls">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.FindNextControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.FindNextControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindNextControl.CurrentControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindNextControl.GoForward">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindNextControl.CheckTabStop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindNextControl.CheckParent">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.RealGetText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.RealGetText.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.GetBorderStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetBorderStyle.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.GetChildsRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetChildsRect.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetChildsRect.Scrolled">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.GetClientOrigin">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetClientOrigin.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.GetClientRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetClientRect.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.GetControlOrigin">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetControlOrigin.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.GetDeviceContext">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetDeviceContext.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetDeviceContext.WindowHandle">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.IsControlMouseMsg">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.IsControlMouseMsg.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.IsControlMouseMsg.TheMessage">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TWinControl.ParentHandlesAllocated">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.ParentHandlesAllocated.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CreateHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CreateParams">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CreateParams.Params">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.CreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DestroyHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DestroyWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.DoFlipChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.FixupTabList">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.FontChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FontChanged.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.InitializeWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.MainWndProc">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.MainWndProc.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.ParentFormHandleInitialized">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.ChildHandlesCreated">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.ReAlign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.RealSetText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.RealSetText.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.RemoveFocus">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.RemoveFocus.Removing">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.SendMoveSizeMessages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SendMoveSizeMessages.SizeChanged">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SendMoveSizeMessages.PosChanged">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.SetBorderStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetBorderStyle.NewStyle">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.SetColor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetColor.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.SetZOrder">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetZOrder.Topmost">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.SetZOrderPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetZOrderPosition.NewPosition">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.ShowControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ShowControl.AControl">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.Update">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.UpdateControlState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.UpdateShowing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TWinControl.WndProc">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.WndProc.Message">
<short></short>
</element>

<!-- property Visibility: protected -->
<element name="TWinControl.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TWinControl.OnGetSiteInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.BorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.BoundsLockCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.Brush">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.CachedClientHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.CachedClientWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.ChildSizing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.ControlCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.Controls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.Controls.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.DefWndProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.DockClientCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.DockClients">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DockClients.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.DockManager">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.DockSite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.DoubleBuffered">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.Handle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.IsResizing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnDockDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnDockOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnKeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnKeyUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnMouseWheel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnMouseWheelDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnMouseWheelUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnUnDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.OnUTF8KeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.ParentCtl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.Showing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.UseDockManager">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TWinControl.VisibleDockClientCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.BeginUpdateBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.EndUpdateBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.LockRealizeBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.UnlockRealizeBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.ControlAtPos">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.ControlAtPos.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlAtPos.Pos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlAtPos.AllowDisabled">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.ControlAtPos">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.ControlAtPos.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlAtPos.Pos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlAtPos.AllowDisabled">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlAtPos.AllowWinControls">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.ControlAtPos">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.ControlAtPos.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlAtPos.Pos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlAtPos.AllowDisabled">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlAtPos.AllowWinControls">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.ControlAtPos.OnlyClientAreas">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.DoAdjustClientRectChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.InvalidateClientRectCache">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.InvalidateClientRectCache.WithChildControls">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.ClientRectNeedsInterfaceUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.ClientRectNeedsInterfaceUpdate.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.SetBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetBounds.aLeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetBounds.aTop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetBounds.aWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetBounds.aHeight">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TWinControl.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.Create.TheOwner">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TWinControl.CreateParented">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CreateParented.ParentWindow">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.CreateParentedControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.CreateParentedControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.CreateParentedControl.ParentWindow">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TWinControl.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.DockDrop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DockDrop.DockObject">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DockDrop.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DockDrop.Y">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.CanFocus">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.CanFocus.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.GetControlIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetControlIndex.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetControlIndex.AControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.SetControlIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetControlIndex.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SetControlIndex.NewIndex">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.Focused">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.Focused.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.SelectNext">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SelectNext.CurControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SelectNext.GoForward">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.SelectNext.CheckTabStop">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.BroadCast">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.BroadCast.ToAllMessage">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.NotifyControls">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.NotifyControls.Msg">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.DefaultHandler">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.DefaultHandler.AMessage">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.DisableAlign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.EnableAlign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.GetTextLen">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.GetTextLen.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.Invalidate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.InsertControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.InsertControl.AControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.InsertControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.InsertControl.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.InsertControl.Index">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.RemoveControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.RemoveControl.AControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.Insert">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.Insert.AControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.Insert">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.Insert.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.Insert.Index">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.Remove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.Remove.AControl">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.ReCreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.Hide">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.Repaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.SetFocus">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.FindChildControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.FindChildControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FindChildControl.ControlName">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.FlipChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.FlipChildren.AllLevels">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.GetTabOrderList">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.GetTabOrderList.List">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.HandleAllocated">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.HandleAllocated.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.HandleNeeded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.BrushCreated">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.BrushCreated.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TWinControl.EraseBackground">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.EraseBackground.DC">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TWinControl.IntfUTF8KeyPress">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TWinControl.IntfUTF8KeyPress.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.IntfUTF8KeyPress.UTF8Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TWinControl.IntfUTF8KeyPress.RepeatCount">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TGraphicControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TGraphicControl.FCanvas">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TGraphicControl.FOnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TGraphicControl.WMPaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TGraphicControl.WMPaint.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TGraphicControl.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TGraphicControl.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TGraphicControl.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TGraphicControl.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TGraphicControl.Canvas">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TGraphicControl.OnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomControl.FCanvas">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomControl.WMPaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomControl.WMPaint.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomControl.PaintWindow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomControl.PaintWindow.DC">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomControl.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomControl.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomControl.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomControl.DestroyComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomControl.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomControl.Canvas">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomControl.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TImageList">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImageList.BkColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImageList.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImageList.Masked">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImageList.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImageList.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TControlPropertyStorage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TControlPropertyStorage.GetPropertyList">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TControlPropertyStorage.GetPropertyList.List">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TDockTree">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TDockZone">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockZone.FChildControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockZone.FChildCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockZone.FFirstChildZone">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockZone.FTree">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockZone.FZoneLimit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockZone.FParentZone">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockZone.FOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockZone.FNextSibling">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockZone.FPrevSibling">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetHeight.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetLeft.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetLimitBegin">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetLimitBegin.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetLimitSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetLimitSize.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetTop.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetVisible.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetVisibleChildCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetVisibleChildCount.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetWidth.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetZoneLimit">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetZoneLimit.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TDockZone.SetZoneLimit">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockZone.SetZoneLimit.AValue">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.IsOrientationValid">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.IsOrientationValid.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TDockZone.GetNextVisibleZone">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.GetNextVisibleZone.Result">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TDockZone.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockZone.Create.TheTree">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TDockZone.ExpandZoneLimit">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockZone.ExpandZoneLimit.NewLimit">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TDockZone.FirstVisibleChild">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.FirstVisibleChild.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TDockZone.NextVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.NextVisible.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TDockZone.PrevVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockZone.PrevVisible.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TDockZone.ResetChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TDockZone.ResetZoneLimits">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TDockZone.Update">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.Tree">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.ChildCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.Left">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.LimitBegin">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.LimitSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.Top">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.VisibleChildCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TDockZone.ZoneLimit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TForEachZoneProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TForEachZoneProc.Zone">
<short></short>
</element>

<!-- "class of" type Visibility: default -->
<element name="TDockTreeClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TDockTreeFlag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TDockTreeFlag.dtfUpdateAllNeeded">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TDockTreeFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TDockTree">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockTree.FBorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockTree.FDockSite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockTree.FGrabberSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockTree.FGrabbersOnTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockTree.FFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockTree.FTopZone">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockTree.FTopXYLimit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TDockTree.FUpdateCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TDockTree.DeleteZone">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.DeleteZone.Zone">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.AdjustDockRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.AdjustDockRect.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.AdjustDockRect.ARect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.GetControlBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.GetControlBounds.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.GetControlBounds.ControlBounds">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TDockTree.HitTest">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TDockTree.HitTest.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.HitTest.MousePos">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.HitTest.HTFlag">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.InsertControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.InsertControl.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.InsertControl.InsertAt">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.InsertControl.DropControl">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.LoadFromStream">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.LoadFromStream.SrcStream">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.PaintDockFrame">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.PaintDockFrame.ACanvas">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.PaintDockFrame.AControl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.PaintDockFrame.ARect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.PositionDockRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.PositionDockRect.AClient">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.PositionDockRect.DropCtl">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.PositionDockRect.DropAlign">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.PositionDockRect.DockRect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.RemoveControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.RemoveControl.AControl">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.SaveToStream">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.SaveToStream.DestStream">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.SetReplacingControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.SetReplacingControl.AControl">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.ResetBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.ResetBounds.Force">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TDockTree.UpdateAll">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TDockTree.DockSite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TDockTree.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.Create.TheDockSite">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TDockTree.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TDockTree.PaintSite">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDockTree.PaintSite.DC">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TMouse">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TMouse.FCapture">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TMouse.FDragImmediate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TMouse.FDragThreshold">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="TMouse.SetCapture">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TMouse.SetCapture.Value">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="TMouse.GetCapture">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TMouse.GetCapture.Result">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TMouse.SetCursorPos">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TMouse.SetCursorPos.value">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="TMouse.GetCursorPos">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TMouse.GetCursorPos.Result">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="TMouse.GetIsDragging">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TMouse.GetIsDragging.Result">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TMouse.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- destructor Visibility: public -->
<element name="TMouse.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TMouse.Capture">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TMouse.CursorPos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TMouse.DragImmediate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TMouse.DragThreshold">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TMouse.IsDragging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="AnchorAlign">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="AlignNames">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="FindDragTarget">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="FindDragTarget.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="FindDragTarget.Position">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="FindDragTarget.AllowDisabled">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="FindControlAtPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="FindControlAtPosition.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="FindControlAtPosition.Position">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="FindControlAtPosition.AllowDisabled">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="FindLCLWindow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="FindLCLWindow.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="FindLCLWindow.ScreenPos">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="FindControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="FindControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="FindControl.Handle">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="FindOwnerControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="FindOwnerControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="FindOwnerControl.Handle">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="FindLCLControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="FindLCLControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="FindLCLControl.ScreenPos">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="SendAppMessage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="SendAppMessage.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="SendAppMessage.Msg">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="SendAppMessage.WParam">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="SendAppMessage.LParam">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="MoveWindowOrg">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="MoveWindowOrg.dc">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="MoveWindowOrg.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="MoveWindowOrg.Y">
<short></short>
</element>

<!-- variable Visibility: default -->
<element name="DefaultDockTreeClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="SetCaptureControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="SetCaptureControl.Control">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="GetCaptureControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="GetCaptureControl.Result">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="CancelDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="DragDone">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="DragDone.Drop">
<short></short>
</element>

<!-- variable Visibility: default -->
<element name="NewStyleControls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="Mouse">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: default -->
<element name="CursorToString">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="CursorToString.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="CursorToString.Cursor">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="StringToCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="StringToCursor.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="StringToCursor.S">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="GetCursorValues">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="GetCursorValues.Proc">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="CursorToIdent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="CursorToIdent.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="CursorToIdent.Cursor">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="CursorToIdent.Ident">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="IdentToCursor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="IdentToCursor.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="IdentToCursor.Ident">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="IdentToCursor.Cursor">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="GetKeyShiftState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="GetKeyShiftState.Result">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="AdjustBorderSpace">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="AdjustBorderSpace.RemainingClientRect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="AdjustBorderSpace.CurBorderSpace">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="AdjustBorderSpace.Left">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="AdjustBorderSpace.Top">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="AdjustBorderSpace.Right">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="AdjustBorderSpace.Bottom">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="AdjustBorderSpace">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="AdjustBorderSpace.RemainingClientRect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="AdjustBorderSpace.CurBorderSpace">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="AdjustBorderSpace.Space">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="Register">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>
</module> <!-- Controls -->
</package>
</fpdoc-descriptions>
