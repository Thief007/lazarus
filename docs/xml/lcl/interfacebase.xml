<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="lcl">
    <!--
  ====================================================================
    InterfaceBase
  ====================================================================
-->
    <module name="InterfaceBase">
      <short>Provides a widget set appropriate to the operating system platform in use</short>
      <descr/>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short/>
      </element>
      <element name="SysUtils">
        <short/>
      </element>
      <element name="Math">
        <short/>
      </element>
      <element name="LCLStrConsts">
        <short/>
      </element>
      <element name="LCLType">
        <short/>
      </element>
      <element name="LCLProc">
        <short/>
      </element>
      <element name="LMessages">
        <short/>
      </element>
      <element name="GraphType">
        <short/>
      </element>
      <element name="GraphMath">
        <short/>
      </element>
<!-- "type" alias type Visibility: default -->
      <element name="PEventHandler">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- "type" alias type Visibility: default -->
      <element name="PProcessEventHandler">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- "type" alias type Visibility: default -->
      <element name="PPipeEventHandler">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- "type" alias type Visibility: default -->
      <element name="PSocketEventHandler">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TChildExitReason">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TChildExitReason.cerExit">
        <short></short>
      </element>
      <element name="TChildExitReason.cerSignal">
        <short></short>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TPipeReason">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TPipeReason.prDataAvailable">
        <short></short>
      </element>
      <element name="TPipeReason.prBroken">
        <short></short>
      </element>
      <element name="TPipeReason.prCanWrite">
        <short></short>
      </element>
      <!-- set type Visibility: default -->
      <element name="TPipeReasons" link="TPipeReason"/>
      <!-- procedure type Visibility: default -->
      <element name="TApplicationMainLoop">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TWaitHandleEvent">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TWaitHandleEvent.AData">
        <short></short>
      </element>
      <element name="TWaitHandleEvent.AFlags">
        <short></short>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TChildExitEvent">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TChildExitEvent.AData">
        <short></short>
      </element>
      <element name="TChildExitEvent.AReason">
        <short></short>
      </element>
      <element name="TChildExitEvent.AInfo">
        <short></short>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TPipeEvent">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TPipeEvent.AData">
        <short></short>
      </element>
      <element name="TPipeEvent.AReasons">
        <short></short>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TSocketEvent">
        <short>[?]</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TSocketEvent.AData">
        <short></short>
      </element>
      <element name="TSocketEvent.AFlags">
        <short></short>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TLCLWndMethod">
        <short>The type of all LCL message handlers.
        </short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TLCLWndMethod.TheMessage">
        <short></short>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TLCLPlatform">
        <short>The supported platforms.</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TLCLPlatform.lpGtk">
        <short></short>
      </element>
      <element name="TLCLPlatform.lpGtk2">
        <short></short>
      </element>
      <element name="TLCLPlatform.lpWin32">
        <short></short>
      </element>
      <element name="TLCLPlatform.lpWinCE">
        <short></short>
      </element>
      <element name="TLCLPlatform.lpCarbon">
        <short></short>
      </element>
      <element name="TLCLPlatform.lpQT">
        <short></short>
      </element>
      <element name="TLCLPlatform.lpfpGUI">
        <short></short>
      </element>
      <element name="TLCLPlatform.lpNoGUI">
        <short></short>
      </element>
      <element name="TLCLPlatform.lpCocoa">
        <short></short>
      </element>
      <element name="TLCLPlatform.lpAndroid">
        <short></short>
      </element>
      <!-- set type Visibility: default -->
      <element name="TLCLPlatforms" link="TLCLPlatform"/>
      <!-- enumeration type Visibility: default -->
      <element name="TLCLCapability">
        <short>Capabilities of the (current) platform.</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TLCLCapability.lcAsyncProcess">
        <short>Supports async process.</short>
      </element>
      <element name="TLCLCapability.lcCanDrawOutsideOnPaint">
        <short>Supports drawing outside OnPaint event of an control.</short>
      </element>
      <element name="TLCLCapability.lcNeedMininimizeAppWithMainForm">
        <short>When main form is minimized, then minimize also app [all forms?].
        </short>
      </element>
      <element name="TLCLCapability.lcApplicationTitle">
        <short>Can change application title at runtime.</short>
      </element>
      <element name="TLCLCapability.lcApplicationWindow">
        <short>Application has a special root window.</short>
      </element>
      <element name="TLCLCapability.lcFormIcon">
        <short>Forms have icon.</short>
      </element>
      <element name="TLCLCapability.lcModalWindow">
        <short>Native modal window support.</short>
      </element>
      <element name="TLCLCapability.lcDragDockStartOnTitleClick">
        <short>Can drag-dock forms from the title bar.</short>
      </element>
      <element name="TLCLCapability.lcAntialiasingEnabledByDefault">
        <short>Is amDontCare = amOn for the widgetset.[?]
        </short>
      </element>
      <element name="TLCLCapability.lcLMHelpSupport">
        <short>Support for LM_HELP command.</short>
      </element>
      <element name="TLCLCapability.lcReceivesLMClearCutCopyPasteReliably">
        <short>In Carbon we do not receive LM_CLEAR, CUT, COPY, PASTE etc. reliably,
          and this affects DB controls.
        </short>
      </element>
<!-- class Visibility: default -->
      <element name="TDialogButton">
        <short>Description of standard dialog buttons.
        </short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDialogButton.FCaption" link="TDialogButton.Caption"/>
      <element name="TDialogButton.FModalResult" link="TDialogButton.ModalResult"/>
      <!-- function Visibility: private -->
      <element name="TDialogButton.GetCancel" link="TDialogButton.Cancel"/>
      <element name="TDialogButton.GetCancel.Result">
        <short></short>
      </element>
      <!-- function Visibility: private -->
      <element name="TDialogButton.GetDefault" link="TDialogButton.Default"/>
      <element name="TDialogButton.GetDefault.Result">
        <short></short>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDialogButton.SetCancel" link="TDialogButton.Cancel"/>
      <element name="TDialogButton.SetCancel.AValue">
        <short></short>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TDialogButton.SetDefault" link="TDialogButton.Default"/>
      <element name="TDialogButton.SetDefault.AValue">
        <short></short>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDialogButton.GetDisplayName">
        <short>Here: returns Caption.
        </short>
      </element>
      <element name="TDialogButton.GetDisplayName.Result">
        <short></short>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDialogButton.SetCaption" link="TDialogButton.Caption"/>
      <element name="TDialogButton.SetCaption.AValue">
        <short></short>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDialogButton.Create"/>
      <element name="TDialogButton.Create.ACollection">
        <short></short>
      </element>
      <!-- property Visibility: public -->
      <element name="TDialogButton.Caption">
        <short>The button title.
        </short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TDialogButton.Cancel">
        <short>True for Cancel button(s) only.
        </short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TDialogButton.Default">
        <short>True for Default button(s) only.
        </short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TDialogButton.ModalResult">
        <short>The modal result, returned when the button is clicked.
        </short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
<!-- class Visibility: default -->
      <element name="TDialogButtons">
        <short>Collection of TDialogButton descriptions.
        </short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TDialogButtons.FCancelButton" link="TDialogButtons.CancelButton"/>
      <element name="TDialogButtons.FDefaultButton" link="TDialogButtons.DefaultButton"/>
      <!-- function Visibility: protected -->
      <element name="TDialogButtons.GetItem" link="TDialogButtons.Items"/>
      <element name="TDialogButtons.GetItem.Result">
        <short></short>
      </element>
      <element name="TDialogButtons.GetItem.Index">
        <short></short>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDialogButtons.SetCancelButton" link="TDialogButtons.CancelButton"/>
      <element name="TDialogButtons.SetCancelButton.AValue">
        <short></short>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDialogButtons.SetDefaultButton" link="TDialogButtons.DefaultButton"/>
      <element name="TDialogButtons.SetDefaultButton.Value">
        <short></short>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDialogButtons.SetItem" link="TDialogButtons.Items"/>
      <element name="TDialogButtons.SetItem.Index">
        <short></short>
      </element>
      <element name="TDialogButtons.SetItem.Value">
        <short></short>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TDialogButtons.Destroy"/>
      <!-- function Visibility: public -->
      <element name="TDialogButtons.Add">
        <short>Adds a new button description.
        </short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TDialogButtons.Add.Result">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TDialogButtons.FindButton">
        <short>Find the button associated with (one of) the given modal result.
        </short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TDialogButtons.FindButton.Result">
        <short></short>
      </element>
      <element name="TDialogButtons.FindButton.AModalResult">
        <short>The modal result to find.</short>
      </element>
      <element name="TDialogButtons.FindButton.Order">
        <short>List of modal results to find.</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TDialogButtons.DefaultButton">
        <short>The Default button for this dialog kind.</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TDialogButtons.CancelButton">
        <short>The Cancel button for this dialog kind.</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TDialogButtons.Items">
        <short>Indexed access to the button descriptions.</short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TDialogButtons.Items.Index">
        <short></short>
      </element>
<!-- procedure type Visibility: default -->
      <element name="TWSTimerProc">
        <short>Type of a timer callback procedure[?]
        </short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>

<!-- object Visibility: default -->
      <element name="TWidgetSet">
        <short>Application helper class (platform and drawing interface).
        </short>
        <descr>
          <p>
            The declaration contains a number of specific methods for interfacing with the operating system.
          </p>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TWidgetSet.FThemeServices" link="TWidgetSet.ThemeServices"/>
      <!-- procedure Visibility: protected -->
      <element name="TWidgetSet.PassCmdLineOptions">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWidgetSet.CreateThemeServices">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.CreateThemeServices.Result">
        <short></short>
      </element>
      <!-- function Visibility: protected -->
      <element name="TWidgetSet.GetAppHandle">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetAppHandle.Result">
        <short></short>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TWidgetSet.SetAppHandle">
      <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetAppHandle.AValue">
        <short></short>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TWidgetSet.Create"/>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.BeforeDestruction">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppInit">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.AppInit.ScreenInfo">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppRun">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AppRun.ALoop">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppWaitMessage">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppProcessMessages">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppTerminate">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppMinimize">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppRestore">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppBringToFront">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppSetIcon">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AppSetIcon.Small">
        <short></short>
      </element>
      <element name="TWidgetSet.AppSetIcon.Big">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppSetTitle">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AppSetTitle.ATitle">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppSetVisible">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AppSetVisible.AVisible">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.AppRemoveStayOnTopFlags">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AppRemoveStayOnTopFlags.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.AppRemoveStayOnTopFlags.ASystemTopAlso">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.AppRestoreStayOnTopFlags">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AppRestoreStayOnTopFlags.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.AppRestoreStayOnTopFlags.ASystemTopAlso">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.AppSetMainFormOnTaskBar">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AppSetMainFormOnTaskBar.DoSet">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.LCLPlatform">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.LCLPlatform.Result">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetLCLCapability">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetLCLCapability.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetLCLCapability.ACapability">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DebugLogLn">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DebugLogLn.s">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DebugLog">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DebugLog.s">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DCGetPixel">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DCGetPixel.Result">
        <short/>
      </element>
      <element name="TWidgetSet.DCGetPixel.CanvasHandle">
        <short/>
      </element>
      <element name="TWidgetSet.DCGetPixel.X">
        <short/>
      </element>
      <element name="TWidgetSet.DCGetPixel.Y">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DCSetPixel">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DCSetPixel.CanvasHandle">
        <short/>
      </element>
      <element name="TWidgetSet.DCSetPixel.X">
        <short/>
      </element>
      <element name="TWidgetSet.DCSetPixel.Y">
        <short/>
      </element>
      <element name="TWidgetSet.DCSetPixel.AColor">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DCRedraw">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DCRedraw.CanvasHandle">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DCSetAntialiasing">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DCSetAntialiasing.CanvasHandle">
        <short></short>
      </element>
      <element name="TWidgetSet.DCSetAntialiasing.AEnabled">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.SetDesigning">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetDesigning.AComponent">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.InitStockFont">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.InitStockFont.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.InitStockFont.AFont">
        <short></short>
      </element>
      <element name="TWidgetSet.InitStockFont.AStockFont">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IsHelpKey">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.IsHelpKey.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.IsHelpKey.Key">
        <short></short>
      </element>
      <element name="TWidgetSet.IsHelpKey.Shift">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateTimer">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.CreateTimer.Result">
        <short/>
      </element>
      <element name="TWidgetSet.CreateTimer.Interval">
        <short/>
      </element>
      <element name="TWidgetSet.CreateTimer.TimerProc">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DestroyTimer">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DestroyTimer.Result">
        <short/>
      </element>
      <element name="TWidgetSet.DestroyTimer.TimerHandle">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TWidgetSet.AppHandle">
        <short></short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
<!-- function Visibility: public -->
      <element name="TWidgetSet.Arc">
        <short>[?]</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.Arc.Result">
        <short/>
      </element>
      <element name="TWidgetSet.Arc.DC">
        <short/>
      </element>
      <element name="TWidgetSet.Arc.Left">
        <short></short>
      </element>
      <element name="TWidgetSet.Arc.Top">
        <short></short>
      </element>
      <element name="TWidgetSet.Arc.Right">
        <short></short>
      </element>
      <element name="TWidgetSet.Arc.Bottom">
        <short></short>
      </element>
      <element name="TWidgetSet.Arc.Angle16Deg">
        <short></short>
      </element>
      <element name="TWidgetSet.Arc.Angle16DegLength">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.AngleChord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.AngleChord.Result">
        <short/>
      </element>
      <element name="TWidgetSet.AngleChord.DC">
        <short/>
      </element>
      <element name="TWidgetSet.AngleChord.x1">
        <short></short>
      </element>
      <element name="TWidgetSet.AngleChord.y1">
        <short></short>
      </element>
      <element name="TWidgetSet.AngleChord.x2">
        <short></short>
      </element>
      <element name="TWidgetSet.AngleChord.y2">
        <short></short>
      </element>
      <element name="TWidgetSet.AngleChord.angle1">
        <short/>
      </element>
      <element name="TWidgetSet.AngleChord.angle2">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.BeginPaint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.BeginPaint.Result">
        <short/>
      </element>
      <element name="TWidgetSet.BeginPaint.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.BeginPaint.PS">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.BitBlt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.BitBlt.Result">
        <short/>
      </element>
      <element name="TWidgetSet.BitBlt.DestDC">
        <short/>
      </element>
      <element name="TWidgetSet.BitBlt.X">
        <short/>
      </element>
      <element name="TWidgetSet.BitBlt.Y">
        <short/>
      </element>
      <element name="TWidgetSet.BitBlt.Width">
        <short/>
      </element>
      <element name="TWidgetSet.BitBlt.Height">
        <short/>
      </element>
      <element name="TWidgetSet.BitBlt.SrcDC">
        <short/>
      </element>
      <element name="TWidgetSet.BitBlt.XSrc">
        <short/>
      </element>
      <element name="TWidgetSet.BitBlt.YSrc">
        <short/>
      </element>
      <element name="TWidgetSet.BitBlt.Rop">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CallNextHookEx">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CallNextHookEx.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallNextHookEx.hhk">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallNextHookEx.ncode">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallNextHookEx.WParam">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallNextHookEx.LParam">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CallWindowProc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CallWindowProc.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallWindowProc.lpPrevWndFunc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallWindowProc.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallWindowProc.Msg">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallWindowProc.WParam">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallWindowProc.LParam">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ClienttoScreen">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ClienttoScreen.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClienttoScreen.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClienttoScreen.P">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CombineRgn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CombineRgn.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CombineRgn.Dest">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CombineRgn.Src1">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CombineRgn.Src2">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CombineRgn.fnCombineMode">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateBitmap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateBitmap.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBitmap.Width">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBitmap.Height">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBitmap.Planes">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBitmap.BitCount">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBitmap.BitmapBits">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateBrushIndirect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateBrushIndirect.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBrushIndirect.LogBrush">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateCaret">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateCaret.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateCaret.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateCaret.Bitmap">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateCaret.width">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateCaret.Height">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateCompatibleBitmap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateCompatibleBitmap.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateCompatibleBitmap.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateCompatibleBitmap.Width">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateCompatibleBitmap.Height">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateCompatibleDC">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateCompatibleDC.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateCompatibleDC.DC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateDIBitmap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateDIBitmap.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBitmap.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBitmap.InfoHeader">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBitmap.dwUsage">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBitmap.InitBits">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBitmap.InitInfo">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBitmap.wUsage">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateDIBSection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateDIBSection.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBSection.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBSection.BitmapInfo">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBSection.Usage">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBSection.Bits">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBSection.SectionHandle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateDIBSection.Offset">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateEllipticRgn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateEllipticRgn.Result">
        <short/>
      </element>
      <element name="TWidgetSet.CreateEllipticRgn.X1">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateEllipticRgn.Y1">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateEllipticRgn.X2">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateEllipticRgn.Y2">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateFontIndirect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateFontIndirect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.CreateFontIndirect.LogFont">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateFontIndirectEx">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.CreateFontIndirectEx.Result">
        <short/>
      </element>
      <element name="TWidgetSet.CreateFontIndirectEx.LogFont">
        <short/>
      </element>
      <element name="TWidgetSet.CreateFontIndirectEx.LongFontName">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateIconIndirect">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.CreateIconIndirect.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateIconIndirect.IconInfo">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreatePalette">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.CreatePalette.Result">
        <short/>
      </element>
      <element name="TWidgetSet.CreatePalette.LogPalette">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreatePatternBrush">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.CreatePatternBrush.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.CreatePatternBrush.ABitmap">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreatePenIndirect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.CreatePenIndirect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.CreatePenIndirect.LogPen">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreatePolygonRgn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.CreatePolygonRgn.Result">
        <short/>
      </element>
      <element name="TWidgetSet.CreatePolygonRgn.Points">
        <short/>
      </element>
      <element name="TWidgetSet.CreatePolygonRgn.NumPts">
        <short/>
      </element>
      <element name="TWidgetSet.CreatePolygonRgn.FillMode">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateRectRgn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.CreateRectRgn.Result">
        <short/>
      </element>
      <element name="TWidgetSet.CreateRectRgn.X1">
        <short/>
      </element>
      <element name="TWidgetSet.CreateRectRgn.Y1">
        <short/>
      </element>
      <element name="TWidgetSet.CreateRectRgn.X2">
        <short/>
      </element>
      <element name="TWidgetSet.CreateRectRgn.Y2">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateRoundRectRgn">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.CreateRoundRectRgn.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateRoundRectRgn.X1">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateRoundRectRgn.Y1">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateRoundRectRgn.X2">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateRoundRectRgn.Y2">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateRoundRectRgn.nWidthEllipse">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateRoundRectRgn.nHeightEllipse">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DeleteCriticalSection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DeleteCriticalSection.CritSection">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DeleteDC">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DeleteDC.Result">
        <short/>
      </element>
      <element name="TWidgetSet.DeleteDC.hDC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DeleteObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DeleteObject.Result">
        <short/>
      </element>
      <element name="TWidgetSet.DeleteObject.GDIObject">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DestroyCaret">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DestroyCaret.Result">
        <short/>
      </element>
      <element name="TWidgetSet.DestroyCaret.Handle">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DestroyCursor">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DestroyCursor.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.DestroyCursor.Handle">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DestroyIcon">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DestroyIcon.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.DestroyIcon.Handle">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DPtoLP">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DPtoLP.Result">
        <short/>
      </element>
      <element name="TWidgetSet.DPtoLP.DC">
        <short/>
      </element>
      <element name="TWidgetSet.DPtoLP.Points">
        <short/>
      </element>
      <element name="TWidgetSet.DPtoLP.Count">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DrawFrameControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DrawFrameControl.Result">
        <short/>
      </element>
      <element name="TWidgetSet.DrawFrameControl.DC">
        <short/>
      </element>
      <element name="TWidgetSet.DrawFrameControl.Rect">
        <short/>
      </element>
      <element name="TWidgetSet.DrawFrameControl.uType">
        <short/>
      </element>
      <element name="TWidgetSet.DrawFrameControl.uState">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DrawFocusRect">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DrawFocusRect.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.DrawFocusRect.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.DrawFocusRect.Rect">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DrawEdge">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.DrawEdge.Result">
        <short/>
      </element>
      <element name="TWidgetSet.DrawEdge.DC">
        <short/>
      </element>
      <element name="TWidgetSet.DrawEdge.Rect">
        <short/>
      </element>
      <element name="TWidgetSet.DrawEdge.edge">
        <short/>
      </element>
      <element name="TWidgetSet.DrawEdge.grfFlags">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DrawText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.DrawText.Result">
        <short/>
      </element>
      <element name="TWidgetSet.DrawText.DC">
        <short/>
      </element>
      <element name="TWidgetSet.DrawText.Str">
        <short/>
      </element>
      <element name="TWidgetSet.DrawText.Count">
        <short/>
      </element>
      <element name="TWidgetSet.DrawText.Rect">
        <short/>
      </element>
      <element name="TWidgetSet.DrawText.Flags">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.EnableScrollBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.EnableScrollBar.Result">
        <short/>
      </element>
      <element name="TWidgetSet.EnableScrollBar.Wnd">
        <short/>
      </element>
      <element name="TWidgetSet.EnableScrollBar.wSBflags">
        <short/>
      </element>
      <element name="TWidgetSet.EnableScrollBar.wArrows">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.EnableWindow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.EnableWindow.Result">
        <short/>
      </element>
      <element name="TWidgetSet.EnableWindow.hWnd">
        <short/>
      </element>
      <element name="TWidgetSet.EnableWindow.bEnable">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.EndPaint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.EndPaint.Result">
        <short/>
      </element>
      <element name="TWidgetSet.EndPaint.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.EndPaint.PS">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.EnterCriticalSection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.EnterCriticalSection.CritSection">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.EnumDisplayMonitors">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.EnumDisplayMonitors.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumDisplayMonitors.hdc">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumDisplayMonitors.lprcClip">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumDisplayMonitors.lpfnEnum">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumDisplayMonitors.dwData">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.EnumFontFamilies">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.EnumFontFamilies.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumFontFamilies.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumFontFamilies.Family">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumFontFamilies.EnumFontFamProc">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumFontFamilies.LParam">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.EnumFontFamiliesEx">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.EnumFontFamiliesEx.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumFontFamiliesEx.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumFontFamiliesEx.lpLogFont">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumFontFamiliesEx.Callback">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumFontFamiliesEx.Lparam">
        <short></short>
      </element>
      <element name="TWidgetSet.EnumFontFamiliesEx.Flags">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.Ellipse">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.Ellipse.Result">
        <short/>
      </element>
      <element name="TWidgetSet.Ellipse.DC">
        <short/>
      </element>
      <element name="TWidgetSet.Ellipse.x1">
        <short/>
      </element>
      <element name="TWidgetSet.Ellipse.y1">
        <short/>
      </element>
      <element name="TWidgetSet.Ellipse.x2">
        <short/>
      </element>
      <element name="TWidgetSet.Ellipse.y2">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ExcludeClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.ExcludeClipRect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.ExcludeClipRect.dc">
        <short/>
      </element>
      <element name="TWidgetSet.ExcludeClipRect.Left">
        <short/>
      </element>
      <element name="TWidgetSet.ExcludeClipRect.Top">
        <short/>
      </element>
      <element name="TWidgetSet.ExcludeClipRect.Right">
        <short/>
      </element>
      <element name="TWidgetSet.ExcludeClipRect.Bottom">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ExtCreatePen">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.ExtCreatePen.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.ExtCreatePen.dwPenStyle">
        <short></short>
      </element>
      <element name="TWidgetSet.ExtCreatePen.dwWidth">
        <short></short>
      </element>
      <element name="TWidgetSet.ExtCreatePen.lplb">
        <short></short>
      </element>
      <element name="TWidgetSet.ExtCreatePen.dwStyleCount">
        <short></short>
      </element>
      <element name="TWidgetSet.ExtCreatePen.lpStyle">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ExtTextOut">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.ExtTextOut.Result">
        <short/>
      </element>
      <element name="TWidgetSet.ExtTextOut.DC">
        <short/>
      </element>
      <element name="TWidgetSet.ExtTextOut.X">
        <short/>
      </element>
      <element name="TWidgetSet.ExtTextOut.Y">
        <short/>
      </element>
      <element name="TWidgetSet.ExtTextOut.Options">
        <short/>
      </element>
      <element name="TWidgetSet.ExtTextOut.Rect">
        <short/>
      </element>
      <element name="TWidgetSet.ExtTextOut.Str">
        <short/>
      </element>
      <element name="TWidgetSet.ExtTextOut.Count">
        <short/>
      </element>
      <element name="TWidgetSet.ExtTextOut.Dx">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ExtSelectClipRGN">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.ExtSelectClipRGN.Result">
        <short/>
      </element>
      <element name="TWidgetSet.ExtSelectClipRGN.dc">
        <short/>
      </element>
      <element name="TWidgetSet.ExtSelectClipRGN.rgn">
        <short/>
      </element>
      <element name="TWidgetSet.ExtSelectClipRGN.Mode">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.FillRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.FillRect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.FillRect.DC">
        <short/>
      </element>
      <element name="TWidgetSet.FillRect.Rect">
        <short/>
      </element>
      <element name="TWidgetSet.FillRect.Brush">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.FillRgn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.FillRgn.Result">
        <short/>
      </element>
      <element name="TWidgetSet.FillRgn.DC">
        <short/>
      </element>
      <element name="TWidgetSet.FillRgn.RegionHnd">
        <short/>
      </element>
      <element name="TWidgetSet.FillRgn.hbr">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.FloodFill">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.FloodFill.Result">
        <short/>
      </element>
      <element name="TWidgetSet.FloodFill.DC">
        <short/>
      </element>
      <element name="TWidgetSet.FloodFill.X">
        <short/>
      </element>
      <element name="TWidgetSet.FloodFill.Y">
        <short/>
      </element>
      <element name="TWidgetSet.FloodFill.Color">
        <short/>
      </element>
      <element name="TWidgetSet.FloodFill.FillStyle">
        <short/>
      </element>
      <element name="TWidgetSet.FloodFill.Brush">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.FrameRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.FrameRect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.FrameRect.DC">
        <short/>
      </element>
      <element name="TWidgetSet.FrameRect.ARect">
        <short/>
      </element>
      <element name="TWidgetSet.FrameRect.hBr">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetActiveWindow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetActiveWindow.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetBitmapBits">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetBitmapBits.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetBitmapBits.Bitmap">
        <short/>
      </element>
      <element name="TWidgetSet.GetBitmapBits.Count">
        <short/>
      </element>
      <element name="TWidgetSet.GetBitmapBits.Bits">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetBkColor">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetBkColor.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetBkColor.DC">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetCapture">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetCapture.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetCaretPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetCaretPos.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetCaretPos.lpPoint">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetClientRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetClientRect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetClientRect.handle">
        <short/>
      </element>
      <element name="TWidgetSet.GetClientRect.Rect">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetClipBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetClipBox.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetClipBox.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetClipBox.lpRect">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetClipRGN">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetClipRGN.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetClipRGN.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetClipRGN.RGN">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetCurrentObject">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetCurrentObject.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetCurrentObject.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.GetCurrentObject.uObjectType">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetCursorPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetCursorPos.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetCursorPos.lpPoint">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetCharABCWidths">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetCharABCWidths.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetCharABCWidths.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetCharABCWidths.p2">
        <short/>
      </element>
      <element name="TWidgetSet.GetCharABCWidths.p3">
        <short/>
      </element>
      <element name="TWidgetSet.GetCharABCWidths.ABCStructs">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetDC">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetDC.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetDC.hWnd">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetDeviceCaps">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetDeviceCaps.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetDeviceCaps.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetDeviceCaps.Index">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetDIBits">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetDIBits.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetDIBits.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetDIBits.Bitmap">
        <short/>
      </element>
      <element name="TWidgetSet.GetDIBits.StartScan">
        <short/>
      </element>
      <element name="TWidgetSet.GetDIBits.NumScans">
        <short/>
      </element>
      <element name="TWidgetSet.GetDIBits.Bits">
        <short/>
      </element>
      <element name="TWidgetSet.GetDIBits.BitInfo">
        <short/>
      </element>
      <element name="TWidgetSet.GetDIBits.Usage">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetDoubleClickTime">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetDoubleClickTime.Result">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetFocus">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetFocus.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetFontLanguageInfo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetFontLanguageInfo.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetFontLanguageInfo.DC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetForegroundWindow">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetForegroundWindow.Result">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetIconInfo">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetIconInfo.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetIconInfo.AIcon">
        <short></short>
      </element>
      <element name="TWidgetSet.GetIconInfo.AIconInfo">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetKeyState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetKeyState.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetKeyState.nVirtKey">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetMapMode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetMapMode.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetMapMode.DC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetMonitorInfo">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetMonitorInfo.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetMonitorInfo.hMonitor">
        <short></short>
      </element>
      <element name="TWidgetSet.GetMonitorInfo.lpmi">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetObject.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetObject.GDIObject">
        <short/>
      </element>
      <element name="TWidgetSet.GetObject.BufSize">
        <short/>
      </element>
      <element name="TWidgetSet.GetObject.Buf">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetPaletteEntries">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetPaletteEntries.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetPaletteEntries.Palette">
        <short/>
      </element>
      <element name="TWidgetSet.GetPaletteEntries.StartIndex">
        <short/>
      </element>
      <element name="TWidgetSet.GetPaletteEntries.NumEntries">
        <short/>
      </element>
      <element name="TWidgetSet.GetPaletteEntries.PaletteEntries">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetParent.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetParent.Handle">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetProp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetProp.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetProp.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.GetProp.Str">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetRgnBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetRgnBox.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetRgnBox.RGN">
        <short/>
      </element>
      <element name="TWidgetSet.GetRgnBox.lpRect">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetROP2">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetROP2.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetROP2.DC">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetScrollInfo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetScrollInfo.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetScrollInfo.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.GetScrollInfo.SBStyle">
        <short/>
      </element>
      <element name="TWidgetSet.GetScrollInfo.ScrollInfo">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetStockObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetStockObject.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetStockObject.Value">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetSysColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetSysColor.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetSysColor.nIndex">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetSysColorBrush">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetSysColorBrush.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetSysColorBrush.nIndex">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetSystemPaletteEntries">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetSystemPaletteEntries.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetSystemPaletteEntries.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetSystemPaletteEntries.StartIndex">
        <short/>
      </element>
      <element name="TWidgetSet.GetSystemPaletteEntries.NumEntries">
        <short/>
      </element>
      <element name="TWidgetSet.GetSystemPaletteEntries.PaletteEntries">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetSystemMetrics">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetSystemMetrics.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetSystemMetrics.nIndex">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetTextColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetTextColor.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextColor.DC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetTextExtentExPoint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetTextExtentExPoint.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentExPoint.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentExPoint.Str">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentExPoint.Count">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentExPoint.MaxWidth">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentExPoint.MaxCount">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentExPoint.PartialWidths">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentExPoint.Size">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetTextExtentPoint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint.Str">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint.Count">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint.Size">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetTextExtentPoint32">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint32.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint32.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint32.Str">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint32.Count">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextExtentPoint32.Size">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetTextMetrics">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetTextMetrics.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextMetrics.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GetTextMetrics.TM">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetViewPortExtEx">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetViewPortExtEx.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetViewPortExtEx.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.GetViewPortExtEx.Size">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetViewPortOrgEx">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetViewPortOrgEx.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetViewPortOrgEx.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.GetViewPortOrgEx.P">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetWindowExtEx">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.GetWindowExtEx.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.GetWindowExtEx.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.GetWindowExtEx.Size">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetWindowLong">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetWindowLong.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetWindowLong.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.GetWindowLong.int">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetWindowRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetWindowRect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetWindowRect.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.GetWindowRect.Rect">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetWindowSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GetWindowSize.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GetWindowSize.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.GetWindowSize.Width">
        <short/>
      </element>
      <element name="TWidgetSet.GetWindowSize.Height">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetWindowOrgEx">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetWindowOrgEx.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetWindowOrgEx.dc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetWindowOrgEx.P">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GradientFill">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.GradientFill.Result">
        <short/>
      </element>
      <element name="TWidgetSet.GradientFill.DC">
        <short/>
      </element>
      <element name="TWidgetSet.GradientFill.Vertices">
        <short/>
      </element>
      <element name="TWidgetSet.GradientFill.NumVertices">
        <short/>
      </element>
      <element name="TWidgetSet.GradientFill.Meshes">
        <short/>
      </element>
      <element name="TWidgetSet.GradientFill.NumMeshes">
        <short/>
      </element>
      <element name="TWidgetSet.GradientFill.Mode">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.HideCaret">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.HideCaret.Result">
        <short/>
      </element>
      <element name="TWidgetSet.HideCaret.hWnd">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.InitializeCriticalSection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.InitializeCriticalSection.CritSection">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IntersectClipRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.IntersectClipRect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.IntersectClipRect.dc">
        <short/>
      </element>
      <element name="TWidgetSet.IntersectClipRect.Left">
        <short/>
      </element>
      <element name="TWidgetSet.IntersectClipRect.Top">
        <short/>
      </element>
      <element name="TWidgetSet.IntersectClipRect.Right">
        <short/>
      </element>
      <element name="TWidgetSet.IntersectClipRect.Bottom">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.InvalidateRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.InvalidateRect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.InvalidateRect.aHandle">
        <short/>
      </element>
      <element name="TWidgetSet.InvalidateRect.ARect">
        <short/>
      </element>
      <element name="TWidgetSet.InvalidateRect.bErase">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.InvalidateRgn">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.InvalidateRgn.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.InvalidateRgn.Handle">
        <short></short>
      </element>
      <element name="TWidgetSet.InvalidateRgn.Rgn">
        <short></short>
      </element>
      <element name="TWidgetSet.InvalidateRgn.Erase">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IsDBCSLeadByte">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.IsDBCSLeadByte.Result">
        <short/>
      </element>
      <element name="TWidgetSet.IsDBCSLeadByte.TestChar">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IsIconic">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.IsIconic.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.IsIconic.handle">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IsWindow">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.IsWindow.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.IsWindow.handle">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IsWindowEnabled">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.IsWindowEnabled.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.IsWindowEnabled.handle">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IsWindowVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.IsWindowVisible.Result">
        <short/>
      </element>
      <element name="TWidgetSet.IsWindowVisible.handle">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IsZoomed">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.IsZoomed.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.IsZoomed.handle">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.LeaveCriticalSection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.LeaveCriticalSection.CritSection">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.LineTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.LineTo.Result">
        <short/>
      </element>
      <element name="TWidgetSet.LineTo.DC">
        <short/>
      </element>
      <element name="TWidgetSet.LineTo.X">
        <short/>
      </element>
      <element name="TWidgetSet.LineTo.Y">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.LPtoDP">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.LPtoDP.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.LPtoDP.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.LPtoDP.Points">
        <short></short>
      </element>
      <element name="TWidgetSet.LPtoDP.Count">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.MaskBlt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.MaskBlt.Result">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.DestDC">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.X">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.Y">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.Width">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.Height">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.SrcDC">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.XSrc">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.YSrc">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.Mask">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.XMask">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.YMask">
        <short/>
      </element>
      <element name="TWidgetSet.MaskBlt.Rop">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.MessageBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.MessageBox.Result">
        <short/>
      </element>
      <element name="TWidgetSet.MessageBox.hWnd">
        <short/>
      </element>
      <element name="TWidgetSet.MessageBox.lpText">
        <short/>
      </element>
      <element name="TWidgetSet.MessageBox.lpCaption">
        <short/>
      </element>
      <element name="TWidgetSet.MessageBox.uType">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.MonitorFromPoint">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.MonitorFromPoint.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.MonitorFromPoint.ptScreenCoords">
        <short></short>
      </element>
      <element name="TWidgetSet.MonitorFromPoint.dwFlags">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.MonitorFromRect">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.MonitorFromRect.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.MonitorFromRect.lprcScreenCoords">
        <short></short>
      </element>
      <element name="TWidgetSet.MonitorFromRect.dwFlags">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.MonitorFromWindow">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.MonitorFromWindow.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.MonitorFromWindow.hWnd">
        <short></short>
      </element>
      <element name="TWidgetSet.MonitorFromWindow.dwFlags">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.MoveToEx">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.MoveToEx.Result">
        <short/>
      </element>
      <element name="TWidgetSet.MoveToEx.DC">
        <short/>
      </element>
      <element name="TWidgetSet.MoveToEx.X">
        <short/>
      </element>
      <element name="TWidgetSet.MoveToEx.Y">
        <short/>
      </element>
      <element name="TWidgetSet.MoveToEx.OldPoint">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.OffsetRgn">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.OffsetRgn.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.OffsetRgn.RGN">
        <short></short>
      </element>
      <element name="TWidgetSet.OffsetRgn.nXOffset">
        <short></short>
      </element>
      <element name="TWidgetSet.OffsetRgn.nYOffset">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.PeekMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.PeekMessage.Result">
        <short/>
      </element>
      <element name="TWidgetSet.PeekMessage.lpMsg">
        <short/>
      </element>
      <element name="TWidgetSet.PeekMessage.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.PeekMessage.wMsgFilterMin">
        <short/>
      </element>
      <element name="TWidgetSet.PeekMessage.wMsgFilterMax">
        <short/>
      </element>
      <element name="TWidgetSet.PeekMessage.wRemoveMsg">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.Pie">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.Pie.Result">
        <short/>
      </element>
      <element name="TWidgetSet.Pie.DC">
        <short/>
      </element>
      <element name="TWidgetSet.Pie.x1">
        <short></short>
      </element>
      <element name="TWidgetSet.Pie.y1">
        <short></short>
      </element>
      <element name="TWidgetSet.Pie.x2">
        <short></short>
      </element>
      <element name="TWidgetSet.Pie.y2">
        <short></short>
      </element>
      <element name="TWidgetSet.Pie.sx">
        <short></short>
      </element>
      <element name="TWidgetSet.Pie.sy">
        <short></short>
      </element>
      <element name="TWidgetSet.Pie.ex">
        <short></short>
      </element>
      <element name="TWidgetSet.Pie.ey">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.PolyBezier">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.PolyBezier.Result">
        <short/>
      </element>
      <element name="TWidgetSet.PolyBezier.DC">
        <short/>
      </element>
      <element name="TWidgetSet.PolyBezier.Points">
        <short/>
      </element>
      <element name="TWidgetSet.PolyBezier.NumPts">
        <short/>
      </element>
      <element name="TWidgetSet.PolyBezier.Filled">
        <short/>
      </element>
      <element name="TWidgetSet.PolyBezier.Continuous">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.Polygon">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.Polygon.Result">
        <short/>
      </element>
      <element name="TWidgetSet.Polygon.DC">
        <short/>
      </element>
      <element name="TWidgetSet.Polygon.Points">
        <short/>
      </element>
      <element name="TWidgetSet.Polygon.NumPts">
        <short/>
      </element>
      <element name="TWidgetSet.Polygon.Winding">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.Polyline">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.Polyline.Result">
        <short/>
      </element>
      <element name="TWidgetSet.Polyline.DC">
        <short/>
      </element>
      <element name="TWidgetSet.Polyline.Points">
        <short/>
      </element>
      <element name="TWidgetSet.Polyline.NumPts">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.PostMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.PostMessage.Result">
        <short/>
      </element>
      <element name="TWidgetSet.PostMessage.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.PostMessage.Msg">
        <short/>
      </element>
      <element name="TWidgetSet.PostMessage.WParam">
        <short/>
      </element>
      <element name="TWidgetSet.PostMessage.LParam">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.PtInRegion">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.PtInRegion.Result">
        <short/>
      </element>
      <element name="TWidgetSet.PtInRegion.RGN">
        <short/>
      </element>
      <element name="TWidgetSet.PtInRegion.X">
        <short/>
      </element>
      <element name="TWidgetSet.PtInRegion.Y">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RealizePalette">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.RealizePalette.Result">
        <short/>
      </element>
      <element name="TWidgetSet.RealizePalette.DC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.Rectangle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.Rectangle.Result">
        <short/>
      </element>
      <element name="TWidgetSet.Rectangle.DC">
        <short/>
      </element>
      <element name="TWidgetSet.Rectangle.X1">
        <short/>
      </element>
      <element name="TWidgetSet.Rectangle.Y1">
        <short/>
      </element>
      <element name="TWidgetSet.Rectangle.X2">
        <short/>
      </element>
      <element name="TWidgetSet.Rectangle.Y2">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RectVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.RectVisible.Result">
        <short/>
      </element>
      <element name="TWidgetSet.RectVisible.dc">
        <short/>
      </element>
      <element name="TWidgetSet.RectVisible.ARect">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RedrawWindow">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RedrawWindow.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.RedrawWindow.Wnd">
        <short></short>
      </element>
      <element name="TWidgetSet.RedrawWindow.lprcUpdate">
        <short></short>
      </element>
      <element name="TWidgetSet.RedrawWindow.hrgnUpdate">
        <short></short>
      </element>
      <element name="TWidgetSet.RedrawWindow.flags">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ReleaseCapture">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.ReleaseCapture.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ReleaseDC">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.ReleaseDC.Result">
        <short/>
      </element>
      <element name="TWidgetSet.ReleaseDC.hWnd">
        <short/>
      </element>
      <element name="TWidgetSet.ReleaseDC.DC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RemoveProp">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RemoveProp.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.RemoveProp.Handle">
        <short></short>
      </element>
      <element name="TWidgetSet.RemoveProp.Str">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RestoreDC">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.RestoreDC.Result">
        <short/>
      </element>
      <element name="TWidgetSet.RestoreDC.DC">
        <short/>
      </element>
      <element name="TWidgetSet.RestoreDC.SavedDC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RoundRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.RoundRect.Result">
        <short/>
      </element>
      <element name="TWidgetSet.RoundRect.DC">
        <short/>
      </element>
      <element name="TWidgetSet.RoundRect.X1">
        <short/>
      </element>
      <element name="TWidgetSet.RoundRect.Y1">
        <short/>
      </element>
      <element name="TWidgetSet.RoundRect.X2">
        <short/>
      </element>
      <element name="TWidgetSet.RoundRect.Y2">
        <short/>
      </element>
      <element name="TWidgetSet.RoundRect.RX">
        <short/>
      </element>
      <element name="TWidgetSet.RoundRect.RY">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SaveDC">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SaveDC.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SaveDC.DC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ScreenToClient">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.ScreenToClient.Result">
        <short/>
      </element>
      <element name="TWidgetSet.ScreenToClient.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.ScreenToClient.P">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ScrollWindowEx">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.ScrollWindowEx.Result">
        <short/>
      </element>
      <element name="TWidgetSet.ScrollWindowEx.hWnd">
        <short/>
      </element>
      <element name="TWidgetSet.ScrollWindowEx.dx">
        <short/>
      </element>
      <element name="TWidgetSet.ScrollWindowEx.dy">
        <short/>
      </element>
      <element name="TWidgetSet.ScrollWindowEx.prcScroll">
        <short/>
      </element>
      <element name="TWidgetSet.ScrollWindowEx.prcClip">
        <short/>
      </element>
      <element name="TWidgetSet.ScrollWindowEx.hrgnUpdate">
        <short/>
      </element>
      <element name="TWidgetSet.ScrollWindowEx.prcUpdate">
        <short/>
      </element>
      <element name="TWidgetSet.ScrollWindowEx.flags">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SelectClipRGN">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SelectClipRGN.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SelectClipRGN.DC">
        <short/>
      </element>
      <element name="TWidgetSet.SelectClipRGN.RGN">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SelectObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SelectObject.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SelectObject.DC">
        <short/>
      </element>
      <element name="TWidgetSet.SelectObject.GDIObj">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SelectPalette">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SelectPalette.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SelectPalette.DC">
        <short/>
      </element>
      <element name="TWidgetSet.SelectPalette.Palette">
        <short/>
      </element>
      <element name="TWidgetSet.SelectPalette.ForceBackground">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SendMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SendMessage.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SendMessage.HandleWnd">
        <short/>
      </element>
      <element name="TWidgetSet.SendMessage.Msg">
        <short/>
      </element>
      <element name="TWidgetSet.SendMessage.WParam">
        <short/>
      </element>
      <element name="TWidgetSet.SendMessage.LParam">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetActiveWindow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetActiveWindow.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetActiveWindow.Handle">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetBkColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetBkColor.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetBkColor.DC">
        <short/>
      </element>
      <element name="TWidgetSet.SetBkColor.Color">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetBkMode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetBkMode.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetBkMode.DC">
        <short/>
      </element>
      <element name="TWidgetSet.SetBkMode.bkMode">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetCapture">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetCapture.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetCapture.AHandle">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetCaretPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetCaretPos.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetCaretPos.X">
        <short/>
      </element>
      <element name="TWidgetSet.SetCaretPos.Y">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetCaretPosEx">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetCaretPosEx.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetCaretPosEx.handle">
        <short/>
      </element>
      <element name="TWidgetSet.SetCaretPosEx.X">
        <short/>
      </element>
      <element name="TWidgetSet.SetCaretPosEx.Y">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetCursor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetCursor.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetCursor.hCursor">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetCursorPos">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetCursorPos.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SetCursorPos.X">
        <short></short>
      </element>
      <element name="TWidgetSet.SetCursorPos.Y">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetFocus">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetFocus.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetFocus.hWnd">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetForegroundWindow">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetForegroundWindow.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SetForegroundWindow.hWnd">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetMapMode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetMapMode.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetMapMode.DC">
        <short/>
      </element>
      <element name="TWidgetSet.SetMapMode.fnMapMode">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetMenu">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetMenu.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SetMenu.AWindowHandle">
        <short></short>
      </element>
      <element name="TWidgetSet.SetMenu.AMenuHandle">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetParent">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetParent.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SetParent.hWndChild">
        <short></short>
      </element>
      <element name="TWidgetSet.SetParent.hWndParent">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetProp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetProp.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetProp.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.SetProp.Str">
        <short/>
      </element>
      <element name="TWidgetSet.SetProp.Data">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetROP2">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetROP2.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SetROP2.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.SetROP2.Mode">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetScrollInfo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetScrollInfo.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetScrollInfo.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.SetScrollInfo.SBStyle">
        <short/>
      </element>
      <element name="TWidgetSet.SetScrollInfo.ScrollInfo">
        <short/>
      </element>
      <element name="TWidgetSet.SetScrollInfo.Redraw">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetStretchBltMode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.SetStretchBltMode.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetStretchBltMode.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetStretchBltMode.StretchMode">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetSysColors">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.SetSysColors.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetSysColors.cElements">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetSysColors.lpaElements">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetSysColors.lpaRgbValues">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetTextAlign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.SetTextAlign.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetTextAlign.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetTextAlign.Flags">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetTextCharacterExtra">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.SetTextCharacterExtra.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetTextCharacterExtra._hdc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetTextCharacterExtra.nCharExtra">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetTextColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.SetTextColor.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetTextColor.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetTextColor.Color">
        <short/>
      </element>

      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetViewPortExtEx">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetViewPortExtEx.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SetViewPortExtEx.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.SetViewPortExtEx.XExtent">
        <short></short>
      </element>
      <element name="TWidgetSet.SetViewPortExtEx.YExtent">
        <short></short>
      </element>
      <element name="TWidgetSet.SetViewPortExtEx.OldSize">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetViewPortOrgEx">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetViewPortOrgEx.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SetViewPortOrgEx.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.SetViewPortOrgEx.NewX">
        <short></short>
      </element>
      <element name="TWidgetSet.SetViewPortOrgEx.NewY">
        <short></short>
      </element>
      <element name="TWidgetSet.SetViewPortOrgEx.OldPoint">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetWindowExtEx">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetWindowExtEx.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SetWindowExtEx.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.SetWindowExtEx.XExtent">
        <short></short>
      </element>
      <element name="TWidgetSet.SetWindowExtEx.YExtent">
        <short></short>
      </element>
      <element name="TWidgetSet.SetWindowExtEx.OldSize">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetWindowLong">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TWidgetSet.SetWindowLong.Result">
        <short/>
      </element>
      <element name="TWidgetSet.SetWindowLong.Handle">
        <short/>
      </element>
      <element name="TWidgetSet.SetWindowLong.Idx">
        <short/>
      </element>
      <element name="TWidgetSet.SetWindowLong.NewLong">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetWindowOrgEx">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.SetWindowOrgEx.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowOrgEx.dc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowOrgEx.NewX">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowOrgEx.NewY">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowOrgEx.OldPoint">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetWindowPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.SetWindowPos.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowPos.hWnd">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowPos.hWndInsertAfter">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowPos.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowPos.Y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowPos.cx">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowPos.cy">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetWindowPos.uFlags">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetWindowRgn">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetWindowRgn.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SetWindowRgn.hWnd">
        <short></short>
      </element>
      <element name="TWidgetSet.SetWindowRgn.hRgn">
        <short></short>
      </element>
      <element name="TWidgetSet.SetWindowRgn.bRedraw">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ShowCaret">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ShowCaret.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ShowCaret.hWnd">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ShowScrollBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ShowScrollBar.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ShowScrollBar.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ShowScrollBar.wBar">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ShowScrollBar.bShow">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ShowWindow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ShowWindow.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ShowWindow.hWnd">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ShowWindow.nCmdShow">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.Sleep">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.Sleep.dwMilliseconds">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.StretchBlt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.StretchBlt.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.DestDC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.Y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.Width">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.Height">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.SrcDC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.XSrc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.YSrc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.SrcWidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.SrcHeight">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchBlt.Rop">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.StretchDIBits">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.DestX">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.DestY">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.DestWidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.DestHeight">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.SrcX">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.SrcY">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.SrcWidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.SrcHeight">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.Bits">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.BitsInfo">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.Usage">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchDIBits.Rop">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SystemParametersInfo">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SystemParametersInfo.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.SystemParametersInfo.uiAction">
        <short></short>
      </element>
      <element name="TWidgetSet.SystemParametersInfo.uiParam">
        <short></short>
      </element>
      <element name="TWidgetSet.SystemParametersInfo.pvParam">
        <short></short>
      </element>
      <element name="TWidgetSet.SystemParametersInfo.fWinIni">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.TextOut">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.TextOut.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.TextOut.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.TextOut.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.TextOut.Y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.TextOut.Str">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.TextOut.Count">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.UpdateWindow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.UpdateWindow.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.UpdateWindow.Handle">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.WindowFromPoint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.WindowFromPoint.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.WindowFromPoint.Point">
        <short/>
      </element>

      <!-- function Visibility: public -->
      <element name="TWidgetSet.AddEventHandler">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AddEventHandler.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.AddEventHandler.AHandle">
        <short></short>
      </element>
      <element name="TWidgetSet.AddEventHandler.AFlags">
        <short></short>
      </element>
      <element name="TWidgetSet.AddEventHandler.AEventHandler">
        <short></short>
      </element>
      <element name="TWidgetSet.AddEventHandler.AData">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.AddProcessEventHandler">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AddProcessEventHandler.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.AddProcessEventHandler.AHandle">
        <short></short>
      </element>
      <element name="TWidgetSet.AddProcessEventHandler.AEventHandler">
        <short></short>
      </element>
      <element name="TWidgetSet.AddProcessEventHandler.AData">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.AddPipeEventHandler">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AddPipeEventHandler.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.AddPipeEventHandler.AHandle">
        <short></short>
      </element>
      <element name="TWidgetSet.AddPipeEventHandler.AEventHandler">
        <short></short>
      </element>
      <element name="TWidgetSet.AddPipeEventHandler.AData">
        <short></short>
      </element>
      <element name="TWidgetSet.AllocateHWnd">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AllocateHWnd.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.AllocateHWnd.Method">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.AskUser">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.AskUser.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.AskUser.DialogCaption">
        <short></short>
      </element>
      <element name="TWidgetSet.AskUser.DialogMessage">
        <short></short>
      </element>
      <element name="TWidgetSet.AskUser.DialogType">
        <short></short>
      </element>
      <element name="TWidgetSet.AskUser.Buttons">
        <short></short>
      </element>
      <element name="TWidgetSet.AskUser.HelpCtx">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.CallDefaultWndHandler">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallDefaultWndHandler.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CallDefaultWndHandler.Message">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ClipboardFormatToMimeType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ClipboardFormatToMimeType.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardFormatToMimeType.FormatID">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ClipboardGetData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ClipboardGetData.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetData.ClipboardType">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetData.FormatID">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetData.Stream">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ClipboardGetFormats">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ClipboardGetFormats.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetFormats.ClipboardType">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetFormats.Count">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetFormats.List">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ClipboardGetOwnerShip">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ClipboardGetOwnerShip.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetOwnerShip.ClipboardType">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetOwnerShip.OnRequestProc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetOwnerShip.FormatCount">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardGetOwnerShip.Formats">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ClipboardRegisterFormat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ClipboardRegisterFormat.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ClipboardRegisterFormat.AMimeType">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ComboBoxDropDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ComboBoxDropDown.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ComboBoxDropDown.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ComboBoxDropDown.DropDown">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateBitmapFromRawImage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateBitmapFromRawImage.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBitmapFromRawImage.RawImage">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBitmapFromRawImage.Bitmap">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBitmapFromRawImage.MaskBitmap">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateBitmapFromRawImage.AlwaysCreateMask">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateEmptyRegion">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateEmptyRegion.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreatePixmapIndirect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreatePixmapIndirect.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreatePixmapIndirect.Data">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreatePixmapIndirect.TransColor">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateRegionCopy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.CreateRegionCopy.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.CreateRegionCopy.SrcRGN">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateRubberBand">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.CreateRubberBand.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateRubberBand.ARect">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateRubberBand.ABrush">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.CreateStandardCursor">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.CreateStandardCursor.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.CreateStandardCursor.ACursor">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.DCClipRegionValid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.DCClipRegionValid.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.DCClipRegionValid.DC">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DeallocateHWnd">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DeallocateHWnd.Wnd">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DestroyRubberBand">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DestroyRubberBand.ARubberBand">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DrawDefaultDockImage">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DrawDefaultDockImage.AOldRect">
        <short></short>
      </element>
      <element name="TWidgetSet.DrawDefaultDockImage.ANewRect">
        <short></short>
      </element>
      <element name="TWidgetSet.DrawDefaultDockImage.AOperation">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.DrawGrid">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.DrawGrid.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.DrawGrid.R">
        <short></short>
      </element>
      <element name="TWidgetSet.DrawGrid.DX">
        <short></short>
      </element>
      <element name="TWidgetSet.DrawGrid.DY">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ExtUTF8Out">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ExtUTF8Out.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ExtUTF8Out.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ExtUTF8Out.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ExtUTF8Out.Y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ExtUTF8Out.Options">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ExtUTF8Out.Rect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ExtUTF8Out.Str">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ExtUTF8Out.Count">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ExtUTF8Out.Dx">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.FontCanUTF8">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.FontCanUTF8.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.FontCanUTF8.Font">
        <short/>
      </element>
      <element name="TWidgetSet.FontIsMonoSpace">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.FontIsMonoSpace.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.FontIsMonoSpace.Font">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.Frame">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.Frame.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.Frame.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.Frame.ARect">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.Frame3d">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.Frame3d.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.Frame3d.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.Frame3d.ARect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.Frame3d.FrameWidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.Frame3d.Style">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetAcceleratorString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetAcceleratorString.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetAcceleratorString.AVKey">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetAcceleratorString.AShiftState">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetBitmapRawImageDescription">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetBitmapRawImageDescription.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetBitmapRawImageDescription.Bitmap">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetBitmapRawImageDescription.Desc">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetCaretRespondToFocus">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetCaretRespondToFocus.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetCaretRespondToFocus.handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetCaretRespondToFocus.ShowHideOnFocus">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetClientBounds">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetClientBounds.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetClientBounds.handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetClientBounds.ARect">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetCmdLineParamDescForInterface">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetCmdLineParamDescForInterface.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetControlConstraints">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetControlConstraints.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetControlConstraints.Constraints">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetDCOriginRelativeToWindow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetDCOriginRelativeToWindow.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetDCOriginRelativeToWindow.PaintDC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetDCOriginRelativeToWindow.WindowHandle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetDCOriginRelativeToWindow.OriginDiff">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetDesignerDC">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetDesignerDC.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetDesignerDC.WindowHandle">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetDeviceRawImageDescription">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetDeviceRawImageDescription.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetDeviceRawImageDescription.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetDeviceRawImageDescription.Desc">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetDeviceSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetDeviceSize.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetDeviceSize.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetDeviceSize.p">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetLCLOwnerObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetLCLOwnerObject.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetLCLOwnerObject.Handle">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetListBoxIndexAtY">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetListBoxIndexAtY.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetListBoxIndexAtY.ListBox">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetListBoxIndexAtY.y">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetListBoxItemRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetListBoxItemRect.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetListBoxItemRect.ListBox">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetListBoxItemRect.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetListBoxItemRect.ARect">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetNotebookTabIndexAtPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetNotebookTabIndexAtPos.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetNotebookTabIndexAtPos.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetNotebookTabIndexAtPos.ClientPos">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetRawImageFromDevice">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetRawImageFromDevice.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetRawImageFromDevice.SrcDC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetRawImageFromDevice.SrcRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetRawImageFromDevice.NewRawImage">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetRawImageFromBitmap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetRawImageFromBitmap.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetRawImageFromBitmap.SrcBitmap">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetRawImageFromBitmap.SrcMaskBitmap">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetRawImageFromBitmap.SrcRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetRawImageFromBitmap.NewRawImage">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetScrollBarSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetScrollBarSize.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetScrollBarSize.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetScrollBarSize.SBStyle">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetScrollbarVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetScrollbarVisible.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetScrollbarVisible.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetScrollbarVisible.SBStyle">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.GetWindowRelativePosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.GetWindowRelativePosition.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetWindowRelativePosition.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetWindowRelativePosition.Left">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.GetWindowRelativePosition.Top">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IntfSendsUTF8KeyPress">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.IntfSendsUTF8KeyPress.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.InvalidateFrame">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.InvalidateFrame.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.InvalidateFrame.aHandle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.InvalidateFrame.ARect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.InvalidateFrame.bErase">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.InvalidateFrame.BorderWidth">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.IsDesignerDC">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.IsDesignerDC.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.IsDesignerDC.WindowHandle">
        <short></short>
      </element>
      <element name="TWidgetSet.IsDesignerDC.DC">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.MoveWindowOrgEx">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.MoveWindowOrgEx.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.MoveWindowOrgEx.dc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.MoveWindowOrgEx.dX">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.MoveWindowOrgEx.dY">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.PromptUser">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.PromptUser.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUser.DialogCaption">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUser.DialogMessage">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUser.DialogType">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUser.Buttons">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUser.ButtonCount">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUser.DefaultIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUser.EscapeResult">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.PromptUserAtXY">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.DialogCaption">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.DialogMessage">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.DialogType">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.Buttons">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.ButtonCount">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.DefaultIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.EscapeResult">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.PromptUserAtXY.Y">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RadialArc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.RadialArc.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RadialArc.DC">
        <short/>
      </element>
      <element name="TWidgetSet.RadialArc.left">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialArc.top">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialArc.right">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialArc.bottom">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialArc.sx">
        <short/>
      </element>
      <element name="TWidgetSet.RadialArc.sy">
        <short/>
      </element>
      <element name="TWidgetSet.RadialArc.ex">
        <short/>
      </element>
      <element name="TWidgetSet.RadialArc.ey">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RadialChord">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.RadialChord.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RadialChord.DC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RadialChord.x1">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialChord.y1">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialChord.x2">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialChord.y2">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialChord.sx">
        <short/>
      </element>
      <element name="TWidgetSet.RadialChord.sy">
        <short/>
      </element>
      <element name="TWidgetSet.RadialChord.ex">
        <short/>
      </element>
      <element name="TWidgetSet.RadialChord.ey">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RadialPie">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.RadialPie.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RadialPie.DC">
        <short/>
      </element>
      <element name="TWidgetSet.RadialPie.x1">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialPie.y1">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialPie.x2">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialPie.y2">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialPie.Angle1">
        <short></short>
      </element>
      <element name="TWidgetSet.RadialPie.Angle2">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RawImage_CreateBitmaps">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RawImage_CreateBitmaps.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_CreateBitmaps.ARawImage">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_CreateBitmaps.ABitmap">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_CreateBitmaps.AMask">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_CreateBitmaps.ASkipMask">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RawImage_DescriptionFromBitmap">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RawImage_DescriptionFromBitmap.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_DescriptionFromBitmap.ABitmap">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_DescriptionFromBitmap.ADesc">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RawImage_DescriptionFromDevice">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RawImage_DescriptionFromDevice.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_DescriptionFromDevice.ADC">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_DescriptionFromDevice.ADesc">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RawImage_FromBitmap">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RawImage_FromBitmap.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_FromBitmap.ARawImage">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_FromBitmap.ABitmap">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_FromBitmap.AMask">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_FromBitmap.ARect">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RawImage_FromDevice">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RawImage_FromDevice.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_FromDevice.ARawImage">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_FromDevice.ADC">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_FromDevice.ARect">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_QueryDescription">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RawImage_QueryDescription.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_QueryDescription.AFlags">
        <short></short>
      </element>
      <element name="TWidgetSet.RawImage_QueryDescription.ADesc">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RegroupMenuItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.RegroupMenuItem.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RegroupMenuItem.hndMenu">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RegroupMenuItem.GroupIndex">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.ReleaseDesignerDC">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.ReleaseDesignerDC.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ReleaseDesignerDC.hWnd">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.ReleaseDesignerDC.DC">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.RemoveEventHandler">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RemoveEventHandler.AHandler">
        <short></short>
      </element>
      <element name="TWidgetSet.RemoveProcessEventHandler">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RemoveProcessEventHandler.AHandler">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.RemovePipeEventHandler">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.RemovePipeEventHandler.AHandler">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RequestInput">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.RequestInput.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RequestInput.InputCaption">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RequestInput.InputPrompt">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RequestInput.MaskInput">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RequestInput.Value">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.RightJustifyMenuItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.RightJustifyMenuItem.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RightJustifyMenuItem.HndMenu">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.RightJustifyMenuItem.bRightJustify">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.SendCachedLCLMessages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetCaretRespondToFocus">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.SetCaretRespondToFocus.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetCaretRespondToFocus.handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetCaretRespondToFocus.ShowHideOnFocus">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.SetComboMinDropDownSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.SetComboMinDropDownSize.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetComboMinDropDownSize.Handle">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetComboMinDropDownSize.MinItemsWidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetComboMinDropDownSize.MinItemsHeight">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.SetComboMinDropDownSize.MinItemCount">
        <short/>
      </element>

      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.SetEventHandlerFlags">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetEventHandlerFlags.AHandler">
        <short></short>
      </element>
      <element name="TWidgetSet.SetEventHandlerFlags.NewFlags">
        <short></short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TWidgetSet.SetRubberBandRect">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.SetRubberBandRect.ARubberBand">
        <short></short>
      </element>
      <element name="TWidgetSet.SetRubberBandRect.ARect">
        <short></short>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.StretchMaskBlt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.DestDC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.Y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.Width">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.Height">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.SrcDC">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.XSrc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.YSrc">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.SrcWidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.SrcHeight">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.Mask">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.XMask">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.YMask">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TWidgetSet.StretchMaskBlt.Rop">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TWidgetSet.TextUTF8Out">
        <short></short>
        <descr>
        </descr>
        <errors>
        </errors>
        <seealso>
        </seealso>
      </element>
      <element name="TWidgetSet.TextUTF8Out.Result">
        <short></short>
      </element>
      <element name="TWidgetSet.TextUTF8Out.DC">
        <short></short>
      </element>
      <element name="TWidgetSet.TextUTF8Out.X">
        <short></short>
      </element>
      <element name="TWidgetSet.TextUTF8Out.Y">
        <short></short>
      </element>
      <element name="TWidgetSet.TextUTF8Out.Str">
        <short></short>
      </element>
      <element name="TWidgetSet.TextUTF8Out.Count">
        <short></short>
      </element>
      <!-- property Visibility: public -->
      <element name="TWidgetSet.ThemeServices">
        <short></short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
<!-- "class of" type Visibility: default -->
      <element name="TWidgetSetClass" link="TWidgetSet"/>
      <!-- constant Visibility: default -->
      <element name="LCLPlatformDirNames">
        <short></short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- constant Visibility: default -->
      <element name="LCL_CAPABILITY_NO">
        <short></short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- constant Visibility: default -->
      <element name="LCL_CAPABILITY_YES">
        <short></short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- object Visibility: default -->
      <element name="EInterfaceException">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="EInterfaceError">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="EInterfaceCritical">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="EInterfaceWarning">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>

      <!-- function type Visibility: default -->
      <element name="TInputDialogFunction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TInputDialogFunction.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TInputDialogFunction.InputCaption">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TInputDialogFunction.InputPrompt">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TInputDialogFunction.MaskInput">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TInputDialogFunction.Value">
        <short/>
      </element>
      <!-- variable Visibility: default -->
      <element name="InputDialogFunction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function type Visibility: default -->
      <element name="TPromptDialogFunction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TPromptDialogFunction.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.DialogCaption">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.DialogMessage">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.DialogType">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.Buttons">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.ButtonCount">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.DefaultIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.EscapeResult">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.UseDefaultPos">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPromptDialogFunction.Y">
        <short/>
      </element>
      <!-- variable Visibility: default -->
      <element name="PromptDialogFunction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function type Visibility: default -->
      <element name="TQuestionDialogFunction">
        <short></short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <element name="TQuestionDialogFunction.Result">
        <short></short>
      </element>
      <element name="TQuestionDialogFunction.aCaption">
        <short></short>
      </element>
      <element name="TQuestionDialogFunction.aMsg">
        <short></short>
      </element>
      <element name="TQuestionDialogFunction.DlgType">
        <short></short>
      </element>
      <element name="TQuestionDialogFunction.Buttons">
        <short></short>
      </element>
      <element name="TQuestionDialogFunction.HelpCtx">
        <short></short>
      </element>
<!-- variable Visibility: default -->
      <element name="QuestionDialogFunction">
        <short></short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
      <!-- variable Visibility: default -->
      <element name="WidgetSet">
        <short></short>
        <descr>
        </descr>
        <seealso>
        </seealso>
      </element>
    </module>
    <!-- InterfaceBase -->
  </package>
</fpdoc-descriptions>
