<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="LCL">
    <!--
  ====================================================================
    ComCtrls
  ====================================================================
-->
    <module name="ComCtrls">
      <short>Several controls commonly used in Lazarus forms</short>
      <descr/>
      <!-- unresolved type reference Visibility: default -->
      <element name="SysUtils">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Math">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="FPCAdds">
        <short>???</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLStrConsts">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LResources">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLIntf">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLType">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLProc">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="AvgLvlTree">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LMessages">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="ImgList">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="ActnList">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="GraphType">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Graphics">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Menus">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Controls">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Forms">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="StdCtrls">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="ExtCtrls">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="ToolWin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="CommCtrl">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Buttons">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="THitTest">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htAbove"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htBelow"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htNowhere"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htOnItem"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htOnButton"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htOnIcon"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htOnIndent"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htOnLabel"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htOnRight"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htOnStateIcon"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htToLeft"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="THitTest.htToRight"><short/></element>
      <!-- set type Visibility: default -->
      <element name="THitTests">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TStatusPanelStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TStatusPanelStyle.psText"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TStatusPanelStyle.psOwnerDraw"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TStatusPanelBevel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TStatusPanelBevel.pbNone"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TStatusPanelBevel.pbLowered"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TStatusPanelBevel.pbRaised"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TPanelPart">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TPanelPart.ppText"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TPanelPart.ppBorder"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TPanelPart.ppWidth"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TPanelParts">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TStatusPanel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusPanel.FText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusPanel.FWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusPanel.FAlignment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusPanel.FBevel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusPanel.FParentBiDiMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusPanel.FStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TStatusPanel.SetAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanel.SetAlignment.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TStatusPanel.SetBevel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanel.SetBevel.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TStatusPanel.SetStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanel.SetStyle.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TStatusPanel.SetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanel.SetText.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TStatusPanel.SetWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanel.SetWidth.Value"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TStatusPanel.GetDisplayName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStatusPanel.GetDisplayName.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TStatusPanel.PanelChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanel.PanelChanged.Parts"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TStatusPanel.SetIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanel.SetIndex.Value"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TStatusPanel.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanel.Create.aCollection"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TStatusPanel.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TStatusPanel.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanel.Assign.Source"><short/></element>
      <!-- function Visibility: public -->
      <element name="TStatusPanel.StatusBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStatusPanel.StatusBar.Result"><short/></element>
      <!-- property Visibility: published -->
      <element name="TStatusPanel.Alignment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusPanel.Bevel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusPanel.Style">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusPanel.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusPanel.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TStatusPanels">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusPanels.FStatusBar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TStatusPanels.GetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStatusPanels.GetItem.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanels.GetItem.Index"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TStatusPanels.SetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanels.SetItem.Index"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanels.SetItem.Value"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TStatusPanels.GetOwner">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStatusPanels.GetOwner.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TStatusPanels.Update">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanels.Update.Item"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TStatusPanels.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanels.Create.TheStatusBar"><short/></element>
      <!-- function Visibility: public -->
      <element name="TStatusPanels.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStatusPanels.Add.Result"><short/></element>
      <!-- property Visibility: public -->
      <element name="TStatusPanels.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusPanels.Items.Index"><short/></element>
      <!-- property Visibility: public -->
      <element name="TStatusPanels.StatusBar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TStatusBar">
        <short><i>TStatusBar</i> - a strip along the bottom of a form for displaying information on current status</short>
        <descr>
          <p><i>TStatusBar</i> - a strip along the bottom of a form for displaying information on current status</p>
          <p>The bar may consist of a single <i>SimplePanel</i>, in which case the displayed text is contained in <i>SimpleText</i>.</p>
          <p>However if <i>SimplePanel</i> is false, then there can be multiple panels or sub-sections of the status bar, whose properties are described in <i>Panels</i>.</p>
          <p>The property <i>SimpleString</i> can be assigned programatically to display the value of some variable, such as the position of the Splitter in the example</p>
        </descr>
        <example file="ExtCtrls/StatusBar.pas"/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusBar.FCanvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusBar.FHandlePanelCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusBar.FHandleObjectNeedsUpdate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusBar.FHandleUpdatePanelIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusBar.FUpdateLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusBar.FPanels">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusBar.FSimpleText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusBar.FSimplePanel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStatusBar.FOnHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TStatusBar.SetPanels">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusBar.SetPanels.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TStatusBar.SetSimpleText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusBar.SetSimpleText.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TStatusBar.SetSimplePanel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusBar.SetSimplePanel.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TStatusBar.CreateWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStatusBar.DestroyWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStatusBar.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStatusBar.UpdateHandleObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusBar.UpdateHandleObject.PanelIndex"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TStatusBar.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusBar.Create.TheOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TStatusBar.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TStatusBar.InvalidatePanel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStatusBar.InvalidatePanel.PanelIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TStatusBar.InvalidatePanel.PanelParts"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TStatusBar.BeginUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TStatusBar.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TStatusBar.UpdatingStatusBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStatusBar.UpdatingStatusBar.Result"><short/></element>
      <!-- property Visibility: public -->
      <element name="TStatusBar.Canvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusBar.Action">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusBar.Panels">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusBar.SimpleText">
        <short><i>SimpleText</i> - a character string containing the information to be displayed in the Status Bar</short>
        <descr>
          <p><i>SimpleText</i> - a character string containing the information to be displayed in the Status Bar</p>
          <p>This is displayed if SimplePanel is true; otherwise the information in Panels is displayed.</p>
        </descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusBar.SimplePanel">
        <short>SimplePanel - boolean. Is there just one continuous panel, or several sub-panels?</short>
        <descr>
          <p><i>SimplePanel </i>- boolean. Is there just one continuous panel, or several sub-panels?</p>
          <p>If true, the value of <i>SimpleText</i> is displayed; if false, the contents of <i>Panels</i> is displayed. </p>
          <p>Contents can be adjusted with a stringlist editor that pops up when the ellipsis (...) next to <i>Panels</i> is selected and allows insertion orf arbitrary number of sub-panels with their own strings</p>
        </descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusBar.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusBar.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusBar.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusBar.OnHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStatusBar.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TTabStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTabStyle.tsTabs"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTabStyle.tsButtons"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTabStyle.tsFlatButtons"><short/></element>
      <!-- object Visibility: default -->
      <element name="TTabSheet">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabSheet.FOnHide">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabSheet.FOnShow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TTabSheet.GetPageControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabSheet.GetPageControl.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTabSheet.GetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabSheet.GetTabIndex.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTabSheet.SetPageControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabSheet.SetPageControl.APageControl"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTabSheet.SetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabSheet.SetTabIndex.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabSheet.DoHide">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TTabSheet.DoShow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TTabSheet.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabSheet.Create.TheOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TTabSheet.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabSheet.PageControl">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabSheet.TabIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.ChildSizing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.ClientHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.ClientWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.Height">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.ImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.Left">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.OnContextPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.OnHide">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.OnResize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.OnShow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.PageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.ParentFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.TabVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.Top">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabSheet.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TPageControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TPageControl.FOnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TPageControl.GetActivePageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TPageControl.GetActivePageIndex.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TPageControl.GetActiveTabSheet">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TPageControl.GetActiveTabSheet.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TPageControl.GetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TPageControl.GetTabIndex.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TPageControl.GetTabSheet">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TPageControl.GetTabSheet.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.GetTabSheet.Index"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TPageControl.SetActivePageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.SetActivePageIndex.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TPageControl.SetActiveTabSheet">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.SetActiveTabSheet.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TPageControl.SetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.SetTabIndex.AValue"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TPageControl.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.Create.TheOwner"><short/></element>
      <!-- function Visibility: public -->
      <element name="TPageControl.FindNextPage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TPageControl.FindNextPage.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.FindNextPage.CurPage"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.FindNextPage.GoForward"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.FindNextPage.CheckTabVisible"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TPageControl.SelectNextPage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.SelectNextPage.GoForward"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TPageControl.SelectNextPage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.SelectNextPage.GoForward"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.SelectNextPage.CheckTabVisible"><short/></element>
      <!-- property Visibility: public -->
      <element name="TPageControl.ActivePageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TPageControl.Pages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPageControl.Pages.Index"><short/></element>
      <!-- property Visibility: published -->
      <element name="TPageControl.ActivePage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.Images">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.ParentFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.TabIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.TabPosition">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnContextPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnGetImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPageControl.OnResize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TTabControlStrings">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FHotTrack">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FMultiLine">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FMultiSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FOwnerDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FRaggedRight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FScrollOpposite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FTabControl">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FTabHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FTabWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlStrings.FUpdateCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TTabControlStrings.GetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlStrings.GetTabIndex.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetHotTrack">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetHotTrack.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetImages.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetMultiLine">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetMultiLine.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetMultiSelect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetMultiSelect.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetOwnerDraw">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetOwnerDraw.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetRaggedRight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetRaggedRight.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetScrollOpposite">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetScrollOpposite.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetTabHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetTabHeight.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetTabIndex.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlStrings.SetTabWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.SetTabWidth.AValue"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TTabControlStrings.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.Create.TheTabControl"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTabControlStrings.GetHitTestInfoAt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlStrings.GetHitTestInfoAt.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.GetHitTestInfoAt.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.GetHitTestInfoAt.Y"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTabControlStrings.GetSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlStrings.GetSize.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTabControlStrings.IndexOfTabAt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlStrings.IndexOfTabAt.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.IndexOfTabAt.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.IndexOfTabAt.Y"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTabControlStrings.RowCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlStrings.RowCount.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTabControlStrings.TabRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlStrings.TabRect.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.TabRect.Index"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlStrings.ImageListChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.ImageListChange.Sender"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlStrings.ScrollTabs">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlStrings.ScrollTabs.Delta"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlStrings.TabControlBoundsChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlStrings.UpdateTabImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlStrings.BeginUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlStrings.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TTabControlStrings.IsUpdating">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlStrings.IsUpdating.Result"><short/></element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.TabControl">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.TabIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.HotTrack">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.Images">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.MultiLine">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.MultiSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.OwnerDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.RaggedRight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.ScrollOpposite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.TabHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControlStrings.TabWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TTabControlNoteBookStrings">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTabControlNoteBookStrings.FNoteBook">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TTabControlNoteBookStrings.Get">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlNoteBookStrings.Get.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.Get.Index"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TTabControlNoteBookStrings.GetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlNoteBookStrings.GetCount.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TTabControlNoteBookStrings.GetObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlNoteBookStrings.GetObject.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.GetObject.Index"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TTabControlNoteBookStrings.GetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlNoteBookStrings.GetTabIndex.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.NBChanging">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.NBChanging.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.NBChanging.AllowChange"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.NBGetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.NBGetImageIndex.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.NBGetImageIndex.TheTabIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.NBGetImageIndex.ImageIndex"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.NBPageChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.NBPageChanged.Sender"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.Put">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.Put.Index"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.Put.S"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.PutObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.PutObject.Index"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.PutObject.AObject"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.SetImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.SetImages.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.SetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.SetTabIndex.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.SetUpdateState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.SetUpdateState.Updating"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.SetTabHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.SetTabHeight.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTabControlNoteBookStrings.SetTabWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.SetTabWidth.AValue"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TTabControlNoteBookStrings.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.Create.TheTabControl"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TTabControlNoteBookStrings.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlNoteBookStrings.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlNoteBookStrings.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.Delete.Index"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlNoteBookStrings.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.Insert.Index"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.Insert.S"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTabControlNoteBookStrings.GetSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlNoteBookStrings.GetSize.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTabControlNoteBookStrings.TabControlBoundsChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TTabControlNoteBookStrings.IndexOfTabAt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTabControlNoteBookStrings.IndexOfTabAt.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.IndexOfTabAt.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTabControlNoteBookStrings.IndexOfTabAt.Y"><short/></element>
      <!-- property Visibility: public -->
      <element name="TTabControlNoteBookStrings.NoteBook">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TDrawTabEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawTabEvent.Control"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TDrawTabEvent.TabIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TDrawTabEvent.Rect"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TDrawTabEvent.Active"><short/></element>
      <!-- object Visibility: default -->
      <element name="TCustomTabControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FImageChangeLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FOnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FOnChangeNeeded">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FOnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FOnDrawTab">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FOnGetImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FTabControlCreating">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FTabPosition">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTabControl.FTabs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetDisplayRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetDisplayRect.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetHotTrack">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetHotTrack.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetMultiLine">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetMultiLine.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetMultiSelect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetMultiSelect.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetOwnerDraw">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetOwnerDraw.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetRaggedRight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetRaggedRight.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetScrollOpposite">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetScrollOpposite.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetTabHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetTabHeight.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetTabIndex.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTabControl.GetTabWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetTabWidth.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetHotTrack">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetHotTrack.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetImages.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetMultiLine">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetMultiLine.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetMultiSelect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetMultiSelect.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetOwnerDraw">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetOwnerDraw.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetRaggedRight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetRaggedRight.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetScrollOpposite">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetScrollOpposite.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetStyle.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetTabHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetTabHeight.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetTabPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetTabPosition.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetTabs">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetTabs.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTabControl.SetTabWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetTabWidth.AValue"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTabControl.CanChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.CanChange.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTabControl.CanShowTab">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.CanShowTab.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.CanShowTab.ATabIndex"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.Change">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.DrawTab">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.DrawTab.ATabIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.DrawTab.Rect"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.DrawTab.Active"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTabControl.GetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetImageIndex.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.GetImageIndex.ATabIndex"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.CreateWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.DestroyHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.Notification.AComponent"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.Notification.Operation"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.SetTabIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.SetTabIndex.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.UpdateTabImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.ImageListChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.ImageListChange.Sender"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.DoSetBounds">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.DoSetBounds.ALeft"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.DoSetBounds.ATop"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.DoSetBounds.AWidth"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.DoSetBounds.AHeight"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.Paint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomTabControl.GetDisplayRectWithBorder">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetDisplayRectWithBorder.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTabControl.AdjustClientRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.AdjustClientRect.ARect"><short/></element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.DisplayRect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.HotTrack">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.Images">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.MultiLine">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.MultiSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.OnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.OnDrawTab">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.OnGetImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.OwnerDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.RaggedRight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.ScrollOpposite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.Style">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.TabHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.TabIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.TabPosition">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.Tabs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTabControl.TabWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomTabControl.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.Create.TheOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TCustomTabControl.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomTabControl.IndexOfTabAt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.IndexOfTabAt.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.IndexOfTabAt.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.IndexOfTabAt.Y"><short/></element>
      <!-- function Visibility: public -->
      <element name="TCustomTabControl.GetHitTestInfoAt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.GetHitTestInfoAt.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.GetHitTestInfoAt.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.GetHitTestInfoAt.Y"><short/></element>
      <!-- function Visibility: public -->
      <element name="TCustomTabControl.TabRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.TabRect.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.TabRect.Index"><short/></element>
      <!-- function Visibility: public -->
      <element name="TCustomTabControl.RowCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.RowCount.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTabControl.ScrollTabs">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTabControl.ScrollTabs.Delta"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTabControl.BeginUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTabControl.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomTabControl.IsUpdating">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTabControl.IsUpdating.Result"><short/></element>
      <!-- property Visibility: public -->
      <element name="TCustomTabControl.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TTabControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTabControl.DisplayRect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.DockSite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.DragKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.HotTrack">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.Images">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.MultiLine">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.MultiSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnChangeBounds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnContextPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnDockDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnDockOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnDrawTab">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnEndDock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnGetImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnGetSiteInfo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnResize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnStartDock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OnUnDock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.OwnerDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.ParentFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.RaggedRight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.ScrollOpposite">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.Style">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.TabHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.TabIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.TabPosition">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.Tabs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.TabWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTabControl.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TCustomDrawTarget">
        <short>Set</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawTarget.dtControl"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawTarget.dtItem"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawTarget.dtSubItem"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TCustomDrawStage">
        <short>Set of constants to define the drawing stages.</short>
        <descr>So far I've only seen cdPrePaint used in this unit.</descr>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStage.cdPrePaint"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStage.cdPostPaint"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStage.cdPreErase"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStage.cdPostErase"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TCustomDrawStateFlag">
        <short>Set to define the DrawState</short>
        <descr>TCustomDrawStateFlag consists of the following constants:<br/>
cdsSelected,<br/> 
cdsGrayed,<br/> 
cdsDisabled,<br/> 
cdsChecked,<br/>
cdsFocused,<br/> 
cdsDefault,<br/> 
cdsHot,<br/> 
cdsMarked,<br/> 
cdsIndeterminate</descr>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStateFlag.cdsSelected"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStateFlag.cdsGrayed"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStateFlag.cdsDisabled"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStateFlag.cdsChecked"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStateFlag.cdsFocused"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStateFlag.cdsDefault"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStateFlag.cdsHot"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStateFlag.cdsMarked"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TCustomDrawStateFlag.cdsIndeterminate"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TCustomDrawState">
        <short>A subset of TCustomDrawStateFlag</short>
        <descr>TCustomDrawState determines how a item will be drawn.</descr>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TSortType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TSortType.stNone"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TSortType.stData"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TSortType.stText"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TSortType.stBoth"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TListItemState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TListItemState.lisCut"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListItemState.lisDropTarget"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListItemState.lisFocused"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListItemState.lisSelected"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TListItemStates">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TListItemFlag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TListItemFlag.lifDestroying"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListItemFlag.lifCreated"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TListItemFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TListItem">
        <short>TListItem - the ancestor class for TCustomListView and TListView</short>
        <descr>Most properties are inherited from ancestors, TPersistent and TObject</descr>
        <seealso>
          <link id="#rtl.Classes.TPersistent"/>
          <link id="#rtl.Objects.TObject"/>
        </seealso>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItem.FOwner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItem.FFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItem.FSubItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItem.FCaption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItem.FData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItem.FImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItem.FStates">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TListItem.GetState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItem.GetState.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItem.GetState.ALisOrd"><short/></element>
      <!-- function Visibility: private -->
      <element name="TListItem.GetIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItem.GetIndex.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TListItem.GetSubItemImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItem.GetSubItemImages.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItem.GetSubItemImages.AIndex"><short/></element>
      <!-- function Visibility: private -->
      <element name="TListItem.GetSubItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItem.GetSubItems.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TListItem.IntfUpdateAllowed">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItem.IntfUpdateAllowed.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListItem.IntfUpdateText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TListItem.IntfUpdateImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TListItem.SetState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.SetState.ALisOrd"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItem.SetState.AIsSet"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListItem.SetData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.SetData.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListItem.SetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.SetImageIndex.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListItem.SetCaption">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.SetCaption.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListItem.SetSubItemImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.SetSubItemImages.AIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItem.SetSubItemImages.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListItem.SetSubItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.SetSubItems.AValue"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TListItem.IsEqual">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItem.IsEqual.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItem.IsEqual.AItem"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TListItem.Assign">
        <seealso><link id="#rtl.Classes.TPersistent.Assign"/></seealso>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.Assign.ASource"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TListItem.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.Create.AOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TListItem.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TListItem.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TListItem.MakeVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.MakeVisible.PartialOK"><short/></element>
      <!-- property Visibility: public -->
      <element name="TListItem.Caption">
        <short><i>Caption</i> - the name given to this item on the list</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.Cut">
        <short><i>Cut</i> this item from the list (but can be placed on clipboard)</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.Data">
        <short>Pointer to the Data asociated with this item</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.DropTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.Focused">
        <short>Property is true if this item has Focus</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.Index">
        <short>The index of this item in the list (integer)</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.ImageIndex">
        <short>The index of the image associated with this Iitem in the list</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.Owner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.Selected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.SubItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItem.SubItemImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItem.SubItemImages.AIndex"><short/></element>
      <!-- object Visibility: default -->
      <element name="TListItems">
        <short>A list of items with a cache of the last accessed item</short>
        <descr><i>TListitems</i>
 has a built-in cache of the last accessed item. This will speed up interface updates since Item.Index is   often used for the same item updating more properties.  If FCacheIndex = -1 then the cache is not valid.</descr>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItems.FOwner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItems.FItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItems.FCacheIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListItems.FCacheItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TListItems.IntfCreateCacheItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TListItems.IntfUpdateAllowed">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItems.IntfUpdateAllowed.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListItems.ItemDestroying">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.ItemDestroying.AItem"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListItems.ReadData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.ReadData.Stream"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListItems.WriteData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.WriteData.Stream"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TListItems.DefineProperties">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.DefineProperties.Filer"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TListItems.GetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItems.GetCount.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TListItems.GetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItems.GetItem.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItems.GetItem.AIndex"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TListItems.IndexOf">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItems.IndexOf.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItems.IndexOf.AItem"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TListItems.IntfCreateItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TListItems.SetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.SetItem.AIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItems.SetItem.AValue"><short/></element>
      <!-- function Visibility: public -->
      <element name="TListItems.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItems.Add.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TListItems.AddItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.AddItem.AItem"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TListItems.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TListItems.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.Create.AOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TListItems.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TListItems.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.Delete.AIndex"><short/></element>
      <!-- function Visibility: public -->
      <element name="TListItems.FindData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItems.FindData.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItems.FindData.AData"><short/></element>
      <!-- function Visibility: public -->
      <element name="TListItems.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListItems.Insert.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItems.Insert.AIndex"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TListItems.InsertItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.InsertItem.AItem"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListItems.InsertItem.AIndex"><short/></element>
      <!-- property Visibility: public -->
      <element name="TListItems.Count">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TListItems.Item">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListItems.Item.AIndex"><short/></element>
      <!-- property Visibility: public -->
      <element name="TListItems.Owner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- range type Visibility: default -->
      <element name="TWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TListColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumn.FAlignment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumn.FAutoSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumn.FCaption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumn.FMinWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumn.FMaxWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumn.FVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumn.FWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumn.FImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumn.FTag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TListColumn.GetWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListColumn.GetWidth.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumn.IntfCreateColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TListColumn.IntfUpdateAllowed">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListColumn.IntfUpdateAllowed.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumn.SetVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.SetVisible.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumn.SetAutoSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.SetAutoSize.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumn.SetMinWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.SetMinWidth.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumn.SetMaxWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.SetMaxWidth.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumn.SetWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.SetWidth.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumn.SetCaption">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.SetCaption.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumn.SetAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.SetAlignment.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumn.SetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.SetImageIndex.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TListColumn.SetIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.SetIndex.AValue"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TListColumn.GetDisplayName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListColumn.GetDisplayName.Result"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TListColumn.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.Create.ACollection"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TListColumn.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TListColumn.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumn.Assign.ASource"><short/></element>
      <!-- property Visibility: published -->
      <element name="TListColumn.Alignment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListColumn.AutoSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListColumn.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListColumn.ImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListColumn.MaxWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListColumn.MinWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListColumn.Tag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListColumn.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListColumn.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TListColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumns.FOwner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumns.FUpdateCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumns.FItemNeedsUpdate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TListColumns.FNeedsUpdate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TListColumns.GetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListColumns.GetItem.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListColumns.GetItem.AIndex"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TListColumns.IntfCreateColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TListColumns.SetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumns.SetItem.AIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TListColumns.SetItem.AValue"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TListColumns.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumns.Create.TheOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TListColumns.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TListColumns.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TListColumns.Add.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TListColumns.BeginUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TListColumns.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TListColumns.Owner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TListColumns.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumns.Items.AIndex"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TListColumns.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TListColumns.Assign.Source"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TItemChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemChange.ctText"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemChange.ctImage"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemChange.ctState"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TViewStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TViewStyle.vsIcon"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TViewStyle.vsSmallIcon"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TViewStyle.vsList"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TViewStyle.vsReport"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TLVChangeEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLVChangeEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVChangeEvent.Item"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVChangeEvent.Change"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TLVColumnClickEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLVColumnClickEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVColumnClickEvent.Column"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TLVColumnRClickEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLVColumnRClickEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVColumnRClickEvent.Column"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVColumnRClickEvent.Point"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TLVCompareEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLVCompareEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVCompareEvent.Item1"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVCompareEvent.Item2"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVCompareEvent.Data"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVCompareEvent.Compare"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TLVDeletedEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLVDeletedEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVDeletedEvent.Item"><short/></element>
      <!-- alias type Visibility: default -->
      <element name="TLVInsertEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TLVSelectItemEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TLVSelectItemEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVSelectItemEvent.Item"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TLVSelectItemEvent.Selected"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TListViewProperty">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpAutoArrange"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpCheckboxes"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpColumnClick"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpFlatScrollBars"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpFullDrag"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpGridLines"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpHideSelection"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpHotTrack"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpMultiSelect"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpOwnerDraw"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpReadOnly"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpRowSelect"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpShowColumnHeaders"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpShowWorkAreas"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewProperty.lvpWrapText"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TListViewProperties">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TListViewImageList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewImageList.lvilSmall"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewImageList.lvilLarge"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListViewImageList.lvilState"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TListHotTrackStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TListHotTrackStyle.htHandPoint"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListHotTrackStyle.htUnderlineCold"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TListHotTrackStyle.htUnderlineHot"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TListHotTrackStyles">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCustomListView">
        <short>The ancestor class for ListViews.</short>
        <descr>TCustomListView is the ancestor for TListView. If you want to define your own ListView class, you should use this class to derive it from.</descr>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FAllocBy"/>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FCanvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FDefaultItemHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FHotTrackStyles">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FOwnerData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FListItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FColumns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FViewStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FSortType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FSortColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FImageChangeLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FScrolledLeft">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FScrolledTop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FSelected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FFocused">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FHoverTime">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FLastHorzScrollInfo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FLastVertScrollInfo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FUpdateCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FOnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FOnColumnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FOnCompare">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FOnDeletion">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FOnInsert">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FOnSelectItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomListView.FProperties">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetBoundingRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetBoundingRect.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetColumnFromIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetColumnFromIndex.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.GetColumnFromIndex.AIndex"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetDropTarget">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetDropTarget.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetFocused">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetFocused.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetImageList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetImageList.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.GetImageList.ALvilOrd"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetHoverTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetHoverTime.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetProperty">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetProperty.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.GetProperty.ALvpOrd"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetSelCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetSelCount.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetSelection.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetTopItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetTopItem.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetViewOrigin">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetViewOrigin.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomListView.GetVisibleRowCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetVisibleRowCount.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetAllocBy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetAllocBy.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetColumns.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetDefaultItemHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetDefaultItemHeight.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetDropTarget">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetDropTarget.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetFocused">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetFocused.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetHotTrackStyles">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetHotTrackStyles.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetHoverTime">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetHoverTime.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetImageList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetImageList.ALvilOrd"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetImageList.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetItems.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetItemVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetItemVisible.AValue"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetItemVisible.APartialOK"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetOwnerData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetOwnerData.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetProperty">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetProperty.ALvpOrd"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetProperty.AIsSet"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetScrollBars">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetScrollBars.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetScrolledLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetScrolledLeft.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetScrolledTop">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetScrolledTop.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetSelection.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetSortColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetSortColumn.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetSortType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetSortType.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.SetViewStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.SetViewStyle.Avalue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.Sort">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.UpdateScrollbars">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomListView.CNNotify">
        <short>Procedure to handle all kind of messages send to the ListView</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.CNNotify.AMessage"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.ItemDeleted">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.ItemDeleted.AItem"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.ItemInserted">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.ItemInserted.AItem"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.InitializeWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.Change">
        <short>Internal procedure called when an item has changed.</short>
        <descr>This is an internal procedure which is called after an item has been changed. This procedure makes sure the OnChange event is called if the user assigned a method to this event.</descr>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.Change.AItem"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.Change.AChange"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.ColClick">
        <short>Procedure to trigger the OnColumnClick event.</short>
        <descr>If a method is assigned to the OnColumnClick event, this procedure executes it.</descr>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.ColClick.AColumn"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.Delete.Item"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.DoDeletion">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.DoDeletion.AItem"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.DoInsert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.DoInsert.AItem"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.DoSelectItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.DoSelectItem.AItem"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.DoSelectItem.ASelected"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.InsertItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.InsertItem.Item"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomListView.GetMaxScrolledLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetMaxScrolledLeft.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomListView.GetMaxScrolledTop">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomListView.GetMaxScrolledTop.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.ImageChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.ImageChanged.Sender"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.WMHScroll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.WMHScroll.Msg"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomListView.WMVScroll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.WMVScroll.Msg"><short/></element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.AllocBy">
        <short>Protected propety to read and set FAllocBy</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.BorderStyle">
        <short>A property to store the borderstyle of the listview.</short>
        <descr>This property should be made published in descendants if you want to allow the users to change the borderstyle.</descr>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.Columns">
        <short>Property to define and change the columns of a ListView</short>
        <descr>Columns is a TCollectionItem and contains all information on the columns of a listview.</descr>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.ColumnClick">
        <short>Boolean property to determine if the OnColumnClick event will be executed.</short>
        <descr>The ColumnClick property of the ListView determines if the OnColumnClickEvent will be executed. A call of the OnColumnClick event will only be done when a method has been assigned to the OnColumnClick event and this property is set to true.<br/>

By default ColumnClick is set to True.</descr>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.DefaultItemHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.HideSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.HoverTime">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.LargeImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.MultiSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.OwnerData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.OwnerDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.ReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.ScrolledLeft">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.ScrolledTop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.ScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.ShowColumnHeaders">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.ShowWorkAreas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.SmallImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.SortType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.SortColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.StateImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.ViewStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.OnColumnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.OnCompare">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.OnDeletion">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.OnInsert">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomListView.OnSelectItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomListView.Create">
        <short>The class method to "create" a Listview.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.Create.Aowner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TCustomListView.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomListView.BeginUpdate">
        <short>Procedure to be called before changes are made to the ListView</short>
        <descr>This procedure increases FUpdateCount. After this procedure is called, changes made to the listview will only be drawn after a call to EndUpdate.</descr>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomListView.EndUpdate">
        <short>Procedure to be called after a call to BeginUpdate.</short>
        <descr>Call EndUpdate to make sure changes made to the ListView are drawn.</descr>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.BoundingRect">
        <short>A property to publish the rectangle the component occupies.</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.Canvas">
        <short>Read only property to give read access to the canvas.</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.Checkboxes">
        <short>Properties to determine if the ListView shows checkboxes with the items</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.Column">
        <short>Property to read the column information of the listview.</short>
        <descr>This property can be used to read the information of a column. The column to retreive the information of, is determined by an index. (AIndex) As with nearly all indexes, this index is 0 based. In column[0] the caption of the listitem is show, in subsequent column the subitems of the listitem are shown.<br/>
To add, change or delete a column use the Columns property.</descr>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomListView.Column.AIndex">
        <short>Integer to determine the column of the ListView to retreive information on.</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.DropTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.FlatScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.FullDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.GridLines">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.HotTrack">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.HotTrackStyles">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.ItemFocused">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.RowSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.SelCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.Selected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.TopItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.ViewOrigin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomListView.VisibleRowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TListView">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.BorderWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.Columns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.ColumnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.LargeImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.MultiSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.RowSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.ScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.ShowColumnHeaders">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.SmallImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.SortColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.SortType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.StateImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.ViewStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnColumnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnCompare">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnKeyPress">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnKeyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnDeletion">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TListView.OnSelectItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TProgressBarOrientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TProgressBarOrientation.pbHorizontal"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TProgressBarOrientation.pbVertical"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TProgressBarOrientation.pbRightToLeft"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TProgressBarOrientation.pbTopDown"><short/></element>
      <!-- object Visibility: default -->
      <element name="TCustomProgressBar">
        <short>The ancestor class for TProgressBar</short>
        <descr>TCustomProgressBar is the ancestor for TProgressBar. If you want to define your own ProgressBar class, you should use this class to derive it from.</descr>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomProgressBar.FMin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomProgressBar.FMax">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomProgressBar.FStep">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomProgressBar.FPosition">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomProgressBar.FSmooth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomProgressBar.FBarShowText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomProgressBar.FBarTextFormat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomProgressBar.FOrientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomProgressBar.GetMin">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomProgressBar.GetMin.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomProgressBar.GetMax">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomProgressBar.GetMax.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomProgressBar.GetPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomProgressBar.GetPosition.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomProgressBar.SetParams">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.SetParams.AMin"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.SetParams.AMax"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomProgressBar.SetMin">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.SetMin.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomProgressBar.SetMax">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.SetMax.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomProgressBar.SetPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.SetPosition.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomProgressBar.SetStep">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.SetStep.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomProgressBar.SetSmooth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.SetSmooth.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomProgressBar.SetBarShowText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.SetBarShowText.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomProgressBar.SetOrientation">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.SetOrientation.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomProgressBar.ApplyChanges">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomProgressBar.InitializeWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomProgressBar.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomProgressBar.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.Create.AOwner"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomProgressBar.StepIt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomProgressBar.StepBy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomProgressBar.StepBy.Delta"><short/></element>
      <!-- property Visibility: public -->
      <element name="TCustomProgressBar.Max">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomProgressBar.Min">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomProgressBar.Orientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomProgressBar.Position">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomProgressBar.Smooth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomProgressBar.Step">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomProgressBar.BarShowText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TProgressBar">
        <short>Progress Bar</short>
        <descr>Progress Bar: a control that appears at or near the bottom of form or window. It depicts the progress of a process, or what proportion of the progress is complete. A series of coloured rectangles appears in the control, filling it from left to right or from top to bottom as the process progresses</descr>
        <seealso>
          <link id="#lcl.stdctrls.HowToUseStdCtrls">HowToUseStdCtrls</link>
        </seealso>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.BorderWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.DragKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Hint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Max">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Min">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnStartDock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Orientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Position">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Smooth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Step">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TProgressBar.BarShowText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TUDAlignButton">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUDAlignButton.udLeft"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TUDAlignButton.udRight"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TUDAlignButton.udTop"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TUDAlignButton.udBottom"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TUDOrientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUDOrientation.udHorizontal"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TUDOrientation.udVertical"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TUDBtnType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUDBtnType.btNext"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TUDBtnType.btPrev"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TUDClickEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TUDClickEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TUDClickEvent.Button"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TUDChangingEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TUDChangingEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TUDChangingEvent.AllowChange"><short/></element>
      <!-- object Visibility: default -->
      <element name="TCustomUpDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.MinBtn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.MaxBtn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.BTimerProc">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.BTimerBounds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FArrowKeys">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FAssociate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FMin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FMax">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FIncrement">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FPosition">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FThousands">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FWrap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FOnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FAlignButton">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FOrientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomUpDown.FOnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomUpDown.GetPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomUpDown.GetPosition.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.BTimerExec">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.BTimerExec.Sender"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetAlignButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetAlignButton.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetArrowKeys">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetArrowKeys.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetAssociate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetAssociate.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetIncrement">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetIncrement.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetMax">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetMax.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetMin">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetMin.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetOrientation">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetOrientation.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetPosition.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetThousands">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetThousands.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.SetWrap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.SetWrap.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.UpdateAlignButtonPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.UpdateOrientation">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomUpDown.UpdateUpDownPositionText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TCustomUpDown.OldKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomUpDown.AssociateKeyDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.AssociateKeyDown.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.AssociateKeyDown.Key"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.AssociateKeyDown.ShiftState"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomUpDown.OnAssociateChangeBounds">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.OnAssociateChangeBounds.Sender"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomUpDown.DoOnResize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomUpDown.CanChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomUpDown.CanChange.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomUpDown.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.Notification.AComponent"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.Notification.Operation"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomUpDown.Click">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.Click.Button"><short/></element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.AlignButton">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.ArrowKeys">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.Associate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.Min">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.Max">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.Increment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.Orientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.Position">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.Thousands">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.Wrap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.OnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomUpDown.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomUpDown.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomUpDown.Create.AOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TCustomUpDown.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TUpDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.AlignButton">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Associate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.ArrowKeys">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Hint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Min">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Max">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Increment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Orientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Position">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Thousands">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.Wrap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.OnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TUpDown.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="CN_DROPDOWNCLOSED">
        <short>Message constant.</short>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TToolButtonStyle">
        <short>Determines the style of the tool buttons.</short>
        <descr>
          <p>These are the possible values of Style:</p>
          <ul>
            <li><b>tbsButton</b>
 - The button appears and functions like a normal button.</li>
            <li><b>tbsCheck</b>
 - Clicking the button toggles the Down property. Once selected, the button remains selected until clicked again.</li>
            <li><b>tbsDivider</b>
 - The button appears as a vertical line on the toolbar (used to separate other controls).</li>
            <li><b>tbsDropDown</b>
 - The button displays a downwards-pointing arrow (suitable for accessing a drop-down menu).</li>
            <li><b>tbsSeparator</b>
 - The button appears as an empty space on the toolbar (used to separate other controls).</li>
          </ul>
        </descr>
        <seealso><link id="TToolButton"/></seealso>
        <example file="comctrls/ttoolbutton.pas"/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TToolButtonStyle.tbsButton">
        <descr>The button appears and functions like a normal button.</descr>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TToolButtonStyle.tbsCheck">
        <descr>Clicking the button toggles the Down property. Once selected, the button remains selected until clicked again.</descr>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TToolButtonStyle.tbsDropDown">
        <descr>The button displays a downwards-pointing arrow (suitable for accessing a drop-down menu).</descr>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TToolButtonStyle.tbsSeparator">
        <descr>The button appears as an empty space on the toolbar (used to separate other controls).</descr>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TToolButtonStyle.tbsDivider">
        <descr>The button appears as a vertical line on the toolbar (used to separate other controls).</descr>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TToolButtonFlag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TToolButtonFlag.tbfPressed"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TToolButtonFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TToolButtonActionLink">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButtonActionLink.AssignClient">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButtonActionLink.AssignClient.AClient"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TToolButtonActionLink.IsCheckedLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButtonActionLink.IsCheckedLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TToolButtonActionLink.IsImageIndexLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButtonActionLink.IsImageIndexLinked.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButtonActionLink.SetChecked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButtonActionLink.SetChecked.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButtonActionLink.SetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButtonActionLink.SetImageIndex.Value"><short/></element>
      <!-- "class of" type Visibility: default -->
      <element name="TToolButtonActionLinkClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TToolButton">
        <short>TToolButton is a button control in a TToolBar object.</short>
        <descr>
          <p>Use TToolButton to implement buttons on a toolbar. While other controls (including TButton and TSpeedButton) can be placed on toolbars, TToolButton utilizes special toolbar features to simplify the configuration of buttons and offers added display options such as pop-up borders and transparency.</p>
          <p>To place tool buttons on a toolbar at design time, select the toolbar, right-click, and choose New Button.</p>
        </descr>
        <seealso>
          <link id="TToolBar"/>
          <link id="#lcl.stdctrls.TButton">TButton</link>
          <link id="#lcl.Buttons.TSpeedButton">TSpeedButton</link>
          <link id="#lcl.stdctrls.HowToUseStdCtrls">HowToUseStdCtrls</link>
        </seealso>
        <example file="comctrls/ttoolbutton.pas"/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FAllowAllUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FDropdownMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FGrouped">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FIndeterminate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FLastButtonDrawFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FMarked">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FMenuItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FMouseInControl">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FToolButtonFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FUpdateCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolButton.FWrap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.GetGroupBounds">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.GetGroupBounds.StartIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.GetGroupBounds.EndIndex"><short/></element>
      <!-- function Visibility: private -->
      <element name="TToolButton.GetIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButton.GetIndex.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TToolButton.IsCheckedStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButton.IsCheckedStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TToolButton.IsImageIndexStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButton.IsImageIndexStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TToolButton.IsWidthStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButton.IsWidthStored.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetAutoSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetAutoSize.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetDown.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetDropdownMenu">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetDropdownMenu.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetGrouped">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetGrouped.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetImageIndex.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetIndeterminate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetIndeterminate.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetMarked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetMarked.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetMenuItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetMenuItem.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetStyle.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetWrap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetWrap.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.SetMouseInControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetMouseInControl.NewMouseInControl"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolButton.CMHitTest">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.CMHitTest.Message"><short/></element>
      <!-- variable Visibility: protected -->
      <element name="TToolButton.FToolBar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.CopyPropertiesFromMenuItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.CopyPropertiesFromMenuItem.Value"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TToolButton.GetActionLinkClass">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButton.GetActionLinkClass.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.ActionChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.ActionChange.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.ActionChange.CheckDefaults"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.AssignTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.AssignTo.Dest"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.BeginUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.MouseDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseDown.Button"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseDown.Shift"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseDown.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseDown.Y"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.MouseMove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseMove.Shift"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseMove.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseMove.Y"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.MouseUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseUp.Button"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseUp.Shift"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseUp.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.MouseUp.Y"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.MouseEnter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.MouseLeave">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.Notification.AComponent"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.Notification.Operation"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.Paint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.RefreshControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.SetToolBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetToolBar.NewToolBar"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.UpdateControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TToolButton.GetButtonDrawFlags">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButton.GetButtonDrawFlags.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.SetParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.SetParent.AParent"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.UpdateVisibleToolbar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TToolButton.GroupAllUpAllowed">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButton.GroupAllUpAllowed.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolButton.DoSetBounds">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.DoSetBounds.ALeft"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.DoSetBounds.ATop"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.DoSetBounds.AWidth"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.DoSetBounds.AHeight"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TToolButton.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.Create.TheOwner"><short/></element>
      <!-- function Visibility: public -->
      <element name="TToolButton.CheckMenuDropdown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolButton.CheckMenuDropdown.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TToolButton.GetCurrentIcon">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.GetCurrentIcon.ImageList"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolButton.GetCurrentIcon.TheIndex"><short/></element>
      <!-- property Visibility: public -->
      <element name="TToolButton.Index">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Action">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.AllowAllUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.AutoSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Down">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.DragKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.DropdownMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Grouped">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Height">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.ImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Indeterminate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Marked">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.MenuItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Wrap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Style">
        <short>Determines the style of the tool button.</short>
        <descr>See TToolButtonStyle for the possible Style values.</descr>
        <seealso><link id="TToolButtonStyle"/></seealso>
        <example file="comctrls/ttoolbutton.pas"/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.OnContextPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolButton.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TToolBarFlag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TToolBarFlag.tbfUpdateVisibleBarNeeded"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TToolBarFlag.tbfPlacingControls"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TToolBarFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TToolBar">
        <short>TToolbar manages tool buttons and other controls, arranging them in rows and automatically adjusting their sizes and positions.</short>
        <descr>
          <p>TToolbar is a container for tool buttons (TToolButton).  it provides an easy way to arrange and manage visual controls.</p>
          <ul>
            <li>All tool buttons on a toolbar maintain a uniform width and height. </li>
            <li>Other controls can sit on a toolbar. These controls (which are held in place by invisible tool buttons) maintain a uniform height.</li>
            <li>Controls can automatically wrap around and start a new row when they do not fit horizontally on the toolbar.</li>
            <li>The Flat property allows the background to show through the toolbar and gives pop-up borders to the tool buttons.</li>
            <li>Spaces and dividers (which are in fact specially configured tool buttons) can group controls on the toolbar both visually and functionally.</li>
          </ul>
          <p>Typically, the tool buttons correspond to items in an application's menu and gives the user more direct access to the application's commands.</p>
        </descr>
        <seealso>
          <link id="TToolButton"/>
          <link id="#lcl.stdctrls.HowToUseStdCtrls">HowToUseStdCtrls</link>
        </seealso>
        <example file="comctrls/ttoolbutton.pas"/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FButtonHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FRealizedButtonHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FButtons">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FButtonWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FDisabledImageChangeLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FDisabledImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FDropDownWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FDropDownButton">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FFlat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FHotImageChangeLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FHotImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FImageChangeLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FIndent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FNewStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FRowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FShowCaptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FCurrentMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FCurrentMenuAutoFree">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FSrcMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FSrcMenuItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FToolBarFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FTransparent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FUpdateCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TToolBar.FWrapable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TToolBar.GetButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolBar.GetButton.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.GetButton.Index"><short/></element>
      <!-- function Visibility: private -->
      <element name="TToolBar.GetButtonCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolBar.GetButtonCount.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetButtonHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetButtonHeight.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetButtonWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetButtonWidth.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetDisabledImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetDisabledImages.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetFlat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetFlat.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetHotImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetHotImages.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetImages.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetIndent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetIndent.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetList.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetShowCaptions">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetShowCaptions.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetTransparent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetTransparent.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.SetWrapable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetWrapable.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.ToolButtonDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.ToolButtonDown.AButton"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.ToolButtonDown.NewDown"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.ImageListChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.ImageListChange.Sender"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.DisabledImageListChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.DisabledImageListChange.Sender"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.HotImageListChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.HotImageListChange.Sender"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.UpdateVisibleBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.OnTemporaryPopupMenuClose">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.OnTemporaryPopupMenuClose.Sender"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.MoveSubMenuItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.MoveSubMenuItems.SrcMenuItem"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.MoveSubMenuItems.DestMenuItem"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.AddButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.AddButton.Button"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TToolBar.RemoveButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.RemoveButton.Button"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TToolBar.CanAutoSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolBar.CanAutoSize.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.CanAutoSize.NewWidth"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.CanAutoSize.NewHeight"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TToolBar.CheckMenuDropdown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolBar.CheckMenuDropdown.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.CheckMenuDropdown.Button"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolBar.ClickButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.ClickButton.Button"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolBar.CreateParams">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.CreateParams.Params"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolBar.CreateWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolBar.ControlsAligned">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TToolBar.FindButtonFromAccel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolBar.FindButtonFromAccel.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.FindButtonFromAccel.Accel"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolBar.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TToolBar.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.Notification.AComponent"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.Notification.Operation"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolBar.RepositionButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.RepositionButton.Index"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TToolBar.RepositionButtons">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.RepositionButtons.Index"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TToolBar.WrapButtons">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TToolBar.WrapButtons.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.WrapButtons.NewWidth"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.WrapButtons.NewHeight"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TToolBar.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.Create.TheOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TToolBar.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TToolBar.FlipChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.FlipChildren.AllLevels"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TToolBar.BeginUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TToolBar.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TToolBar.Paint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TToolBar.SetButtonSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetButtonSize.NewButtonWidth"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.SetButtonSize.NewButtonHeight"><short/></element>
      <!-- property Visibility: public -->
      <element name="TToolBar.ButtonCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TToolBar.Buttons">
        <short>Lists the tool buttons (TToolButton) in the toolbar.</short>
        <descr>
          <p>Buttons maintains a list of TToolButton instances. All tool buttons that share a TToolBar parent have the same height and (except for separators and dividers) the same width. Other controls on a toolbar are held in place by invisible separators, which are automatically created and destroyed.</p>
          <p>To add tool buttons to the toolbar at design time, select the toolbar, right-click, and choose New Button. To create a space (separator) between one button and the next, select New Separator. To create a divider between buttons, add a button and set its Style propery to tbsDivider. Other controls may be added to the toolbar directly from the Component palette. </p>
        </descr>
        <seealso><link id="TToolButton.Style"/></seealso>
        <example file="comctrls/ttoolbutton.pas"/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TToolBar.Buttons.Index"><short/></element>
      <!-- property Visibility: public -->
      <element name="TToolBar.ButtonList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TToolBar.RowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.AutoSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.BorderWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.ButtonHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.ButtonWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.ChildSizing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Ctl3D">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.DisabledImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.DragKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.EdgeBorders">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.EdgeInner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.EdgeOuter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Flat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Height">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.HotImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Images">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Indent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.List">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.ParentColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.ParentFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.ShowCaptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Transparent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.Wrapable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnContextPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnMouseEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnMouseLeave">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnResize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnChangeBounds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TToolBar.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TTrackBarOrientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTrackBarOrientation.trHorizontal"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTrackBarOrientation.trVertical"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TTickMark">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTickMark.tmBottomRight"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTickMark.tmTopLeft"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTickMark.tmBoth"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TTickStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTickStyle.tsNone"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTickStyle.tsAuto"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTickStyle.tsManual"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TTrackBarScalePos">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTrackBarScalePos.trLeft"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTrackBarScalePos.trRight"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTrackBarScalePos.trTop"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTrackBarScalePos.trBottom"><short/></element>
      <!-- object Visibility: default -->
      <element name="TCustomTrackBar">
        <short><i>TCustomTrackBar</i> - the base class for <i>TTrackBar</i></short>
        <descr><i>TCustomTrackBar</i> defines many of the properties inherited by <i>TTrackBar</i>, a control for graphically displaying the progress of a process</descr>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FOrientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FTickMarks">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FTickStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FLineSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FPageSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FMin">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FMax">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FFrequency">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FPosition">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FShowScale">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FScalePos">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FScaleDigits">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTrackBar.FOnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetFrequency">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetFrequency.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetLineSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetLineSize.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetMax">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetMax.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetMin">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetMin.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetOrientation">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetOrientation.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetPageSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetPageSize.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetParams">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetParams.APosition"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetParams.AMin"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetParams.AMax"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetPosition.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetScalePos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetScalePos.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetShowScale">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetShowScale.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetTickMarks">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetTickMarks.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.SetTickStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetTickStyle.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTrackBar.UpdateSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTrackBar.ApplyChanges">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTrackBar.DoChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.DoChange.msg"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTrackBar.InitializeWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTrackBar.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomTrackBar.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.Create.AOwner"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTrackBar.SetTick">
        <short><i>SetTick</i> - set the interval for ticks on the taskbar (integer)</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTrackBar.SetTick.Value"><short/></element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.Frequency">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.LineSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.Max">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.Min">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.OnChange">
        <short>Action to be taken on change in the process being tracked</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.Orientation">
        <short><i>TTrackBarOrientation</i> - horizontal or vertical</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.PageSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.Position">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.ScalePos">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.ShowScale">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.TickMarks">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTrackBar.TickStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TTrackBar">
        <short>Track Bar</short>
        <descr>Track Bar: a device that appears at the  bottom of  a window or panel or form, showing the progress of a process or allowing the user to select (with the mouse pointer) a value denoting how much of a procedure  is to be accepted.</descr>
        <seealso>
          <link id="#lcl.stdctrls.HowToUseStdCtrls">HowToUseStdCtrls</link>
        </seealso>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Ctl3D">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Frequency">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Hint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.LineSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Max">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Min">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnChangeBounds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnMouseEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnMouseLeave">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnKeyPress">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnKeyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnResize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Orientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.PageSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.ParentCtl3D">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Position">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.ScalePos">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.ShowScale">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.TickMarks">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.TickStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTrackBar.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TNodeState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeState.nsCut"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeState.nsDropHilited"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeState.nsFocused"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeState.nsSelected"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeState.nsMultiSelected"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeState.nsExpanded"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeState.nsHasChildren"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TNodeStates">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TNodeAttachMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeAttachMode.naAdd"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeAttachMode.naAddFirst"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeAttachMode.naAddChild"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeAttachMode.naAddChildFirst"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeAttachMode.naInsert"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TNodeAttachMode.naInsertBehind"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TAddMode">
        <short>A set to determine the place where a node should be placed in a tree.</short>
        <descr>This sets consist of three values:<br/>
taAdd: Adds the node as the last child.<br/>
taAddFirst: Adds the node as the first child.<br/>
taInsert: Adds the node in front another node.<br/><br/>
This set is used in TTreeNode.InternalMove and TTreeNodes.InternalAddObject</descr>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TAddMode.taAddFirst"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TAddMode.taAdd"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TAddMode.taInsert"><short/></element>
      <!-- pointer type Visibility: default -->
      <element name="TTreeNodeArray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="ETreeNodeError">
        <short>Definition of a error type for errors araising from the code of TTreeView</short>
      </element>
      <!-- object Visibility: default -->
      <element name="ETreeViewError">
        <short>Definition of a error type for errors araising from the code of TTreeView</short>
      </element>
      <!-- constant Visibility: default -->
      <element name="NodeAttachModeNames">
        <short>A array of strings containings names for NodeAttachModes</short>
        <descr>This is a constant array of string containing names for the modes to attach a node.</descr>
      </element>
      <!-- constant Visibility: default -->
      <element name="AddModeNames">
        <short>An array of strings to store the names for the different TAddModes.</short>
        <descr>Type
  TAddMode = (taAddFirst, taAdd, taInsert);

Const
  AddModeNames: array[TAddMode] of string =
    ('taAddFirst', 'taAdd', 'taInsert');</descr>
      </element>
      <!-- constant Visibility: default -->
      <element name="LCLStreamID">
        <short>A constant</short>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TTVChangingEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVChangingEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVChangingEvent.Node"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVChangingEvent.AllowChange"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVChangedEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVChangedEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVChangedEvent.Node"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVEditingEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVEditingEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVEditingEvent.Node"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVEditingEvent.AllowEdit"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVEditedEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVEditedEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVEditedEvent.Node"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVEditedEvent.S"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVExpandingEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVExpandingEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVExpandingEvent.Node"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVExpandingEvent.AllowExpansion"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVCollapsingEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVCollapsingEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCollapsingEvent.Node"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCollapsingEvent.AllowCollapse"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVExpandedEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVExpandedEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVExpandedEvent.Node"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVCompareEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVCompareEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCompareEvent.Node1"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCompareEvent.Node2"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCompareEvent.Compare"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVCustomDrawEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVCustomDrawEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCustomDrawEvent.ARect"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCustomDrawEvent.DefaultDraw"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVCustomDrawItemEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVCustomDrawItemEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCustomDrawItemEvent.Node"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCustomDrawItemEvent.State"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCustomDrawItemEvent.DefaultDraw"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVAdvancedCustomDrawEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawEvent.ARect"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawEvent.Stage"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawEvent.DefaultDraw"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVAdvancedCustomDrawItemEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawItemEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawItemEvent.Node"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawItemEvent.State"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawItemEvent.Stage"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawItemEvent.PaintImages"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVAdvancedCustomDrawItemEvent.DefaultDraw"><short/></element>
      <!-- procedure type Visibility: default -->
      <element name="TTVCustomCreateNodeEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTVCustomCreateNodeEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTVCustomCreateNodeEvent.ATreeNode"><short/></element>
      <!-- function type Visibility: default -->
      <element name="TTreeNodeCompare">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodeCompare.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodeCompare.Node1"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodeCompare.Node2"><short/></element>
      <!-- pointer type Visibility: default -->
      <element name="PTreeNodeInfo">
        <short>A pointer to TTreeNodeInfo</short>
      </element>
      <!-- record type Visibility: default -->
      <element name="TTreeNodeInfo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeInfo.ImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeInfo.SelectedIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeInfo.StateIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeInfo.OverlayIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeInfo.Data">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeInfo.Count">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeInfo.Height">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeInfo.Expanded">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeInfo.TextLen">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PDelphiNodeInfo">
        <short>A pointer to TDelphiNodeInfo</short>
      </element>
      <!-- record type Visibility: default -->
      <element name="TDelphiNodeInfo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDelphiNodeInfo.ImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDelphiNodeInfo.SelectedIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDelphiNodeInfo.StateIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDelphiNodeInfo.OverlayIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDelphiNodeInfo.Data">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDelphiNodeInfo.Count">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TDelphiNodeInfo.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TTreeNode">
        <short><i>TTreeNode</i> is a single item that holds data in <i>TTreeView</i></short>
        <descr>A <i>TTreeNode</i> is part of a <i>TTreeView</i> and is used for storing data. This can be done by using the <i>Caption</i> property or for more complex data the <i>Data</i> property can be used. Each node can have sibling or child items associated with it.</descr>
        <seealso><link id="#lcl.stdctrls.HowToUseStdCtrls"/></seealso>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FOwner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FCapacity">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FDeleting">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FInTree">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FNextBrother">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FNextMultiSelected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FOverlayIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FParent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FPrevBrother">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FPrevMultiSelected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FSelectedIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FStateIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FStates">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FSubTreeCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNode.FTop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.AreParentsExpanded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.AreParentsExpanded.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.BindToMultiSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.CompareCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.CompareCount.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.CompareCount.CompareMe"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.DoCanExpand">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DoCanExpand.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.DoCanExpand.ExpandIt"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.DoExpand">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.DoExpand.ExpandIt"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.ExpandItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.ExpandItem.ExpandIt"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.ExpandItem.Recurse"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetAbsoluteIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetAbsoluteIndex.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetHasChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetHasChildren.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetCount.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetCut">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetCut.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetDropTarget">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetDropTarget.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetExpanded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetExpanded.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetFocused">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetFocused.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetHeight.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetIndex.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetItems.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.GetItems.AnIndex"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetLevel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetLevel.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetMultiSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetMultiSelected.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetSelected.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetState.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.GetState.NodeState"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetTreeNodes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetTreeNodes.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetTreeView">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetTreeView.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.GetTop">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetTop.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.InternalMove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.InternalMove.ANode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.InternalMove.AddMode"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.IsEqual">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.IsEqual.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.IsEqual.Node"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.IsNodeVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.IsNodeVisible.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNode.IsNodeHeightFullVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.IsNodeHeightFullVisible.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.ReadData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.ReadData.Stream"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.ReadData.StreamVersion"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.ReadData.Info"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.ReadDelphiData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.ReadDelphiData.Stream"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.ReadDelphiData.Info"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetCut">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetCut.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetData.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetDropTarget">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetDropTarget.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetExpanded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetExpanded.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetFocused">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetFocused.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetHasChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetHasChildren.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetHeight.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetImageIndex.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetItems.AnIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetItems.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetMultiSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetMultiSelected.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetOverlayIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetOverlayIndex.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetSelected.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetSelectedIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetSelectedIndex.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetStateIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetStateIndex.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.SetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.SetText.S"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.Unbind">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.UnbindFromMultiSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.WriteData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.WriteData.Stream"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.WriteData.Info"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNode.WriteDelphiData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.WriteDelphiData.Stream"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.WriteDelphiData.Info"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TTreeNode.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.Create.AnOwner"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.AlphaSort">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.AlphaSort.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.Assign.Source"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.Collapse">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.Collapse.Recurse"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.CustomSort">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.CustomSort.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.CustomSort.SortProc"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.DefaultTreeViewSort">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DefaultTreeViewSort.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.DefaultTreeViewSort.Node1"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.DefaultTreeViewSort.Node2"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.DeleteChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TTreeNode.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.DisplayExpandSignLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DisplayExpandSignLeft.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.DisplayExpandSignRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DisplayExpandSignRect.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.DisplayExpandSignRight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DisplayExpandSignRight.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.DisplayIconLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DisplayIconLeft.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.DisplayRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DisplayRect.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.DisplayRect.TextOnly"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.DisplayStateIconLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DisplayStateIconLeft.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.DisplayTextLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DisplayTextLeft.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.DisplayTextRight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.DisplayTextRight.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.EditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.EditText.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.EndEdit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.EndEdit.Cancel"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.Expand">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.Expand.Recurse"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.ExpandParents">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.Bottom">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.Bottom.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.BottomExpanded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.BottomExpanded.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetParentNodeOfAbsoluteLevel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetParentNodeOfAbsoluteLevel.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.GetParentNodeOfAbsoluteLevel.TheAbsoluteLevel"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetFirstChild">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetFirstChild.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetHandle.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetLastSibling">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetLastSibling.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetLastChild">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetLastChild.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetLastSubChild">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetLastSubChild.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetNext">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetNext.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetNextChild">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetNextChild.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.GetNextChild.AValue"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetNextExpanded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetNextExpanded.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetNextMultiSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetNextMultiSelected.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetNextSibling">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetNextSibling.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetNextVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetNextVisible.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetPrev">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetPrev.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetPrevChild">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetPrevChild.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.GetPrevChild.AValue"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetPrevExpanded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetPrevExpanded.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetPrevMultiSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetPrevMultiSelected.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetPrevSibling">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetPrevSibling.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.GetPrevVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.GetPrevVisible.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.HasAsParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.HasAsParent.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.HasAsParent.AValue"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.IndexOf">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.IndexOf.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.IndexOf.AValue"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.IndexOfText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.IndexOfText.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.IndexOfText.NodeText"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNode.FindNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNode.FindNode.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.FindNode.NodeText"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.MakeVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.MoveTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.MoveTo.Destination"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.MoveTo.Mode"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.MultiSelectGroup">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.Update">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.ConsistencyCheck">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNode.WriteDebugReport">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.WriteDebugReport.Prefix"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.WriteDebugReport.Recurse"><short/></element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.AbsoluteIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Count">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Cut">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Data">
        <descr>Property of type pointer used to store custom data in a node.</descr>
        <example file="comctrls/ttreenode_data.pas"/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Deleting">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Focused">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.DropTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Expanded">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Handle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.HasChildren">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Height">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.ImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Index">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.IsVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.IsFullHeightVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNode.Items.ItemIndex"><short/></element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Level">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.MultiSelected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.OverlayIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Owner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Parent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Selected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.SelectedIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.SubTreeCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.StateIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.TreeNodes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.TreeView">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNode.Top">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PNodeCache">
        <short>Unit used by ComCtrls.</short>
      </element>
      <!-- record type Visibility: default -->
      <element name="TNodeCache">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TNodeCache.CacheNode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TNodeCache.CacheIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TTreeNodes">
        <short>A collection or list of <i>TTreeNode</i></short>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNodes.FCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNodes.FFirstMultiSelected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNodes.FKeepCollapsedNodes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNodes.FNodeCache">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNodes.FOwner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNodes.FTopLvlCapacity">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNodes.FTopLvlCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNodes.FTopLvlItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TTreeNodes.FUpdateCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.AddedNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddedNode.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.ClearCache">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TTreeNodes.GetHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.GetHandle.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNodes.GetNodeFromIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.GetNodeFromIndex.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.GetNodeFromIndex.Index"><short/></element>
      <!-- function Visibility: private -->
      <element name="TTreeNodes.GetTopLvlItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.GetTopLvlItems.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.GetTopLvlItems.Index"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.GrowTopLvlItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TTreeNodes.IndexOfTopLvlItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.IndexOfTopLvlItem.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.IndexOfTopLvlItem.Node"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.MoveTopLvlNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.MoveTopLvlNode.TopLvlFromIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.MoveTopLvlNode.TopLvlToIndex"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.MoveTopLvlNode.Node"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.ReadData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.ReadData.Stream"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.ReadExpandedState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.ReadExpandedState.Stream"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.Repaint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.Repaint.ANode"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.ShrinkTopLvlItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.SetTopLvlItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.SetTopLvlItems.Index"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.SetTopLvlItems.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.WriteData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.WriteData.Stream"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TTreeNodes.WriteExpandedState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.WriteExpandedState.Stream"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TTreeNodes.InternalAddObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.InternalAddObject.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InternalAddObject.Node"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InternalAddObject.S"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InternalAddObject.Data"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InternalAddObject.AddMode"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTreeNodes.DefineProperties">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.DefineProperties.Filer"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TTreeNodes.GetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.GetCount.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTreeNodes.SetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.SetItem.Index"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.SetItem.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TTreeNodes.SetUpdateState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.SetUpdateState.Updating"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TTreeNodes.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.Create.AnOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TTreeNodes.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.Add.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.Add.SiblingNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.Add.S"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.AddChild">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.AddChild.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChild.ParentNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChild.S"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.AddChildFirst">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.AddChildFirst.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChildFirst.ParentNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChildFirst.S"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.AddChildObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.AddChildObject.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChildObject.ParentNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChildObject.S"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChildObject.Data"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.AddChildObjectFirst">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.AddChildObjectFirst.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChildObjectFirst.ParentNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChildObjectFirst.S"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddChildObjectFirst.Data"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.AddFirst">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.AddFirst.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddFirst.SiblingNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddFirst.S"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.AddObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.AddObject.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddObject.SiblingNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddObject.S"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddObject.Data"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.AddObjectFirst">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.AddObjectFirst.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddObjectFirst.SiblingNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddObjectFirst.S"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.AddObjectFirst.Data"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNodes.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.Assign.Source"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNodes.BeginUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNodes.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNodes.ClearMultiSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.IsMultiSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.IsMultiSelection.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNodes.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.Delete.Node"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNodes.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.GetFirstNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.GetFirstNode.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.GetLastNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.GetLastNode.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.GetLastSubNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.GetLastSubNode.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.GetLastExpandedSubNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.GetLastExpandedSubNode.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.FindTopLvlNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.FindTopLvlNode.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.FindTopLvlNode.NodeText"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.Insert.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.Insert.NextNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.Insert.S"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.InsertObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.InsertObject.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InsertObject.NextNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InsertObject.S"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InsertObject.Data"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.InsertBehind">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.InsertBehind.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InsertBehind.PrevNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InsertBehind.S"><short/></element>
      <!-- function Visibility: public -->
      <element name="TTreeNodes.InsertObjectBehind">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TTreeNodes.InsertObjectBehind.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InsertObjectBehind.PrevNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InsertObjectBehind.S"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.InsertObjectBehind.Data"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNodes.ConsistencyCheck">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TTreeNodes.WriteDebugReport">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.WriteDebugReport.Prefix"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.WriteDebugReport.AllNodes"><short/></element>
      <!-- property Visibility: public -->
      <element name="TTreeNodes.Count">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNodes.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.Items.Index"><short/></element>
      <!-- property Visibility: public -->
      <element name="TTreeNodes.KeepCollapsedNodes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNodes.Owner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNodes.TopLvlCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TTreeNodes.TopLvlItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodes.TopLvlItems.Index"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TTreeViewState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsScrollbarChanged"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsMaxRightNeedsUpdate"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsTopsNeedsUpdate"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsMaxLvlNeedsUpdate"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsTopItemNeedsUpdate"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsBottomItemNeedsUpdate"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsCanvasChanged"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsDragged"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsIsEditing"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsStateChanging"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsManualNotify"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsUpdating"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsPainting"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsMouseCapture"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsWaitForDragging"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsDblClicked"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsTripleClicked"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsQuadClicked"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewState.tvsSelectionChanged"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TTreeViewStates">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TTreeViewOption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoAllowMultiselect"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoAutoExpand"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoAutoInsertMark"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoAutoItemHeight"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoHideSelection"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoHotTrack"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoKeepCollapsedNodes"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoReadOnly"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoRightClickSelect"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoRowSelect"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoShowButtons"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoShowLines"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoShowRoot"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoShowSeparators"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewOption.tvoToolTips"><short/></element>
      <!-- set type Visibility: default -->
      <element name="TTreeViewOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="DefaultTreeViewOptions">
        <short>A set of TreeViewOptions which are set be default.</short>
        <descr>These set of options is used to set the options of a TreeView object when first placed on a form. This set consists of the follwoing items:<br/>
tvoShowRoot,<br/> 
tvoShowLines,<br/> 
tvoShowButtons,<br/>
tvoHideSelection,<br/> 
tvoToolTips,<br/>
tvoKeepCollapsedNodes,<br/>
tvoAutoItemHeight<br/>
For the meaning of this options, see the documentation of TTreeView.</descr>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TTreeViewExpandSignType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewExpandSignType.tvestPlusMinus"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewExpandSignType.tvestArrow"><short/></element>
      <!-- enumeration type Visibility: default -->
      <element name="TTreeViewInsertMarkType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewInsertMarkType.tvimNone"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewInsertMarkType.tvimAsFirstChild"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewInsertMarkType.tvimAsNextSibling"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TTreeViewInsertMarkType.tvimAsPrevSibling"><short/></element>
      <!-- object Visibility: default -->
      <element name="TCustomTreeView">
        <short><i>TCustomTreeView</i> - ancestor class for <i>TTreeView</i></short>
        <descr><i>TCustomTreeView</i> - ancestor class for <i>TTreeView</i>, which displays a collection of items in a hierarchical tree form. This class defines many properties which are inherited by children classes, including loading the data from files or streams, saving to files or streams, updating, sorting alphabetically, editing, making visible or invisible, expanding or collapsing the tree display, and many more.</descr>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FBackgroundColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FBottomItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FExpandSignType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FExpandSignSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FDefItemHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FDragImage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FDragNode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FIndent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FImageChangeLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FInsertMarkNode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FInsertMarkType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FLastDropTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FLastHorzScrollInfo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FLastVertScrollInfo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FMaxLvl">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FMaxRight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.fMouseDownX">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.fMouseDownY">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnAdvancedCustomDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnAdvancedCustomDrawItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnCollapsed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnCollapsing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnCompare">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnCustomCreateItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnCustomDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnCustomDrawItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnDeletion">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnEditing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnEdited">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnExpanded">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnExpanding">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnGetImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnGetSelectedIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOnSelectionChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FRClickNode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FSaveItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FScrolledLeft">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FScrolledTop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FSelectedColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FSelectedNode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.fSelectionChangeEventLock">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.fSeparatorColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FSortType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FStateChangeLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FStateImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FStates">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FTopItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FTreeLineColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FExpandSignColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FTreeNodes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomTreeView.FUpdateCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.CanvasChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CanvasChanged.Sender"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.CMDrag">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CMDrag.AMessage"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetAutoExpand">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetAutoExpand.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetBottomItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetBottomItem.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetDropTarget">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetDropTarget.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetHideSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetHideSelection.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetHotTrack">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetHotTrack.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetKeepCollapsedNodes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetKeepCollapsedNodes.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetReadOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetReadOnly.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetRightClickSelect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetRightClickSelect.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetRowSelect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetRowSelect.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetSelection.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetShowButtons">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetShowButtons.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetShowLines">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetShowLines.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetShowRoot">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetShowRoot.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetShowSeparators">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetShowSeparators.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetToolTips">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetToolTips.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TCustomTreeView.GetTopItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetTopItem.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.ImageListChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.ImageListChange.Sender"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.OnChangeTimer">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.OnChangeTimer.Sender"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetAutoExpand">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetAutoExpand.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetBackgroundColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetBackgroundColor.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetBottomItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetBottomItem.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetDefaultItemHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetDefaultItemHeight.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetExpandSignType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetExpandSignType.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetDropTarget">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetDropTarget.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetHideSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetHideSelection.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetHotTrack">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetHotTrack.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetIndent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetIndent.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetImages.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetInsertMarkNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetInsertMarkNode.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetInsertMarkType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetInsertMarkType.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetKeepCollapsedNodes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetKeepCollapsedNodes.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetReadOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetReadOnly.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetRightClickSelect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetRightClickSelect.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetRowSelect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetRowSelect.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetScrollBars">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetScrollBars.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetScrolledLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetScrolledLeft.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetScrolledTop">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetScrolledTop.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetSelectedColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetSelectedColor.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetSelection.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetSeparatorColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetSeparatorColor.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetShowButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetShowButton.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetShowLines">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetShowLines.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetShowRoot">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetShowRoot.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetShowSeparators">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetShowSeparators.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetSortType">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetSortType.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetStateImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetStateImages.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetToolTips">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetToolTips.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetTreeLineColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetTreeLineColor.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetTreeNodes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetTreeNodes.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.SetTopItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetTopItem.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.UpdateAllTops">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.UpdateBottomItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.UpdateMaxLvl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.UpdateMaxRight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.UpdateTopItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.UpdateScrollbars">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomTreeView.InternalSelectionChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TCustomTreeView.FChangeTimer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.CanChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.CanChange.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CanChange.Node"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.CanCollapse">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.CanCollapse.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CanCollapse.Node"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.CanEdit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.CanEdit.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CanEdit.Node"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.CanExpand">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.CanExpand.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CanExpand.Node"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.CreateNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.CreateNode.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.CustomDraw">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.CustomDraw.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CustomDraw.ARect"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CustomDraw.Stage"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.CustomDrawItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.CustomDrawItem.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CustomDrawItem.Node"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CustomDrawItem.State"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CustomDrawItem.Stage"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CustomDrawItem.PaintImages"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.GetDragImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetDragImages.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.GetMaxLvl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetMaxLvl.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.GetMaxScrollLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetMaxScrollLeft.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.GetMaxScrollTop">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetMaxScrollTop.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.GetNodeAtInternalY">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetNodeAtInternalY.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetNodeAtInternalY.Y"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.GetNodeAtY">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetNodeAtY.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetNodeAtY.Y"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.GetNodeDrawAreaHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetNodeDrawAreaHeight.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.GetNodeDrawAreaWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetNodeDrawAreaWidth.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.IsCustomDrawn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.IsCustomDrawn.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.IsCustomDrawn.Target"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.IsCustomDrawn.Stage"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.IsNodeVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.IsNodeVisible.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.IsNodeVisible.ANode"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.IsNodeHeightFullVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.IsNodeHeightFullVisible.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.IsNodeHeightFullVisible.ANode"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TCustomTreeView.IsInsertMarkVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.IsInsertMarkVisible.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.Change">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.Change.Node"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.Collapse">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.Collapse.Node"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.CreateParams">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CreateParams.Params"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.CreateWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.Delete.Node"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.DestroyWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.DoEndDrag">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DoEndDrag.Target"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DoEndDrag.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DoEndDrag.Y"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.DragOver">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DragOver.Source"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DragOver.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DragOver.Y"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DragOver.State"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DragOver.Accept"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.DoPaint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.DoPaintNode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DoPaintNode.Node"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.DoStartDrag">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.DoStartDrag.DragObject"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.EndEditing">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.EnsureNodeIsVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.EnsureNodeIsVisible.ANode"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.Expand">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.Expand.Node"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.GetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetImageIndex.Node"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.GetSelectedIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetSelectedIndex.Node"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.InitializeWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.Invalidate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.EraseBackground">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.EraseBackground.DC"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.KeyDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.KeyDown.Key"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.KeyDown.Shift"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.MouseDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseDown.Button"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseDown.Shift"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseDown.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseDown.Y"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.MouseMove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseMove.Shift"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseMove.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseMove.Y"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.MouseUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseUp.Button"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseUp.Shift"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseUp.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.MouseUp.Y"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.Notification.AComponent"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.Notification.Operation"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.Paint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.SetDragMode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetDragMode.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.SetOptions">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetOptions.NewOptions"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.UpdateDefaultItemHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.WndProc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.WndProc.Message"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.UpdateInsertMark">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.UpdateInsertMark.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.UpdateInsertMark.Y"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.DoSelectionChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.WMHScroll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.WMHScroll.Msg"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.WMVScroll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.WMVScroll.Msg"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.WMLButtonDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.WMLButtonDown.AMessage"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.WMNotify">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.WMNotify.AMessage"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomTreeView.Resize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.AutoExpand">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.BorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.HideSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.HotTrack">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.Images">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.Indent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnAdvancedCustomDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnAdvancedCustomDrawItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnCollapsed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnCollapsing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnCompare">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnCustomCreateItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnCustomDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnCustomDrawItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnDeletion">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnEdited">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnEditing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnExpanded">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnExpanding">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnGetImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnGetSelectedIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.OnSelectionChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.ReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.RightClickSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.RowSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.ScrolledLeft">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.ScrolledTop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.ShowButtons">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.ShowLines">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.ShowRoot">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.ShowSeparators">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.SortType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.StateImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomTreeView.ToolTips">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomTreeView.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.Create.AnOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TCustomTreeView.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomTreeView.AlphaSort">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.AlphaSort.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.ConsistencyCheck">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomTreeView.CustomSort">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.CustomSort.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.CustomSort.SortProc"><short/></element>
      <!-- function Visibility: public -->
      <element name="TCustomTreeView.GetHitTestInfoAt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetHitTestInfoAt.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetHitTestInfoAt.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetHitTestInfoAt.Y"><short/></element>
      <!-- function Visibility: public -->
      <element name="TCustomTreeView.GetNodeAt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetNodeAt.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetNodeAt.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetNodeAt.Y"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.GetInsertMarkAt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetInsertMarkAt.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetInsertMarkAt.Y"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetInsertMarkAt.AnInsertMarkNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.GetInsertMarkAt.AnInsertMarkType"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.SetInsertMark">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetInsertMark.AnInsertMarkNode"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetInsertMark.AnInsertMarkType"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.SetInsertMarkAt">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetInsertMarkAt.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SetInsertMarkAt.Y"><short/></element>
      <!-- function Visibility: public -->
      <element name="TCustomTreeView.IsEditing">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.IsEditing.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.BeginUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.FullCollapse">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.FullExpand">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.LoadFromFile">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.LoadFromFile.FileName"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.LoadFromStream">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.LoadFromStream.Stream"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.SaveToFile">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SaveToFile.FileName"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.SaveToStream">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.SaveToStream.Stream"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.WriteDebugReport">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.WriteDebugReport.Prefix"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TCustomTreeView.WriteDebugReport.AllNodes"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.LockSelectionChangeEvent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.UnlockSelectionChangeEvent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomTreeView.GetFirstMultiSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.GetFirstMultiSelected.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TCustomTreeView.SelectionVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomTreeView.SelectionVisible.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TCustomTreeView.MakeSelectionVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.BackgroundColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.BorderWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.BottomItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.DefaultItemHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.DropTarget">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.ExpandSignType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.InsertMarkNode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.InsertMarkType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.KeepCollapsedNodes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.Options">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.ScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.Selected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.SelectionColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.SeparatorColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.TopItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.TreeLineColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomTreeView.ExpandSignColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TCustomTreeView.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TTreeView">
        <short><i>TTreeView</i>  is a control that displays a hierarchical list of items</short>
        <descr>Use a <i>TTreeView</i>
 to display a hierarchical list of items. Items are shown by their caption and an optional bitmap.</descr>
        <seealso>
          <link id="#lcl.stdctrls.HowToUseStdCtrls"/>
          <link id="TCustomTreeView"/>
        </seealso>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.AutoExpand">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.BackgroundColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.BorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.BorderWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Ctl3D">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.DefaultItemHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.DragKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ExpandSignType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.HideSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.HotTrack">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Images">
        <short>The Bitmap image associated with each item in the display</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Indent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ParentColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ParentCtl3D">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ParentFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.RightClickSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.RowSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.SelectionColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ShowButtons">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ShowLines">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ShowRoot">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.SortType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.StateImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Tag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ToolTips">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnAdvancedCustomDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnAdvancedCustomDrawItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnChanging">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnCollapsed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnCollapsing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnCompare">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnContextPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnCustomCreateItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnCustomDraw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnCustomDrawItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnDeletion">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnEdited">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnEditing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnExpanded">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnExpanding">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnGetImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnGetSelectedIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnKeyPress">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnKeyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnSelectionChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Options">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.Items">
        <short>The Items to be displayed in the tree view - ie the actual data</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.TreeLineColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TTreeView.ExpandSignColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TTreeNodeExpandedState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeExpandedState.NodeText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TTreeNodeExpandedState.Childs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: default -->
      <element name="TTreeNodeExpandedState.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodeExpandedState.Create.FirstTreeNode"><short/></element>
      <!-- constructor Visibility: default -->
      <element name="TTreeNodeExpandedState.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodeExpandedState.Create.TreeView"><short/></element>
      <!-- destructor Visibility: default -->
      <element name="TTreeNodeExpandedState.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="TTreeNodeExpandedState.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="TTreeNodeExpandedState.CreateChildNodes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodeExpandedState.CreateChildNodes.FirstTreeNode"><short/></element>
      <!-- procedure Visibility: default -->
      <element name="TTreeNodeExpandedState.Apply">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodeExpandedState.Apply.FirstTreeNode"><short/></element>
      <!-- procedure Visibility: default -->
      <element name="TTreeNodeExpandedState.Apply">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TTreeNodeExpandedState.Apply.TreeView"><short/></element>
      <!-- function Visibility: default -->
      <element name="CompareExpandedNodes">
        <short>Function to compare the nodetext two nodes.</short>
        <descr>This function does an ANSICompare on the NodeText of two nodes. The parameters Data1 and Data2 are pointers to the nodes to be compared. The result is the same is the result from ANSICompareText.<br/>
-1: The nodetext from the first node is lower then the nodetext from the second.<br/>
0: The nodetext-s from both nodes are equal.<br/>
1: The nodetext from the first node is higher then the nodetext from the second.</descr>
      </element>
      <!-- function result Visibility: default -->
      <element name="CompareExpandedNodes.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareExpandedNodes.Data1"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareExpandedNodes.Data2"><short/></element>
      <!-- function Visibility: default -->
      <element name="CompareTextWithExpandedNode">
        <short>Function to compare the give text with the nodetextof the given node.</short>
        <descr>This function does an ANSICompare on the NodeText of two nodes. The parameters Data1 and Data2 are pointers to the nodes to be compared. The result is the same is the result from ANSICompareText.<br/>
-1: The given text is lower then the nodetext from the given node.<br/>
0: The given text is equal to the nodetext from the given node.<br/>
1: The given text is higher then the nodetext from the given node.</descr>
      </element>
      <!-- function result Visibility: default -->
      <element name="CompareTextWithExpandedNode.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareTextWithExpandedNode.Key"><short/></element>
      <!-- argument Visibility: default -->
      <element name="CompareTextWithExpandedNode.Data"><short/></element>
      <!-- function Visibility: default -->
      <element name="InitCommonControl">
        <short>Function InitCommonControl</short>
        <descr>Implemented for Delphi compatibility, always returns true;</descr>
      </element>
      <!-- function result Visibility: default -->
      <element name="InitCommonControl.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="InitCommonControl.CC"><short/></element>
      <!-- procedure Visibility: default -->
      <element name="CheckCommonControl">
        <short>Procedure CheckCommonControl.</short>
        <descr>Implemented for Delphi compatibility. Procedure does not execute any code.</descr>
      </element>
      <!-- argument Visibility: default -->
      <element name="CheckCommonControl.CC"><short/></element>
      <!-- procedure Visibility: default -->
      <element name="Register">
        <short>Procedure used to "register" the components.</short>
      </element>
    </module>
    <!-- ComCtrls -->
  </package>
</fpdoc-descriptions>
