<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="lcl">
    <!--
  ====================================================================
    ColorBox
  ====================================================================
-->
    <module name="ColorBox">
      <short>Defines Classes for selecting colour from a list or ComboBox</short>
      <descr/>
      <!-- unresolved type reference Visibility: default -->
      <element name="LResources">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="SysUtils">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Graphics">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Controls">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Forms">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Dialogs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="StdCtrls">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TColorPalette">
        <short>
          <var>TColorPalette</var> - enumerated type: whether default or full palette is to be used</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TColorPalette.cpDefault">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TColorPalette.cpFull">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TColorBox">
        <short>
          <var>TColorBox</var> - presents the user with a ComboBox with a drop-down list from which to select a colour</short>
      </element>
      <!-- variable Visibility: private -->
      <element name="TColorBox.FPalette">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TColorBox.GetSelection">
        <short>Read specifier for selection property</short>
        <descr>Use GetSelection to convert the item selected into a system color.</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TColorBox.GetSelection.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TColorBox.SetSelection">
        <short>Write specifier for selection property</short>
        <descr>Use SetSelection to set the item in the ColorBox when appointed a color from code.</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.SetSelection.Value">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TColorBox.GetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TColorBox.GetColor.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.GetColor.Index">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TColorBox.GetSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TColorBox.GetSelected.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TColorBox.SetSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.SetSelected.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TColorBox.SetPalette">
        <short>Write specifier for the Palette property</short>
        <descr>Use SetPalette to determine wether to reset the colorlist in the ColorBox based on the type of palette.</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.SetPalette.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TColorBox.SetStyle" link="#lclbase.StdCtrls.TCustomComboBox.SetStyle">
        <descr>Use SetStyle to prevent the style to be changed to anything else than csOwnerDrawFixed.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.SetStyle.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TColorBox.DrawItem" link="#lclbase.StdCtrls.TCustomComboBox.DrawItem">
        <descr>Use DrawItem to customdraw an item in the ColorBox. A color preview is drawn and the item rectangle is made smaller and given to the inherited method to draw the corresponding text. The Brush color and Pen color where changed and reset to their original values.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.DrawItem.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.DrawItem.Rect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.DrawItem.State">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TColorBox.Create" link="#rtl.Classes.TComponent.Create">
        <descr>Use Create to create an instance of TColorBox and initialize all properties and variables.
</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.Create.AOwner">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TColorBox.SetColorList">
        <short>Write specifier for the ColorList property</short>
        <descr>Use SetColorList to fill the itemlist in the ColorBox with the right color entries. Based on the value of the Palette property.</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TColorBox.Selection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TColorBox.Palette">
        <short>The <var>Palette</var> of colours to be used for the drop-down list</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TColorBox.Colors">
        <short>
          <var>Colors</var> - the indexed colour values available for the list</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorBox.Colors.Index">
        <short/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Align" link="#lclbase.Controls.TControl.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Anchors" link="#lclbase.Controls.TControl.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.ArrowKeysTraverseList" link="#lclbase.StdCtrls.TCustomComboBox.ArrowKeysTraverseList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.AutoComplete" link="#lclbase.StdCtrls.TCustomComboBox.AutoComplete">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.AutoCompleteText" link="#lclbase.StdCtrls.TCustomComboBox.AutoCompleteText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.AutoDropDown" link="#lclbase.StdCtrls.TCustomComboBox.AutoDropDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.AutoSize" link="#lclbase.Controls.TControl.AutoSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.BorderSpacing" link="#lclbase.Controls.TControl.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Color" link="#lclbase.Controls.TControl.Color">
        <short>
          <var>Color</var> - this is the colour for the display of the actual control, not the colour selected from the list</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Ctl3D" link="#lclbase.Controls.TControl.Ctl3D">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.DragMode" link="#lclbase.Controls.TControl.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.DragCursor" link="#lclbase.Controls.TControl.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.DropDownCount" link="#lclbase.StdCtrls.TCustomComboBox.DropDownCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Enabled" link="#lclbase.Controls.TControl.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Font" link="#lclbase.Controls.TControl.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.ItemHeight" link="#lclbase.StdCtrls.TCustomComboBox.ItemHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.ItemIndex" link="#lclbase.StdCtrls.TCustomComboBox.ItemIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Items" link="#lclbase.StdCtrls.TCustomComboBox.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.ItemWidth" link="#lclbase.StdCtrls.TCustomComboBox.ItemWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.MaxLength" link="#lclbase.StdCtrls.TCustomComboBox.MaxLength">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Palette">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.ParentColor" link="#lclbase.Controls.TControl.ParentColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.ParentCtl3D" link="#lclbase.Controls.TWinControl.ParentCtl3D">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.ParentFont" link="#lclbase.Controls.TControl.ParentFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.ParentShowHint" link="#lclbase.Controls.TControl.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.PopupMenu" link="#lclbase.Controls.TControl.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.ReadOnly" link="#lclbase.StdCtrls.TCustomComboBox.ReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Selected" link="#lclbase.ColorBox.TCustomColorBox.Selected"/>
      <!-- property Visibility: published -->
      <element name="TColorBox.ShowHint" link="#lclbase.Controls.TControl.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Sorted" link="#lclbase.StdCtrls.TCustomComboBox.Sorted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.TabOrder" link="#lclbase.Controls.TWinControl.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.TabStop" link="#lclbase.Controls.TWinControl.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Text" link="#lclbase.StdCtrls.TCustomComboBox.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.Visible" link="#lclbase.Controls.TControl.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnChange" link="#lclbase.StdCtrls.TCustomComboBox.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnChangeBounds" link="#lclbase.Controls.TControl.OnChangeBounds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnClick" link="#lclbase.Controls.TControl.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnCloseUp" link="#lclbase.StdCtrls.TCustomComboBox.OnCloseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnDblClick" link="#lclbase.Controls.TControl.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnDragDrop" link="#lclbase.Controls.TControl.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnDragOver" link="#lclbase.Controls.TControl.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnDrawItem" link="#lclbase.StdCtrls.TCustomComboBox.OnDrawItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnDropDown" link="#lclbase.StdCtrls.TCustomComboBox.OnDropDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnEditingDone" link="#lclbase.Controls.TControl.OnEditingDone">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnEndDrag" link="#lclbase.Controls.TControl.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnEnter" link="#lclbase.Controls.TWinControl.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnExit" link="#lclbase.Controls.TWinControl.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnKeyDown" link="#lclbase.Controls.TWinControl.OnKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnKeyPress" link="#lclbase.Controls.TWinControl.OnKeyPress">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnKeyUp" link="#lclbase.Controls.TWinControl.OnKeyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnMeasureItem" link="#lclbase.StdCtrls.TCustomComboBox.OnMeasureItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnMouseDown" link="#lclbase.Controls.TControl.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnMouseMove" link="#lclbase.Controls.TControl.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnMouseUp" link="#lclbase.Controls.TControl.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnStartDrag" link="#lclbase.Controls.TControl.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorBox.OnSelect" link="#lclbase.StdCtrls.TCustomComboBox.OnSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- class Visibility: default -->
      <element name="TColorListBox">
        <short>
          <var>TColorListBox</var> - a box containing a simple list of colours from which to select</short>
      </element>
      <!-- variable Visibility: private -->
      <element name="TColorListBox.FPalette">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TColorListBox.GetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TColorListBox.GetColor.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorListBox.GetColor.Index">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TColorListBox.GetSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TColorListBox.GetSelected.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TColorListBox.SetSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorListBox.SetSelected.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TColorListBox.SetPalette">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorListBox.SetPalette.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TColorListBox.SetStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorListBox.SetStyle.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TColorListBox.DrawItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorListBox.DrawItem.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorListBox.DrawItem.Rect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorListBox.DrawItem.State">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TColorListBox.Create" link="#rtl.Classes.TComponent.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorListBox.Create.AOwner">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TColorListBox.SetColorList">
        <short>
          <var>SetColorList</var> - stores the list of colours</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TColorListBox.Colors">
        <short>
          <var>Colors</var> - the indexed colour values available for the list</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TColorListBox.Colors.Index">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TColorListBox.Selected">
        <short>The colour that has been <var>Selected</var> from the list</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Align" link="#lclbase.Controls.TControl.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Anchors" link="#lclbase.Controls.TControl.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.BorderSpacing" link="#lclbase.Controls.TControl.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.BorderStyle" link="#lclbase.Controls.TWinControl.BorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.ClickOnSelChange" link="#lclbase.StdCtrls.TCustomListBox.ClickOnSelChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Color" link="#lclbase.Controls.TControl.Color">
        <short>
          <var>Color</var> - Determine the colour for the display of the actual control, not the colour selected from the list</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Constraints" link="#lclbase.Controls.TControl.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.DragCursor" link="#lclbase.Controls.TControl.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.DragMode" link="#lclbase.Controls.TControl.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Enabled" link="#lclbase.Controls.TControl.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.ExtendedSelect" link="#lclbase.StdCtrls.TCustomListBox.ExtendedSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Font" link="#lclbase.Controls.TControl.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.IntegralHeight" link="#lclbase.StdCtrls.TCustomListBox.IntegralHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.ItemHeight" link="#lclbase.StdCtrls.TCustomListBox.ItemHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Items" link="#lclbase.StdCtrls.TCustomListBox.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.MultiSelect" link="#lclbase.StdCtrls.TCustomListBox.MultiSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Palette">
        <short>The <var>Palette</var> of colours from which selection is to be made</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.ParentColor" link="#lclbase.Controls.TControl.ParentColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.ParentFont" link="#lclbase.Controls.TControl.ParentFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.ParentShowHint" link="#lclbase.Controls.TControl.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.PopupMenu" link="#lclbase.Controls.TControl.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.ShowHint" link="#lclbase.Controls.TControl.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Sorted" link="#lclbase.StdCtrls.TCustomListBox.Sorted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.TabOrder" link="#lclbase.Controls.TWinControl.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.TabStop" link="#lclbase.Controls.TWinControl.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.TopIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.Visible" link="#lclbase.Controls.TControl.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnChangeBounds" link="#lclbase.Controls.TControl.OnChangeBounds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnClick" link="#lclbase.Controls.TControl.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnDblClick" link="#lclbase.Controls.TControl.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnDragDrop" link="#lclbase.Controls.TControl.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnDragOver" link="#lclbase.Controls.TControl.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnDrawItem" link="#lclbase.StdCtrls.TCustomListBox.OnDrawItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnEndDrag" link="#lclbase.Controls.TControl.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnEnter" link="#lclbase.Controls.TWinControl.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnExit" link="#lclbase.Controls.TWinControl.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnKeyDown" link="#lclbase.Controls.TWinControl.OnKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnKeyPress" link="#lclbase.Controls.TWinControl.OnKeyPress">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnKeyUp" link="#lclbase.Controls.TWinControl.OnKeyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnMouseDown" link="#lclbase.Controls.TControl.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnMouseEnter" link="#lclbase.Controls.TControl.OnMouseEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnMouseLeave" link="#lclbase.Controls.TControl.OnMouseLeave">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnMouseMove" link="#lclbase.Controls.TControl.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnMouseUp" link="#lclbase.Controls.TControl.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnMouseWheel" link="#lclbase.Controls.TControl.OnMouseWheel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnMouseWheelDown" link="#lclbase.Controls.TControl.OnMouseWheelDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnMouseWheelUp" link="#lclbase.Controls.TControl.OnMouseWheelUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnResize" link="#lclbase.Controls.TControl.OnResize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnSelectionChange" link="#lclbase.StdCtrls.TCustomListBox.OnSelectionChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnShowHint" link="#lclbase.Controls.TControl.OnShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TColorListBox.OnStartDrag" link="#lclbase.Controls.TControl.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="Register">
        <short>Register procedure for colorbox</short>
        <descr>This procedure registers the component to the Addtional menu</descr>
        <errors/>
        <seealso/>
      </element>
      <element name="TColorBox.OnUTF8KeyPress" link="#lclbase.Controls.TWinControl.OnUTF8KeyPress"/>
      <element name="TColorListBox.OnUTF8KeyPress" link="#lclbase.Controls.TWinControl.OnUTF8KeyPress"/>
      <element name="TCustomColorBox">
        <short>
          <var>TCustomColorBox</var> - base class for <var>TColorBox</var>
        </short>
      </element>
      <element name="TCustomColorBox.SetStyle" link="#lclbase.StdCtrls.TCustomComboBox.SetStyle"/>
      <element name="TCustomColorBox.DrawItem" link="#lclbase.StdCtrls.TCustomComboBox.DrawItem"/>
      <element name="TCustomColorBox.Create">
        <short>
          <var>Create</var> - constructor for TCustomColorBox: calls inherited <var>Create</var>, sets style, default colours and colour list, ReadOnly and Selected properties</short>
        <seealso>
          <link id="#lclbase.StdCtrls.TCustomCombobox.Create">TCustomCombobox.Create</link>
        </seealso>
      </element>
      <element name="TCustomColorBox.SetColorList">
        <short>
          <var>SetColorList</var> - specifies the list of colours to be presented in the drop-down</short>
      </element>
      <element name="TCustomColorBox.Colors">
        <short>
          <var>Colors</var> the colour specified by the Index</short>
      </element>
      <element name="TCustomColorBox.Palette">
        <short>The <var>Palette</var> of colours to be included</short>
      </element>
      <element name="TCustomColorBox.Selected">
        <short>The colour that has been <var>Selected</var> from the ComboBox</short>
      </element>
      <element name="TCustomColorListBox">
        <short>
          <var>TCustomColorListBox</var> - base class for <var>TColorListBox</var>
        </short>
      </element>
      <element name="TCustomColorListBox.SetStyle">
        <short>
          <var>SetStyle</var> - specify the Style</short>
      </element>
      <element name="TCustomColorListBox.DrawItem" link="#lclbase.StdCtrls.TCustomListBox.DrawItem"/>
      <element name="TCustomColorListBox.Create">
        <short>
          <var>Create</var> - constructor for <var>TCustomColorListBox</var>: calls inherited <var>Create</var>, initialises style, default colours and sets colour list</short>
        <seealso>
          <link id="#lclbase.StdCtrls.TCustomListBox.Create">TCustomListBox.Create</link>
        </seealso>
      </element>
      <element name="TCustomColorListBox.SetColorList">
        <short>
          <var>SetColorList</var> - specifies the list of colours</short>
      </element>
      <element name="TCustomColorListBox.Colors">
        <short>The <var>Colors</var> specified by <var>Index</var>
        </short>
      </element>
      <element name="TCustomColorListBox.Selected" link="#lclbase.StdCtrls.TCustomListBox.Selected"/>
      <element name="TCustomColorListBox.Palette">
        <short>The <var>Palette</var> to be used to supply the colours</short>
      </element>
      <element name="TColorBoxStyle">
        <short>
          <var>TColorBoxStyle</var> - set of <var>TColorBoxStyles</var>
        </short>
      </element>
      <element name="TCustomColorBox.Loaded" link="#rtl.Classes.TComponent.Loaded"/>
      <element name="TCustomColorBox.InitializeWnd" link="#lclbase.Controls.TWinControl.InitializeWnd"/>
      <element name="TCustomColorBox.DoGetColors">
        <short>
          <var>DoGetColors</var> - perform the code for getting colours</short>
      </element>
      <element name="TCustomColorBox.Change" link="#lclbase.StdCtrls.TCustomComboBox.Change"/>
      <element name="TCustomColorBox.PickCustomColor">
        <short>
          <var>PickCustomColor</var> - if True, a custom colour is picked rather than one of the standard list</short>
      </element>
      <element name="TCustomColorBox.Style" link="#lclbase.StdCtrls.TCustomComboBox.Style"/>
      <element name="TCustomColorBox.ColorNames">
        <short>
          <var>ColorNames</var> - the name of the specified (indexed) colour, stored as a string</short>
      </element>
      <element name="TCustomColorBox.DefaultColorColor">
        <short>
          <var>DefaultColorColor</var> - the default colour, expressed as a Color value</short>
        <descr>
          <p>
            <var>DefaultColorColor</var> - the default colour, expressed as a Color value</p>
          <p>The use of the construct <var>..ColorColor</var> denotes the value of a colour as a TColor, as opposed to an index value</p>
        </descr>
      </element>
      <element name="TCustomColorBox.NoneColorColor">
        <short>
          <var>NoneColorColor</var> - the colour to be used when no selection has been made, or when <var>None</var> is selected, stored as a <var>TColor</var>
        </short>
      </element>
      <element name="TCustomColorBox.OnGetColors">
        <short>
          <var>OnGetColors</var> - event handler for the instruction to Get Colours</short>
      </element>
      <element name="TColorBox.DefaultColorColor" link="#lclbase.ColorBox.TCustomColorBox.DefaultColorColor"/>
      <element name="TColorBox.NoneColorColor" link="#lclbase.ColorBox.TCustomColorBox.NoneColorColor"/>
      <element name="TColorBox.Style" link="#lclbase.StdCtrls.TCustomComboBox.Style"/>
      <element name="TColorBox.OnGetColors" link="#lclbase.ColorBox.TCustomColorBox.OnGetColors"/>
      <element name="TCustomColorListBox.Loaded" link="#rtl.Classes.TComponent.Loaded"/>
      <element name="TCustomColorListBox.InitializeWnd" link="#lclbase.Controls.TWinControl.InitializeWnd"/>
      <element name="TCustomColorListBox.DoGetColors">
        <short>
          <var>DoGetColors</var> - perform the code for getting the colours</short>
      </element>
      <element name="TCustomColorListBox.DoSelectionChange" link="#lclbase.StdCtrls.TCustomListBox.DoSelectionChange"/>
      <element name="TCustomColorListBox.PickCustomColor">
        <short>
          <var>PickCustomColor</var> - if True, a custom colour is picked rather than one from the standard list</short>
      </element>
      <element name="TCustomColorListBox.Style" link="#lclbase.StdCtrls.TCustomListBox.Style"/>
      <element name="TCustomColorListBox.ColorNames">
        <short>
          <var>ColorNames</var> - the name of the indexed colour, stored as a string</short>
      </element>
      <element name="TCustomColorListBox.DefaultColorColor">
        <short>
          <var>DefaultColorColor</var> - the default colour, expressed as a Color value</short>
        <descr>
          <p>
            <var>DefaultColorColor</var> - the default colour, expressed as a Color value</p>
          <p>The use of the construct <var>..ColorColor</var> denotes the value of a colour as a TColor, as opposed to an index value</p>
        </descr>
      </element>
      <element name="TCustomColorListBox.NoneColorColor">
        <short>
          <var>NoneColorColor</var> - the colour to be used when no selection has been made, or when <var>None</var> is selected, stored as a <var>TColor</var>
        </short>
      </element>
      <element name="TCustomColorListBox.OnGetColors">
        <short>
          <var>OnGetColors</var> - event handler for the instruction to Get Colours</short>
      </element>
      <element name="TColorListBox.DefaultColorColor" link="#lclbase.ColorBox.TCustomColorListBox.DefaultColorColor"/>
      <element name="TColorListBox.NoneColorColor" link="#lclbase.ColorBox.TCustomColorListBox.NoneColorColor"/>
      <element name="TColorListBox.Style" link="#lclbase.StdCtrls.TCustomListBox.Style"/>
      <element name="TColorListBox.OnGetColors" link="#lclbase.ColorBox.TCustomColorListBox.OnGetColors"/>
      <element name="TColorListBox.OnContextPopup" link="#lclbase.Controls.TControl.OnContextPopup"/>
      <element name="TColorListBox.ParentBidiMode" link="#lclbase.Controls.TControl.ParentBiDiMode"/>
      <element name="TColorListBox.BidiMode" link="#lclbase.Controls.TControl.BiDiMode"/>
    </module>
    <!-- ColorBox -->
  </package>
</fpdoc-descriptions>
