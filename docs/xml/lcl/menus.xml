<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="lcl">
    <!--
  ====================================================================
    Menus
  ====================================================================
-->
    <module name="Menus">
      <short>Menus to be used in Forms created with the Lazarus IDE</short>
      <descr/>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="SysUtils">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLStrConsts">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLProc">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLIntf">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="InterfaceBase">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LMessages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="ActnList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Graphics">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="ImgList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLClasses">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TMenu">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="EMenuError">
        <short><i>EMenuError </i>- Exception handler for error in Menu access</short>
      </element>
      <!-- object Visibility: default -->
      <element name="TMenuItem"/>
      <!-- procedure type Visibility: default -->
      <element name="TMenuChangeEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuChangeEvent.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuChangeEvent.Source"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuChangeEvent.Rebuild"><short/></element>
      <!-- object Visibility: default -->
      <element name="TMenuActionLink">
        <short><i>TMenuActionLink</i>: defines the link between a selected menu item and its corresponding action</short>
        <descr>
          <p><i>TMenuActionLink</i>: defines the link between a selected menu item and its corresponding action. Properties are protected and not readily accessible by application programmers.</p>
        </descr>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TMenuActionLink.FClient">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.AssignClient">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.AssignClient.AClient"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsAutoCheckLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsAutoCheckLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsCaptionLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsCaptionLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsCheckedLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsCheckedLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsEnabledLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsEnabledLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsHelpContextLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsHelpContextLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsHintLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsHintLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsGroupIndexLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsGroupIndexLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsImageIndexLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsImageIndexLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsShortCutLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsShortCutLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsVisibleLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsVisibleLinked.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuActionLink.IsOnExecuteLinked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuActionLink.IsOnExecuteLinked.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetAutoCheck">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetAutoCheck.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetCaption">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetCaption.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetChecked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetChecked.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetEnabled">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetEnabled.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetHelpContext">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetHelpContext.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetHint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetHint.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetImageIndex.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetShortCut">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetShortCut.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetVisible.Value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuActionLink.SetOnExecute">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuActionLink.SetOnExecute.Value"><short/></element>
      <!-- "class of" type Visibility: default -->
      <element name="TMenuActionLinkClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TMenuItem">
        <short><i>TMenuItem</i>    - The base structure of each item in a Menu.</short>
        <descr>
          <p><i>TMenuItem</i> - The base structure of each item in a Menu.</p>
          <p>This Component does the hard work of processing the Items found in the various types of menus. It defines a lot of the properties and methods used in the various sorts of menu, including <link id="TMainMenu">TMainMenu</link>, <link id="TMenu">TMenu</link> and <link id="TPopUpMenu">TPopUpMenu</link></p>
        </descr>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FActionLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FAutoCheck">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FCaption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FChecked">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FCommand">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FDefault">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FEnabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FBitmap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FGroupIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FHandle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FHelpContext">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FImageChangeLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FImageIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FOnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FOnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FParent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FRadioItem">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FRightJustify">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FShortCut">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FShowAlwaysCheckable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FSubMenuImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenuItem.FVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.GetBitmap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetBitmap.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.GetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetCount.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.GetItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetItem.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.GetItem.Index"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.GetMenuIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetMenuIndex.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.GetParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetParent.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsBitmapStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsBitmapStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsCaptionStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsCaptionStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsCheckedStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsCheckedStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsEnabledStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsEnabledStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsHelpContextStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsHelpContextStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsHintStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsHintStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsImageIndexStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsImageIndexStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsOnClickStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsOnClickStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsShortCutStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsShortCutStored.Result"><short/></element>
      <!-- function Visibility: private -->
      <element name="TMenuItem.IsVisibleStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsVisibleStored.Result"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetAutoCheck">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetAutoCheck.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetCaption">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetCaption.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetChecked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetChecked.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetDefault">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetDefault.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetEnabled">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetEnabled.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetBitmap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetBitmap.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetMenuIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetMenuIndex.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetRadioItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetRadioItem.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetRightJustify">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetRightJustify.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetShowAlwaysCheckable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetShowAlwaysCheckable.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SetSubMenuImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetSubMenuImages.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.ShortcutChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.ShortcutChanged.OldValue"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.ShortcutChanged.Value"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.SubItemChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SubItemChanged.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SubItemChanged.Source"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SubItemChanged.Rebuild"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.TurnSiblingsOff">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TMenuItem.DoActionChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.DoActionChange.Sender"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.ActionChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.ActionChange.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.ActionChange.CheckDefaults"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.AssignTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.AssignTo.Dest"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuItem.GetAction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetAction.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuItem.GetActionLinkClass">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetActionLinkClass.Result"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenuItem.GetHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetHandle.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.DoClicked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.DoClicked.msg"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.CreateHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.DestroyHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.Notification.AComponent"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.Notification.Operation"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.GetChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.GetChildren.Proc"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.GetChildren.Root"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.InitiateActions">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.MenuChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.MenuChanged.Rebuild"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.SetAction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetAction.NewAction"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.SetChildOrder">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetChildOrder.Child"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetChildOrder.Order"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.SetGroupIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetGroupIndex.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.SetImageIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetImageIndex.value"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.SetParentComponent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetParentComponent.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.SetShortCut">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetShortCut.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.SetVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.SetVisible.AValue"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.UpdateImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMenuItem.ImageListChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.ImageListChange.Sender"><short/></element>
      <!-- property Visibility: protected -->
      <element name="TMenuItem.ActionLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: public -->
      <element name="TMenuItem.FCompStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TMenuItem.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.Create.TheOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TMenuItem.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.GetImageList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetImageList.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.GetParentComponent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetParentComponent.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.GetParentMenu">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetParentMenu.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.HandleAllocated">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.HandleAllocated.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.HasIcon">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.HasIcon.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.HasParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.HasParent.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.InitiateAction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.IndexOf">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IndexOf.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.IndexOf.Item"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.IndexOfCaption">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IndexOfCaption.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.IndexOfCaption.ACaption"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.VisibleIndexOf">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.VisibleIndexOf.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.VisibleIndexOf.Item"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.IsCheckItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsCheckItem.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.Add.Item"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.AddSeparator">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.Click">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.Delete.Index"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.HandleNeeded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.Insert.Index"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.Insert.Item"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.RecreateHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.Remove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.Remove.Item"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.IsInMenuBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.IsInMenuBar.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TMenuItem.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.HasBitmap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.HasBitmap.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.GetIconSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.GetIconSize.Result"><short/></element>
      <!-- property Visibility: public -->
      <element name="TMenuItem.Count">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMenuItem.Handle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMenuItem.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenuItem.Items.Index"><short/></element>
      <!-- property Visibility: public -->
      <element name="TMenuItem.MenuIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMenuItem.Parent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMenuItem.Command">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TMenuItem.MenuVisibleIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenuItem.MenuVisibleIndex.Result"><short/></element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.Action">
        <short><i>Action</i> - the default action associated with this Menu Item</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.AutoCheck">
        <short><i>AutoCheck</i>: Whether a check mark is automatically added when the item is selected</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.Caption">
        <short><i>Caption</i>: The text that appears on the Menu Bar at run-time</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.Checked">
        <short><i>Checked</i>: whether a check mark appears on the Menu Bar</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.Default">
        <short><i>Default</i>: is this option the default selection? If so, it usually appears in Bold and is selected by hitting ENTER</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.Enabled">
        <short><i>Enabled</i>: can this option be selected? If Not Enabled, usually 'greyed-out'</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.Bitmap">
        <short><i>BitMap</i>: an optional picture beside the MenuItem Caption</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.GroupIndex">
        <short><i>GroupIndex</i>: the sequence number in a group of mutually exclusive RadioItem choices</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.HelpContext">
        <short><i>HelpContext</i> - an index to the context-sensitive help string to be used</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.Hint">
        <short><i>Hint</i>: a pop-up help message that appears when the mouse hovers over an item.</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.ImageIndex">
        <short><i>ImageIndex </i>- number in a list of images for use in illustrating menu items</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.RadioItem">
        <short><i>RadioItem</i>:  whether the item is part of a group of mutually exclusive choices.</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.RightJustify">
        <short><i>RightJustify</i>: the position of the Caption in the Menu Panel.  Default (False) is Left Justify</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.ShortCut">
        <short><i>ShortCut</i> - the quick key sequence to be used in selecting this menu item</short>
        <descr>
          <p><i>ShortCut</i> - the quick key sequence to be used in selecting this menu item</p>
          <p>If you select this property in the Object Inspector, a list-box will appear with choices for various key-combinations to be used. The chosen key-sequence will be displayed, at run-time, on the menu drop-down next to the caption for the menu item.</p>
        </descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.ShowAlwaysCheckable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.SubMenuImages">
        <short><i>SubMenuImages </i>- will images be shown for sub-menu items as well as the main item?</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.Visible">
        <short><i>Visible</i> - can the item be seen?</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenuItem.OnClick">
        <short><i>OnClick </i>- event handler for selection of this menu item</short>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TFindItemKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TFindItemKind.fkCommand"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TFindItemKind.fkHandle"><short/></element>
      <!-- enumeration value Visibility: default -->
      <element name="TFindItemKind.fkShortCut"><short/></element>
      <!-- object Visibility: default -->
      <element name="TMenu">
        <short><i>TMenu</i>: The base class for all menus</short>
        <descr>
          <p><i>TMenu</i>: The base class for all menus</p>
          <p>The class definition contains very few public or published properties or methods accessible to the application programmer, but contains the entry <i>Items </i>which points to the Menu Items that appear in the menu displays</p>
        </descr>
        <seealso>
          <link id="HowToUseMenus"/>
          <link id="TMainMenu"/>
          <link id="TPopupMenu"/>
          <link id="TMenuItem"/>
        </seealso>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenu.FImageChangeLink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenu.FImages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenu.FItems">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenu.FOnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TMenu.FParent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TMenu.SetImages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenu.SetImages.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenu.SetParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenu.SetParent.AValue"><short/></element>
      <!-- procedure Visibility: private -->
      <element name="TMenu.ImageListChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenu.ImageListChange.Sender"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenu.CreateHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMenu.DoChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenu.DoChange.Source"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenu.DoChange.Rebuild"><short/></element>
      <!-- function Visibility: protected -->
      <element name="TMenu.GetHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenu.GetHandle.Result"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenu.GetChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenu.GetChildren.Proc"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenu.GetChildren.Root"><short/></element>
      <!-- procedure Visibility: protected -->
      <element name="TMenu.MenuChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenu.MenuChanged.Sender"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenu.MenuChanged.Source"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenu.MenuChanged.Rebuild"><short/></element>
      <!-- property Visibility: protected -->
      <element name="TMenu.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMenu.UpdateItems">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: public -->
      <element name="TMenu.FCompStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TMenu.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMenu.Create.AOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TMenu.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TMenu.DestroyHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TMenu.FindItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenu.FindItem.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenu.FindItem.AValue"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenu.FindItem.Kind"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenu.HandleAllocated">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenu.HandleAllocated.Result"><short/></element>
      <!-- function Visibility: public -->
      <element name="TMenu.IsRightToLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenu.IsRightToLeft.Result"><short/></element>
      <!-- procedure Visibility: public -->
      <element name="TMenu.HandleNeeded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TMenu.DispatchCommand">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TMenu.DispatchCommand.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TMenu.DispatchCommand.ACommand"><short/></element>
      <!-- property Visibility: public -->
      <element name="TMenu.Handle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TMenu.Parent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenu.Items">
        <short><i>Items</i> - a list of Menu Items to be included in the menu display</short>
      </element>
      <!-- property Visibility: published -->
      <element name="TMenu.Images">
        <short><i>Images </i>- a list of images from which entries can be selected to illustrate menu choices</short>
      </element>
      <!-- object Visibility: default -->
      <element name="TMainMenu">
        <short><i>TMainMenu</i> - the Main Menu that appears at the top of most windows</short>
        <descr>
          <p><i>TMainMenu</i> - the Main Menu that appears at the top of most windows; form designers can
customise by choosing various menu items.</p>
          <p>Main Menu is a non-visible component : that is, if the icon is selected from the Component Pallete and placed on the Form, it will not appear at Run-time. Instead, a Menu bar with a structure defined by the Menu Editor will appear.</p>
          <p>To see the Menu Editor, right-click on the Main Menu icon on your Form. </p>
        </descr>
        <seealso>
          <link id="HowToUseMenus"/>
          <link id="TMenuItem"/>
          <link id="TMenu"/>
          <link id="TMenuActionLink"/>
        </seealso>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TMainMenu.ItemChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TMainMenu.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TMainMenu.Create.AOwner"><short/></element>
      <!-- property Visibility: published -->
      <element name="TMainMenu.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMainMenu.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TPopupMenu">
        <short><i>TPopupMenu </i> - a menu panel that pops up on the desktop when the right mouse button is clicked</short>
        <descr>
          <p><i>TPopupMenu</i>: a menu panel that pops up on the desktop when the right mouse button is clicked.</p>
          <p>Inherits all the properties of <i>TMenu</i> (including the properties of <i>TMenuItem</i>), but has some new properties (procedure <i>PopUp</i> and procedure <i>Close</i>) that define its behaviour when actually invoked.</p>
          <p>PopupPoint defines the position of the Popup menu, usually at the current cursor position.</p>
          <p>To use a Popup menu, first create it with the MenuEditor. Then with the Object Inspector for the control that needs to use the Popup, select the property named PopupMenu, and a listbox will appear with the names of the available Menus - choose the Popup name you want</p>
        </descr>
        <seealso>
          <link id="HowToUseMenus"/>
          <link id="TMainMenu"/>
          <link id="TMenuItem"/>
          <link id="TMenu"/>
          <link id="TMenuActionLink"/>
        </seealso>
      </element>
      <!-- variable Visibility: private -->
      <element name="TPopupMenu.FAutoPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TPopupMenu.FOnClose">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TPopupMenu.FOnPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TPopupMenu.FPopupComponent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TPopupMenu.FPopupPoint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TPopupMenu.DoPopup">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPopupMenu.DoPopup.Sender"><short/></element>
      <!-- constructor Visibility: public -->
      <element name="TPopupMenu.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPopupMenu.Create.AOwner"><short/></element>
      <!-- destructor Visibility: public -->
      <element name="TPopupMenu.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TPopupMenu.PopUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPopupMenu.PopUp.X"><short/></element>
      <!-- argument Visibility: default -->
      <element name="TPopupMenu.PopUp.Y"><short/></element>
      <!-- property Visibility: public -->
      <element name="TPopupMenu.PopupComponent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TPopupMenu.PopupPoint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TPopupMenu.Close">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TPopupMenu.DoClose">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPopupMenu.AutoPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPopupMenu.OnPopup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TPopupMenu.OnClose">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: default -->
      <element name="ShortCut">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="ShortCut.Result"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ShortCut.Key"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ShortCut.Shift"><short/></element>
      <!-- procedure Visibility: default -->
      <element name="ShortCutToKey">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="ShortCutToKey.ShortCut"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ShortCutToKey.Key"><short/></element>
      <!-- argument Visibility: default -->
      <element name="ShortCutToKey.Shift"><short/></element>
      <!-- variable Visibility: default -->
      <element name="DesignerMenuItemClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="ActivePopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="OnMenuPopupHandler">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="Register">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <topic name="HowToUseMenus">
        <short><i>HowToUseMenus</i> - hints for creating Menus for your Forms</short>
        <descr>
          <p><i>HowToUseMenus</i> - hints for creating Menus for your Forms</p>
          <p><i>TMainMenu</i> is the Main Menu that appears at the top of most forms; form designers can
customise by choosing various menu items. <i>TPopupMenu</i> is a menu window that pops up with pertinent, usually context-sensitive, details and choices when the right mouse button is clicked near a control</p>
          <p>Main Menu is a non-visible component : that is, if the icon is selected from the Component Palette and placed on the Form, it will not appear at Run-time. Instead, a Menu bar with a structure defined by the Menu Editor will appear. Popup menus, placed on the form by selecting the icon from the Component Palette, do not appear at all unless the right mouse button is clicked on a control that owns such a menu.</p>
          <p>To see the Menu Editor, right-click on the Main Menu  or Popup Menu icon on your Form. A pop-up box appears, that invites you to enter items into the Menu bar.</p>
          <p>An Edit box is displayed, containing a Button labelled New Item1. If you right-click on that box, a pop-up menu is displayed that allows you to add a new item before or after (along the same level) or create a sub-menu with the opportunity to add further items below (or above) the new item in a downward column.</p>
          <p>Any or all of the <link id="TMenuItem">MenuItems</link> that you add can be configured using the Object Inspector.</p>
          <p>At the least you should give each item a <i>Caption</i> which will appear on the Menu Bar (you may also wish to give it a more meaningful <i>Name</i>). The caption should indicate the activity to be selected, such as "File Open" or "Close", "Run" or "Quit"</p>
          <p>If you want a particular letter in the Caption to be associated with a shortcut key, that letter should be preceded by an ampersand. The Menu item at run-time will appear with the shortcut letter underlined, and hitting that letter key will have the same effect as selecting the menu item. Alternatively you can choose a shortcut key sequence (such as Ctrl-C for Copy or Ctrl-V for Paste - the standard Keyboard shortcuts) with the <i>ShortCut</i> property of the MenuItem.</p>
          <p>It is often helpful to use the Menu controls in conjuction with an <link id="#lcl.ActnList.TActionList">ActionList</link> which contains a series of standard or customised <link id="#lcl.ActnList.TAction">Actions</link>. Menu Items can be linked in the Object Inspector to Actions on the list, and the same actions can be linked to <link id="#lcl.StdCtrls.TButton">Buttons</link>, <link id="#lcl.ComCtrls.TToolButton">ToolBar Buttons</link>, <link id="#lcl.Buttons.TSpeedButton">SpeedButtons</link> etc. It is obviously economic of effort to re-use the same code to respond to the various events, rather than writing separate <i>OnClick</i> event handlers for each individual control.</p>
          <p>By default a number of standard actions is pre-loaded from <link id="#lcl.StdActns">StdActns</link> or, if DataAware controls are being used, from <link id="#lcl.DBActns">DBActns</link>, and these can be chosen using the ActionList editor which appears when you right-click on the ActionList icon on the Form Designer.</p>
        </descr>
      </topic>
    </module>
    <!-- Menus -->
  </package>
</fpdoc-descriptions>
