<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="lcl">
    <!--
  ====================================================================
    Grids
  ====================================================================
-->
    <module name="Grids">
      <short/>
      <descr/>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="SysUtils">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLStrConsts">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLProc">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLIntf">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Controls">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="GraphType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Graphics">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Forms">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="DynamicArray">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LMessages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="XMLCfg">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="StdCtrls">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LResources">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="MaskEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="GRIDFILEVERSION">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="GM_SETVALUE">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="GM_GETVALUE">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="GM_SETGRID">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="GM_SETPOS">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="GM_SELECTALL">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="GM_SETMASK">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="CA_LEFT">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="CA_CENTER">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="CA_RIGHT">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="CL_TOP">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="CL_CENTER">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="CL_BOTTOM">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="EO_AUTOSIZE">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="EO_HOOKKEYDOWN">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="EO_HOOKKEYPRESS">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="EO_HOOKKEYUP">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="EO_HOOKEXIT">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="EO_SELECTALL">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="EO_WANTCHAR">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="EGridException">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGridOption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goFixedVertLine">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goFixedHorzLine">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goVertLine">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goHorzLine">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goRangeSelect">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goDrawFocusSelected">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goRowSizing">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goColSizing">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goRowMoving">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goColMoving">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goEditing">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goTabs">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goRowSelect">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goAlwaysShowEditor">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goThumbTracking">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goColSpanning">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goRelaxedRowSelect">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goDblClickAutoSize">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goSmoothScroll">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TGridOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGridSaveOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridSaveOptions.soDesign">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridSaveOptions.soAttributes">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridSaveOptions.soContent">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridSaveOptions.soPosition">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TSaveOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TGridDrawState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridDrawState.gdSelected">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridDrawState.gdFocused">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridDrawState.gdFixed">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGridState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridState.gsNormal">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridState.gsSelecting">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridState.gsRowSizing">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridState.gsColSizing">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridState.gsRowMoving">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridState.gsColMoving">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGridZone">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridZone.gzNormal">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridZone.gzFixedCols">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridZone.gzFixedRows">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridZone.gzFixedCells">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TUpdateOption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateOption.uoNone">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateOption.uoQuick">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TUpdateOption.uoFull">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TAutoAdvance">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TAutoAdvance.aaNone">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TAutoAdvance.aaDown">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TAutoAdvance.aaRight">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TAutoAdvance.aaLeft">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGridStatus">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridStatus.stNormal">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridStatus.stEditorHiding">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridStatus.stEditorShowing">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridStatus.stFocusing">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TItemType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemType.itNormal">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemType.itCell">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemType.itColumn">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemType.itRow">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemType.itFixed">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemType.itFixedColumn">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemType.itFixedRow">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TItemType.itSelected">
        <short/>
      </element>
      <!-- constant Visibility: default -->
      <element name="soAll">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="constRubberSpace">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PCellProps">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TCellProps">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TCellProps.Attr">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TCellProps.Data">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TCellProps.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PColRowProps">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TColRowProps">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TColRowProps.Size">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TColRowProps.FixedAttr">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TColRowProps.NormalAttr">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- pointer type Visibility: default -->
      <element name="PGridMessage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TGridMessage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridMessage.MsgID">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridMessage.Grid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridMessage.Col">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridMessage.Row">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridMessage.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridMessage.CellRect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridMessage.Options">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TStringCellEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringCellEditor.FGrid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringCellEditor.Change">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringCellEditor.KeyDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringCellEditor.KeyDown.Key">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringCellEditor.KeyDown.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringCellEditor.msg_SetMask">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringCellEditor.msg_SetMask.Msg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringCellEditor.msg_SetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringCellEditor.msg_SetValue.Msg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringCellEditor.msg_GetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringCellEditor.msg_GetValue.Msg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringCellEditor.msg_SetGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringCellEditor.msg_SetGrid.Msg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringCellEditor.msg_SelectAll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringCellEditor.msg_SelectAll.Msg">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TOnDrawCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnDrawCell.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnDrawCell.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnDrawCell.Row">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnDrawCell.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnDrawCell.aState">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TOnSelectCellEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectCellEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectCellEvent.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectCellEvent.Row">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectCellEvent.CanSelect">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TOnSelectEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectEvent.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectEvent.Row">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TGridOperationEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridOperationEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridOperationEvent.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridOperationEvent.sIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridOperationEvent.tIndex">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="THdrEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="THdrEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="THdrEvent.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="THdrEvent.index">
        <short/>
      </element>
      <!-- function type Visibility: default -->
      <element name="TOnCompareCells">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TOnCompareCells.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnCompareCells.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnCompareCells.Acol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnCompareCells.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnCompareCells.Bcol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnCompareCells.BRow">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TSelectEditorEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSelectEditorEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSelectEditorEvent.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSelectEditorEvent.Row">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSelectEditorEvent.Editor">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TOnPrepareCanvasEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnPrepareCanvasEvent.sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnPrepareCanvasEvent.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnPrepareCanvasEvent.Row">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnPrepareCanvasEvent.aState">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TVirtualGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TVirtualGrid.FColCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TVirtualGrid.FRowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TVirtualGrid.FCells">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TVirtualGrid.FCols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TVirtualGrid.FRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TVirtualGrid.GetCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVirtualGrid.GetCells.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.GetCells.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.GetCells.Row">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TVirtualGrid.Getrows">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVirtualGrid.Getrows.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Getrows.Row">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TVirtualGrid.Getcols">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVirtualGrid.Getcols.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Getcols.Col">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TVirtualGrid.SetCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.SetCells.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.SetCells.Row">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.SetCells.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TVirtualGrid.Setrows">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Setrows.Row">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Setrows.Avalue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TVirtualGrid.Setcolcount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Setcolcount.Avalue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TVirtualGrid.Setrowcount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Setrowcount.Avalue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TVirtualGrid.Setcols">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Setcols.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Setcols.Avalue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVirtualGrid.doDestroyItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.doDestroyItem.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.doDestroyItem.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.doDestroyItem.Row">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.doDestroyItem.Item">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVirtualGrid.doNewItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.doNewItem.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.doNewItem.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.doNewItem.Row">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.doNewItem.Item">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVirtualGrid.DeleteColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.DeleteColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.DeleteColRow.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVirtualGrid.MoveColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.MoveColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.MoveColRow.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.MoveColRow.ToIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVirtualGrid.ExchangeColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.ExchangeColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.ExchangeColRow.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.ExchangeColRow.WithIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVirtualGrid.DisposeCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.DisposeCell.P">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVirtualGrid.DisposeColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.DisposeColRow.p">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TVirtualGrid.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TVirtualGrid.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TVirtualGrid.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TVirtualGrid.GetDefaultCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVirtualGrid.GetDefaultCell.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TVirtualGrid.GetDefaultColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TVirtualGrid.GetDefaultColRow.Result">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TVirtualGrid.ColCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TVirtualGrid.RowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TVirtualGrid.Celda">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Celda.Col">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Celda.Row">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TVirtualGrid.Cols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Cols.Col">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TVirtualGrid.Rows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.Rows.Row">
        <short/>
      </element>
      <!-- alias type Visibility: default -->
      <element name="TGridCoord">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- alias type Visibility: default -->
      <element name="TGridRect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TGridDataCache">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.FixedWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.FixedHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.GridWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.GridHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ClientWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ClientHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ScrollWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ScrollHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.VisibleGrid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.MaxClientXY">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ValidGrid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.AccumWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.AccumHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.HScrDiv">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.VScrDiv">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.TLColOff">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.TLRowOff">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.MaxTopLeft">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCustomGrid">
        <short>The base class for all grid controls</short>
        <descr>
          <p>A grid is a collection of cells that are organized in columns and rows. 
Grids are adequate to show data that have tabular nature, for example tables in a database.  
</p>
          <p>
            <b>Key properties:</b>
          </p>
          <p>The <link id="TCustomGrid.ColCount">ColCount</link> and  <link id="TCustomGrid.RowCount">RowCount</link> properties contain the column and row count of the grid. </p>
          <p>The <link id="TCustomGrid.FixedCols">FixedCols</link> and <link id="TCustomGrid.FixedRows">FixedRows</link> properties specify the count of fixed columns or rows that are used for headings. </p>
          <p>The column widths and row heights of the grid are accessible with the <link id="TCustomGrid.ColWidths">ColWidths</link> and <link id="TCustomGrid.RowHeights">RowHeights</link> properties. </p>
          <p>The <link id="TCustomGrid.DefaultColWidth">DefaultColWidth</link> and DefaultRowHeight properties are used to specify default column widths or row heights respectively. </p>
          <p>The colors of the cells and the grid elements are specified with the <link id="TCustomGrid.AlternateColor">AlternateColor</link>, <link id="TCustomGrid.BorderColor">BorderColor</link>, <link id="TCustomGrid.FixedColor">FixedColor</link>, <link id="TCustomGrid.FixedHotColor">FixedHotColor</link>, <link id="TCustomGrid.FocusColor">FocusColor</link>, <link id="TCustomGrid.GridLineColor">GridLineColor</link> and <link id="TCustomGrid.SelectedColor">SelectedColor</link>   properties. The <link id="TCustomGrid.GridWidth">GridWidth</link> and <link id="TCustomGrid.GridHeight">GridHeight</link> properties contain the dimension of the entire grid.</p>
          <p>The <link id="TCustomGrid.ScrollBars">ScrollBars</link> property controls the creation of scrollbars for the grid. </p>
          <p>The <link id="TCustomGrid.LeftCol">LeftCol</link>, <link id="TCustomGrid.TopRow">TopRow</link>, <link id="TCustomGrid.VisibleColCount">VisibleColCount</link> and <link id="TCustomGrid.VisibleRowCount">VisibleRowCount</link> properties contain information about the visible area of the grid. </p>
          <p>The <link id="TCustomGrid.Options">Options</link> property controls options for the grid. 
</p>
          <p>
            <b>Key methods and events:</b>
          </p>
          <p>If the user highlights a cell of the grid, the <link id="TCustomGrid.SelectCell">SelectCell</link> method is called that triggers the <link id="TCustomGrid.OnSelectCell">OnSelectCell</link> event. The position of the highlighted cell is stored within the <link id="TCustomGrid.Col">Col</link> and <link id="TCustomGrid.Row">Row</link> property.</p>
          <p>The <link id="TCustomGrid.MouseToCell">MouseToCell</link> method calculates a grid cell from a given screen position.</p>
          <p>Huge changes to the grid should be encapsulated in calls to <link id="TCustomGrid.BeginUpdate">BeginUpdate</link> and <link id="TCustomGrid.EndUpdate">EndUpdate</link> to speed up the application. </p>
          <p>Component developers must override the <link id="TCustomGrid.DrawCell">DrawCell</link> method in customized grids.</p>
        </descr>
        <seealso>
          <link id="TStringGrid"/>
          <link id="TDrawGrid"/>
        </seealso>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FAutoAdvance">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FAutoFillColumns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FDefaultDrawing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FEditorHiding">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FEditorMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FEditorShowing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FEditorKey">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FEditorOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FFlat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOnCompareCells">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FGridLineStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FGridLineWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FDefColWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FDefRowHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FCol">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FRow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FFixedCols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FFixedRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOnPrepareCanvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOnSelectEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FGridLineColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FFixedcolor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FFocusColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FSelectedColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FFocusRectVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FCols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FsaveOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FSelectActive">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FTopLeft">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FSplitter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FPivot">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FRange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FDragDx">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FMoveLast">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FUpdateCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FUpdateScrollBarsCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FGCache">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOnDrawCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOnBeforeSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOnSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOnTopLeftChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FGSMHBar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FGSMVBar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FVSbVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FHSbVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FDefaultTextStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FLastWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.AdjustCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.AdjustCount.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.AdjustCount.OldValue">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.AdjustCount.NewValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.CacheVisibleGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.CalcColumnWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.CalcColumnWidth.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CalcColumnWidth.Index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.CheckFixedCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckFixedCount.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckFixedCount.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckFixedCount.aFCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckFixedCount.aFRow">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.CheckCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckCount.aNewColCount">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckCount.aNewRowCount">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.CheckTopLeft">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.CheckTopLeft.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckTopLeft.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckTopLeft.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckTopLeft.CheckCols">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckTopLeft.CheckRows">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetAutoFillColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetAutoFillColumns.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetFlat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetFlat.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetFocusRectVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetFocusRectVisible.AValue">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.doColSizing">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.doColSizing.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.doColSizing.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.doColSizing.Y">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.doRowSizing">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.doRowSizing.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.doRowSizing.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.doRowSizing.Y">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.doColMoving">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.doColMoving.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.doColMoving.Y">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.doRowMoving">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.doRowMoving.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.doRowMoving.Y">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.doTopleftChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.doTopleftChange.DimChg">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.EditorCanProcessKey">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.EditorCanProcessKey.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorCanProcessKey.Key">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.EditorGetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.EditorHide">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.EditorPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.EditorSelectAll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.EditorShowChar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorShowChar.Ch">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.EditorSetMode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorSetMode.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.EditorSetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.EditorAlwaysShown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.EditorAlwaysShown.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.EditorShow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorShow.SelAll">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetLeftCol">
        <short>Read specifier for LeftCol</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetLeftCol.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetColCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColCount.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetColWidths">
        <short>Read specifier for ColWidths</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColWidths.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColWidths.Acol">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetRowCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetRowCount.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetRowHeights">
        <short>Read specifier for RowHeights</short>
        <descr>Returns the current rowheight</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetRowHeights.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetRowHeights.Arow">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetSelection.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetSystemMetricsGapSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetSystemMetricsGapSize.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetSystemMetricsGapSize.Index">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetTopRow">
        <short>Read specifier for TopRow</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetTopRow.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetVisibleColCount">
        <short>Read specifier for VisibleRowCount</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetVisibleColCount.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetVisibleGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetVisibleGrid.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetVisibleRowCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetVisibleRowCount.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.InternalAutoFillColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.MyTextRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MyTextRect.R">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MyTextRect.Offx">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MyTextRect.Offy">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MyTextRect.S">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MyTextRect.Clipping">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.ReadColWidths">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ReadColWidths.Reader">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.ReadRowHeights">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ReadRowHeights.Reader">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.ScrollToCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.ScrollToCell.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollToCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollToCell.aRow">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.ScrollGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.ScrollGrid.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollGrid.Relative">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollGrid.DCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollGrid.DRow">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetCol">
        <short>Write specifier for Col</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetCol.Valor">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetColwidths">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetColwidths.Acol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetColwidths.Avalue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetRawColWidths">
        <short>Write specifier for RawColWidths</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetRawColWidths.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetRawColWidths.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetColCount">
        <short>Write specifier for ColCount</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetColCount.Valor">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetDefColWidth">
        <short>Write specifier for DefColWidth</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetDefColWidth.Valor">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetDefRowHeight">
        <short>Write specifier for DefRowHeight</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetDefRowHeight.Valor">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetDefaultDrawing">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetDefaultDrawing.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetEditor">
        <short>Write specifier for Editor</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetEditor.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetFixedCols">
        <short>Write specifier for FixedCols</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetFixedCols.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetFixedRows">
        <short>Write specifier for FixedRows</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetFixedRows.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetFocusColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetFocusColor.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetGridLineColor">
        <short>Write specifier for GridLineColor</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetGridLineColor.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetGridLineStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetGridLineStyle.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetGridLineWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetGridLineWidth.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetLeftCol">
        <short>Write specifier for LeftCol</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetLeftCol.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetOptions">
        <short>Write specifier for Options</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetOptions.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetRow">
        <short>Write specifier for Row</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetRow.Valor">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetRowCount">
        <short>Write specifier for RowCount</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetRowCount.Valor">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetRowheights">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetRowheights.Arow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetRowheights.Avalue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetScrollBars">
        <short>Write specifier for ScrollBars</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetScrollBars.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetSelectActive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetSelectActive.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetSelection.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetTopRow">
        <short>Write specifier for TopRow</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetTopRow.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.TryScrollTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.TryScrollTo.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.TryScrollTo.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.UpdateScrollBarPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.UpdateScrollBarPos.Which">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.UpdateSelectionRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.WriteColWidths">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WriteColWidths.Writer">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.WriteRowHeights">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WriteRowHeights.Writer">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.WMEraseBkgnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WMEraseBkgnd.message">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.WMGetDlgCode">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WMGetDlgCode.Msg">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.WMChar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WMChar.message">
        <short/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TCustomGrid.fGridState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.AutoAdjustColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.AutoAdjustColumn.aCol">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.BeforeMoveSelection">
        <short>Before move selection method.</short>
        <descr>This method is called from <i>TCustomGrid.MoveExtend</i> method whenever the current grid cursor location is about to change. The destination column and row are specified in <i>DCol</i> and <i>DRow</i> parameters respectively. 

The new location is known to be a valid selectable cell (see <link id="TCustomGrid.SelectCell"/>
 ), and is given in absolute cell coordinates. At this point the current grid location has not changed and can be retrieved with Col and Row properties.

The purpose of this method is to call event handler <i>OnBeforeSelection</i>.</descr>
        <seealso>
          <link id="TCustomGrid.MoveExtend"/>
          <link id="TCustomDrawGrid.OnBeforeSelection"/>
        </seealso>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.BeforeMoveSelection.DCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.BeforeMoveSelection.DRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.CalcAutoSizeColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CalcAutoSizeColumn.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CalcAutoSizeColumn.AMin">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CalcAutoSizeColumn.AMax">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CalcAutoSizeColumn.APriority">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.CalcFocusRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CalcFocusRect.ARect">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.CellClick">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CellClick.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CellClick.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.CheckLimits">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckLimits.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckLimits.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ColRowDeleted">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowDeleted.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowDeleted.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ColRowExchanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowExchanged.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowExchanged.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowExchanged.WithIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ColRowMoved">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowMoved.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowMoved.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowMoved.ToIndex">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.ColRowToOffset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.ColRowToOffset.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowToOffset.IsCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowToOffset.Fisical">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowToOffset.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowToOffset.Ini">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowToOffset.Fin">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ColWidthsChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.CreateWnd">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.CreateParams">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CreateParams.Params">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DblClick">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DefineProperties">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DefineProperties.Filer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DestroyHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoExit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoEnter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoOnChangeBounds">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoSetBounds">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoSetBounds.ALeft">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoSetBounds.ATop">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoSetBounds.AWidth">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoSetBounds.AHeight">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawBackGround">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawBorder">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawByRows">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCell.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCell.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCell.aState">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawCellGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCellGrid.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCellGrid.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCellGrid.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCellGrid.astate">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawColRowMoving">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawEdges">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawFocusRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawFocusRect.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawFocusRect.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawFocusRect.ARect">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawRow.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.EditordoGetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.EditordoSetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.EditorCanAcceptKey">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.EditorCanAcceptKey.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorCanAcceptKey.ch">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.EditorIsReadOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.EditorIsReadOnly.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.GetAutoFillColumnInfo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetAutoFillColumnInfo.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetAutoFillColumnInfo.aMin">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetAutoFillColumnInfo.aMax">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetAutoFillColumnInfo.aPriority">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetFixedcolor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetFixedcolor.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetSelectedColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetSelectedColor.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetEditMask">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetEditMask.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetEditMask.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetEditMask.ARow">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetEditText.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetEditText.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetEditText.ARow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetEditText.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetEditText.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetEditText.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.HeaderClick">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.HeaderClick.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.HeaderClick.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.HeaderSized">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.HeaderSized.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.HeaderSized.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.InvalidateCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateCell.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.InvalidateCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateCell.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateCell.Redraw">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.InvalidateCol">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateCol.ACol">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.InvalidateGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.InvalidateRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateRow.ARow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.KeyDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.KeyDown.Key">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.KeyDown.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.KeyUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.KeyUp.Key">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.KeyUp.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.LoadContent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.LoadContent.cfg">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.LoadContent.Version">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.MouseDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseDown.Button">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseDown.Shift">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseDown.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseDown.Y">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.MouseMove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseMove.Shift">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseMove.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseMove.Y">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.MouseUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseUp.Button">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseUp.Shift">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseUp.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseUp.Y">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.MoveExtend">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.MoveExtend.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveExtend.Relative">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveExtend.DCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveExtend.DRow">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.MoveNextAuto">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.MoveNextAuto.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.MoveNextSelectable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.MoveNextSelectable.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveNextSelectable.Relative">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveNextSelectable.DCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveNextSelectable.DRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.MoveSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.OffsetToColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.OffsetToColRow.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.OffsetToColRow.IsCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.OffsetToColRow.Fisical">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.OffsetToColRow.Offset">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.OffsetToColRow.Rest">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.Paint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.PrepareCanvas">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.PrepareCanvas.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.PrepareCanvas.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.PrepareCanvas.aState">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ProcessEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ProcessEditor.LastEditor">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ProcessEditor.DCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ProcessEditor.DRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ProcessEditor.WasVis">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ResetOffset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ResetOffset.chkCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ResetOffset.ChkRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.RowHeightsChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SaveContent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SaveContent.cfg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ScrollBarRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarRange.Which">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarRange.aRange">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarRange.aPage">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ScrollBarPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarPosition.Which">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarPosition.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ScrollBarPage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarPage.Which">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarPage.aPage">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ScrollBarShow">
        <short>ScrollBarShow method</short>
        <descr>Change the appearance of the scrollbars in the grid.

'Which' can be any of : SB_BOTH, SB_VERT, SB_HORZ
'aValue' can be True or False</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarShow.Which">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarShow.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.ScrollBarAutomatic">
        <short>ScrollBarAutomatic method</short>
        <descr>Check if scrollbars are shown automatically by the grid or not.

'Which' can be any of : SB_BOTH, SB_VERT, SB_HORZ</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.ScrollBarAutomatic.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarAutomatic.Which">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SelectEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.SelectCell">
        <short>Is called if a grid cell is highlighted.</short>
        <descr>
          <p>The SelectCell  method is called if a grid cell will be highlighted.</p>
          <p>The <i>aCol</i> and <i>aRow</i> parameters contain the column and the row of the highlighted cell. </p>
          <p>Component developers may use the <i>SelectCell</i> method to react on focus changes. The <i>Result</i> is true if the cell is allowed to be selected.
Application developers should use the <link id="TCustomGrid.SelectCell.OnSelectCell">OnSelectCell</link> event instead.</p>
        </descr>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.SelectCell.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SelectCell.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SelectCell.ARow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SetBorderStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetBorderStyle.NewStyle">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SetFixedcolor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetFixedcolor.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SetSelectedColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetSelectedColor.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SizeChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SizeChanged.OldColCount">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SizeChanged.OldRowCount">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.Sort">
        <short>Sort method</short>
        <descr>Method to sort all items in the grid</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.Sort.ColSorting">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.Sort.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.Sort.IndxFrom">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.Sort.IndxTo">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.TopLeftChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.TryMoveSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.TryMoveSelection.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.TryMoveSelection.Relative">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.TryMoveSelection.DCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.TryMoveSelection.DRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.UpdateHorzScrollBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.UpdateHorzScrollBar.aVisible">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.UpdateHorzScrollBar.aRange">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.UpdateHorzScrollBar.aPage">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.UpdateVertScrollbar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.UpdateVertScrollbar.aVisible">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.UpdateVertScrollbar.aRange">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.UpdateVertScrollbar.aPage">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.VisualChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.WMHScroll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WMHScroll.message">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.WMVScroll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WMVScroll.message">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.WndProc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WndProc.TheMessage">
        <short/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.AutoAdvance">
        <short>Automatically advance down the grid on successive mouse clicks</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.AutoFillColumns">
        <short>Automatically fill columns with default values if nothing else specified</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.BorderStyle">
        <short>The available border styles for this sort of control</short>
        <descr>Only a restricted series of options is available: none or a single border.
</descr>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.Col">
        <short>Current column index.</short>
        <descr>Col property holds the column index of the current grid cell cursor. The current grid column can be changed programatically by setting a new value to this property.</descr>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.ColCount">
        <short>Number of columns of the grid.</short>
        <descr>This is the number of columns in the grid, including fixed and normal columns.</descr>
        <seealso>
          <link id="TCustomGrid.Col"/>
          <link id="TCustomGrid.FixedCols"/>
          <link id="TCustomGrid.ColWidths"/>
        </seealso>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.ColWidths">
        <short>Column widths for the grid.</short>
        <descr>
          <p>The column is specified with the <i>aCol</i> parameter. The <i>aCol</i> parameter must fall within the valid index range of 0 to <link id="TCustomGrid.ColWidths.ColCoun">ColCount</link>-1. </p>
          <p>The return value of the property is the width of this column, measured in pixels. </p>
          <p>The initial width of a newly created column is specified with the <link id="TCustomGrid.ColWidths.DefaultColWidth">DefaultColWidth</link> property. After that the user may redefine this value. </p>
          <p>If the <link id="TCustomGrid.ColWidths.Options">Options</link> property includes the appropriate value, the column width may also be changed by the user at runtime.</p>
        </descr>
        <seealso>
          <link id="TCustomGrid.RowHeights"/>
        </seealso>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColWidths.aCol">
        <short/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.DefaultColWidth">
        <short>Default value for the width of newly created grid columns.</short>
        <descr>
          <p>If new columns of the grid are created by changing the <link id="TCustomGrid.DefaultColWidth.ColCount">ColCount</link> property, the width of these new columns will be set to the value of the <i>DefaultColWidth</i> property. </p>
          <p>After that the user may redefine this value. If the <link id="TCustomGrid.DefaultColWidth.Options">Options</link> property includes the appropriate value, the column width may also be changed by the user at runtime.</p>
        </descr>
        <seealso>
          <link id="TCustomGrid.DefaultRowHeight"/>
        </seealso>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.DefaultRowHeight">
        <short>Default value for the height of newly created grid rows.</short>
        <descr>
          <p>If new rows of the grid are created by changing the <link id="TCustomGrid.DefaultRowHeight.RowCount">RowCount</link> property, the height of these new rows will be set to the value of the <i>DefaultRowHeight</i>  property. </p>
          <p>After that the user may redefine this value. If the <link id="TCustomGrid.DefaultRowHeight.Options">Options</link> property includes the appropriate value, the row height may also be changed by the user at runtime.</p>
        </descr>
        <seealso>
          <link id="TCustomGrid.DefaultColWidth"/>
        </seealso>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.DefaultDrawing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.DefaultTextStyle">
        <short>Default style for displaying text - includes alignment, layout, single or multi-lines</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.DragDx">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.Editor">
        <short>The editor to be used for modifying information in the cells of the grid</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.EditorMode">
        <short>Is grid ready to accept edits? (EditorMode True)</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.EditorKey">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.EditorShowing">
        <short>Is the editor for the grid displayed?</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.FixedCols">
        <short>Number of the fixed columns of the grid.</short>
        <descr>
          <p>Contains the fixed column count of a grid. </p>
          <p>Fixed columns are normally used for headings.</p>
        </descr>
        <seealso>
          <link id="TCustomGrid.FixedRows"/>
          <link id="TCustomGrid.ColCount"/>
        </seealso>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.FixedRows">
        <short>Number of the fixed rows of the grid.</short>
        <descr>
          <p>Contains the fixed row count of a grid. </p>
          <p>Fixed rows are normally used for headings.</p>
        </descr>
        <seealso>
          <link id="TCustomGrid.RowCount"/>
          <link id="TCustomGrid.FixedCols"/>
        </seealso>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.FixedColor">
        <short>The color for the fixed cells of the grid.</short>
        <descr>The color used by headings.</descr>
        <seealso>
          <link id="TCustomGrid.FixedColor"/>
          <link id="TCustomGrid.FixedRows"/>
        </seealso>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.Flat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.FocusColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.FocusRectVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.GCache">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.GridHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.GridLineColor">
        <short>Colour to be used for GridLines</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.GridLineStyle">
        <short>Style to be used for GridLines</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.GridLineWidth">
        <short>Width (thickness) of GridLines</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.GridWidth">
        <short>Width of the whole Grid</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.LeftCol">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.Options">
        <short>The options available for use in this grid</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.Row">
        <short>The current row (record) within the grid</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.RowCount">
        <short>Number of rows in the grid</short>
        <descr>This is the number of rows in the grid, including fixed and normal rows.</descr>
        <seealso>
          <link id="TCustomGrid.Row"/>
          <link id="TCustomGrid.RowHeights"/>
          <link id="TCustomGrid.RowCount"/>
        </seealso>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.RowHeights">
        <short>The row heights for the grid.</short>
        <descr>
          <p>The row is specified with the <i>aRow</i> parameter. The <i>aRow</i> parameter must fall within the valid index range of 0 to <link id="TCustomGrid.RowHeights.RowCount">RowCount</link>-1.</p>
          <p>The return value of the property is the height of this row, measured in pixels.</p>
          <p>The initial height of a newly created row is specified with the <link id="TCustomGrid.RowHeights.DefaultRowHeight">DefaultRowHeight</link> property. After that the user may redefine this value. If the <link id="TCustomGrid.RowHeights.Options">Options</link> property includes the appropriate value, the row height may also be changed by the user at runtime.</p>
        </descr>
        <seealso>
          <link id="TCustomGrid.ColWidths"/>
        </seealso>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.RowHeights.aRow">
        <short/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.SaveOptions">
        <short>The set of options for saving information from the grid (design, attributes, content or position)</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.SelectActive">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.SelectedColor">
        <short>Colour to be used for selected cells</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.Selection">
        <short>The current selection (rows and columns) in the grid</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.ScrollBars">
        <short>The ScrollBars to be used with this grid</short>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.TopRow">
        <short>The first row (record) in the grid</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.VisibleColCount">
        <short>The number of visible columns</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.VisibleRowCount">
        <short>The number of visible rows</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.OnBeforeSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.OnCompareCells">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.OnPrepareCanvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.OnDrawCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.OnSelection">
        <short>Event handler for when a grid cell is highlighted.</short>
        <descr>The Col and Row parameters contain the column and the row of the highlighted cell. 

Application developers may use the OnSelection and OnBeforeSelection events to react on focus changes. Component developers should use the  method instead.
</descr>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.OnSelectEditor">
        <short>Event handler for when the editor is selected</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.OnTopLeftChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomGrid.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TCustomGrid.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.Invalidate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.AutoAdjustColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.BeginUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomGrid.CellRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.CellRect.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CellRect.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CellRect.ARow">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.Clear">
        <short>clear all cells from the grid.</short>
        <descr>
          <p>Reset Column and Row counts to 0. Grid is completely emptied.</p>
          <p>Compatibility: This property applies to Lazarus grids only , under Delphi/Kylix a grid can't be completly emptied.</p>
        </descr>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.DeleteColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DeleteColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DeleteColRow.index">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.EditorExit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorExit.Sender">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.EditorKeyDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorKeyDown.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorKeyDown.Key">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorKeyDown.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.EditorKeyPress">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorKeyPress.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorKeyPress.Key">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.EditorKeyUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorKeyUp.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorKeyUp.key">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorKeyUp.shift">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EndUpdate.UO">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.EndUpdate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EndUpdate.FullUpdate">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.ExchangeColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ExchangeColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ExchangeColRow.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ExchangeColRow.WithIndex">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomGrid.IscellSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.IscellSelected.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.IscellSelected.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.IscellSelected.aRow">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomGrid.IscellVisible">
        <short>Finds out whether a particular cell is visible</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.IscellVisible.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.IscellVisible.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.IscellVisible.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.LoadFromFile">
        <short>Load the grid data from a file with the specified name</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.LoadFromFile.FileName">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomGrid.MouseToCell">
        <short>Convert mouse coordinates to the position of a cell in the grid</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.MouseToCell.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseToCell.Mouse">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.MouseToCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseToCell.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseToCell.Y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseToCell.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseToCell.ARow">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomGrid.MouseToLogcell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.MouseToLogcell.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseToLogcell.Mouse">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomGrid.MouseToGridZone">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.MouseToGridZone.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseToGridZone.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseToGridZone.Y">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseToGridZone.CellCoords">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.MoveColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveColRow.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveColRow.ToIndex">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.SaveToFile">
        <short>Save the data in the grid to a file with specified name</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SaveToFile.FileName">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.SortColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SortColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SortColRow.index">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.SortColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SortColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SortColRow.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SortColRow.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SortColRow.ToIndex">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TGetEditEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGetEditEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGetEditEvent.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGetEditEvent.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGetEditEvent.Value">
        <short/>
      </element>
      <!-- procedure type Visibility: default -->
      <element name="TSetEditEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSetEditEvent.Sender">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSetEditEvent.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSetEditEvent.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSetEditEvent.Value">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TDrawGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDrawGrid.FOnColRowDeleted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDrawGrid.FOnColRowExchanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDrawGrid.FOnColRowMoved">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDrawGrid.FOnGetEditMask">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDrawGrid.FOnGetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDrawGrid.FOnHeaderClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDrawGrid.FOnHeaderSized">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDrawGrid.FOnSelectCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TDrawGrid.FOnSetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TDrawGrid.FGrid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.CalcCellExtent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.CalcCellExtent.acol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.CalcCellExtent.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.CalcCellExtent.aRect">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.ColRowDeleted">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.ColRowDeleted.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.ColRowDeleted.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.ColRowExchanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.ColRowExchanged.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.ColRowExchanged.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.ColRowExchanged.WithIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.ColRowMoved">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.ColRowMoved.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.ColRowMoved.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.ColRowMoved.ToIndex">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDrawGrid.CreateVirtualGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDrawGrid.CreateVirtualGrid.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.DrawCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DrawCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DrawCell.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DrawCell.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DrawCell.aState">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.DrawFocusRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DrawFocusRect.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DrawFocusRect.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DrawFocusRect.ARect">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.HeaderClick">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.HeaderClick.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.HeaderClick.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.HeaderSized">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.HeaderSized.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.HeaderSized.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.GetAutoFillColumnInfo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.GetAutoFillColumnInfo.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.GetAutoFillColumnInfo.aMin">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.GetAutoFillColumnInfo.aMax">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.GetAutoFillColumnInfo.aPriority">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDrawGrid.GetEditMask">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDrawGrid.GetEditMask.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.GetEditMask.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.GetEditMask.aRow">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDrawGrid.GetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDrawGrid.GetEditText.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.GetEditText.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.GetEditText.aRow">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TDrawGrid.SelectCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TDrawGrid.SelectCell.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.SelectCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.SelectCell.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.SetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.SetColor.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.SetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.SetEditText.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.SetEditText.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.SetEditText.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TDrawGrid.SizeChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.SizeChanged.OldColCount">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.SizeChanged.OldRowCount">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TDrawGrid.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TDrawGrid.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TDrawGrid.DefaultDrawCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DefaultDrawCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DefaultDrawCell.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DefaultDrawCell.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TDrawGrid.DefaultDrawCell.aState">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.Canvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.Col">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.ColWidths">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.Editor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.EditorMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.FocusColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.FocusRectVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.GridHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.GridLineColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.GridLineStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.GridWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.LeftCol">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.Row">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.RowHeights">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.SaveOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.SelectedColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.Selection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TDrawGrid.TopRow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.AutoAdvance">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.BorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.ColCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.DefaultColWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.DefaultDrawing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.DefaultRowHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.FixedColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.FixedCols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.FixedRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.Flat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.GridLineWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.Options">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.RowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.ScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.VisibleColCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.VisibleRowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnBeforeSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnColRowDeleted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnColRowExchanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnColRowMoved">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnCompareCells">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnDrawCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnGetEditMask">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnGetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnHeaderClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnHeaderSized">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnKeyPress">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnKeyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnPrepareCanvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnSelectEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnSelectCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnSetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnTopleftChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TStringGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringGrid.FDefEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TStringGrid.GetCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGrid.GetCells.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.GetCells.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.GetCells.ARow">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TStringGrid.GetCols">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGrid.GetCols.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.GetCols.index">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TStringGrid.GetObjects">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGrid.GetObjects.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.GetObjects.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.GetObjects.ARow">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TStringGrid.GetRows">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGrid.GetRows.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.GetRows.index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TStringGrid.ReadCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.ReadCells.Reader">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TStringGrid.SetCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetCells.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetCells.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetCells.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TStringGrid.SetCols">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetCols.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetCols.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TStringGrid.SetObjects">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetObjects.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetObjects.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetObjects.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TStringGrid.SetRows">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetRows.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetRows.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TStringGrid.WriteCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.WriteCells.Writer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGrid.AutoAdjustColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.AutoAdjustColumn.aCol">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGrid.CalcCellExtent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.CalcCellExtent.acol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.CalcCellExtent.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.CalcCellExtent.aRect">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGrid.DefineProperties">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.DefineProperties.Filer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGrid.DrawCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.DrawCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.DrawCell.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.DrawCell.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.DrawCell.aState">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringGrid.GetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGrid.GetEditText.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.GetEditText.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.GetEditText.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGrid.LoadContent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.LoadContent.cfg">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.LoadContent.Version">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGrid.SaveContent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SaveContent.cfg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGrid.SelectEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGrid.SetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetEditText.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetEditText.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.SetEditText.aValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TStringGrid.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.Create.AOWner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TStringGrid.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TStringGrid.AutoSizeColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TStringGrid.Cells">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.Cells.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.Cells.ARow">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TStringGrid.Cols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.Cols.index">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TStringGrid.Objects">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.Objects.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.Objects.ARow">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TStringGrid.Rows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGrid.Rows.index">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="DebugRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DebugRect.S">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DebugRect.R">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="DebugPoint">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DebugPoint.S">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DebugPoint.P">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="DrawRubberRect">
        <short>Draw rubberband rect</short>
        <descr>Draw a rubberband around the provided cellrect
Segunda linea de texto</descr>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DrawRubberRect.Canvas">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DrawRubberRect.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="DrawRubberRect.Color">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="register">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="DEFCOLWIDTH">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="DEFROWHEIGHT">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goFixedRowNumbering">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goScrollKeepVisible">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goHeaderHotTracking">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridOption.goHeaderPushedLook">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridDrawState.gdHot">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridDrawState.gdPushed">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridState.gsHeaderClicking">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridZone.gzInvalid">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TGridZoneSet">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TAutoAdvance.aaRightDown">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TAutoAdvance.aaLeftDown">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TAutoAdvance.aaRightUp">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TAutoAdvance.aaLeftUp">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TColumnButtonStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TColumnButtonStyle.cbsAuto">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TColumnButtonStyle.cbsEllipsis">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TColumnButtonStyle.cbsNone">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TColumnButtonStyle.cbsPickList">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TColumnButtonStyle.cbsCheckboxColumn">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TTitleStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTitleStyle.tsLazarus">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTitleStyle.tsStandard">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TTitleStyle.tsNative">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TGridFlagsOption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridFlagsOption.gfEditorUpdateLock">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridFlagsOption.gfNeedsSelectActive">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridFlagsOption.gfEditorTab">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridFlagsOption.gfRevEditorTab">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridFlagsOption.gfVisualChange">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TGridFlagsOption.gfDefRowHeightChanged">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TGridFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TSortOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TSortOrder.soAscending">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TSortOrder.soDescending">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TGridColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringCellEditor.FCol">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringCellEditor.FRow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringCellEditor.WndProc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringCellEditor.WndProc.TheMessage">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TStringCellEditor.EditingDone">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TButtonCellEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TButtonCellEditor.FGrid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TButtonCellEditor.FCol">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TButtonCellEditor.FRow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TButtonCellEditor.msg_SetGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TButtonCellEditor.msg_SetGrid.Msg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TButtonCellEditor.msg_SetPos">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TButtonCellEditor.msg_SetPos.Msg">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TButtonCellEditor.Col">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TButtonCellEditor.Row">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TPickListCellEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TPickListCellEditor.FGrid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TPickListCellEditor.FCol">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TPickListCellEditor.FRow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TPickListCellEditor.WndProc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPickListCellEditor.WndProc.TheMessage">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TPickListCellEditor.KeyDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPickListCellEditor.KeyDown.Key">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPickListCellEditor.KeyDown.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TPickListCellEditor.DropDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TPickListCellEditor.CloseUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TPickListCellEditor.Select">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TPickListCellEditor.msg_GetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPickListCellEditor.msg_GetValue.Msg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TPickListCellEditor.msg_SetGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPickListCellEditor.msg_SetGrid.Msg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TPickListCellEditor.msg_SetValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TPickListCellEditor.msg_SetValue.Msg">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TPickListCellEditor.EditingDone">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TPickListCellEditor.BorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnDrawCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnDrawCell.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectCellEvent.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectCellEvent.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectEvent.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnSelectEvent.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSelectEditorEvent.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TSelectEditorEvent.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnPrepareCanvasEvent.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TOnPrepareCanvasEvent.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TVirtualGrid.InsertColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.InsertColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TVirtualGrid.InsertColRow.Index">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TGridColumnTitle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumnTitle.FColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumnTitle.FCaption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumnTitle.FColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumnTitle.FAlignment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumnTitle.FFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumnTitle.FIsDefaultTitleFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumnTitle.FLayout">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumnTitle.FontChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumnTitle.FontChanged.Sender">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.GetAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.GetAlignment.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.GetCaption">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.GetCaption.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.GetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.GetColor.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.GetFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.GetFont.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.GetLayout">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.GetLayout.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.IsAlignmentStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.IsAlignmentStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.IsCaptionStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.IsCaptionStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.IsColorStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.IsColorStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.IsFontStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.IsFontStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumnTitle.IsLayoutStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.IsLayoutStored.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumnTitle.SetAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumnTitle.SetAlignment.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumnTitle.SetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumnTitle.SetColor.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumnTitle.SetFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumnTitle.SetFont.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumnTitle.SetLayout">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumnTitle.SetLayout.AValue">
        <short/>
      </element>
      <!-- property Visibility: private -->
      <element name="TGridColumnTitle.IsDefaultFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumnTitle.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumnTitle.Assign.Source">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumnTitle.GetDefaultCaption">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.GetDefaultCaption.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumnTitle.GetDefaultAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.GetDefaultAlignment.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumnTitle.GetDefaultColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.GetDefaultColor.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumnTitle.GetDefaultLayout">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.GetDefaultLayout.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumnTitle.SetCaption">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumnTitle.SetCaption.AValue">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TGridColumnTitle.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumnTitle.Create.TheColumn">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TGridColumnTitle.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TGridColumnTitle.FillTitleDefaultFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TGridColumnTitle.IsDefault">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumnTitle.IsDefault.Result">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TGridColumnTitle.Column">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumnTitle.Alignment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumnTitle.Layout">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumnTitle.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumnTitle.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumnTitle.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FButtonStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FDropDownRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FTitle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FWidthChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FAlignment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FLayout">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FisDefaultFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FPickList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FMinSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FMaxSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumn.FSizePriority">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.FontChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.FontChanged.Sender">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetAlignment.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetColor.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetExpanded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetExpanded.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetFont.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetGrid.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetLayout">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetLayout.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetMaxSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetMaxSize.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetMinSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetMinSize.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetSizePriority">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetSizePriority.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetPickList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetPickList.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetReadOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetReadOnly.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetVisible.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.GetWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetWidth.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsAlignmentStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsAlignmentStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsColorStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsColorStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsFontStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsFontStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsLayoutStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsLayoutStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsMinSizeStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsMinSizeStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsMaxSizeStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsMaxSizeStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsReadOnlyStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsReadOnlyStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsSizePriorityStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsSizePriorityStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsVisibleStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsVisibleStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumn.IsWidthStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsWidthStored.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetAlignment.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetButtonStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetButtonStyle.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetColor.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetExpanded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetExpanded.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetFont.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetLayout">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetLayout.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetMaxSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetMaxSize.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetMinSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetMinSize.Avalue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetPickList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetPickList.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetReadOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetReadOnly.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetSizePriority">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetSizePriority.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetTitle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetTitle.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetVisible.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumn.SetWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.SetWidth.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumn.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.Assign.Source">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDisplayName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDisplayName.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDefaultAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDefaultAlignment.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDefaultColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDefaultColor.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDefaultLayout">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDefaultLayout.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDefaultMaxSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDefaultMaxSize.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDefaultMinSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDefaultMinSize.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDefaultReadOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDefaultReadOnly.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDefaultSizePriority">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDefaultSizePriority.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDefaultVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDefaultVisible.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.GetDefaultWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.GetDefaultWidth.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumn.ColumnChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumn.AllColumnsChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TGridColumn.CreateTitle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.CreateTitle.Result">
        <short/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TGridColumn.IsDefaultFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TGridColumn.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumn.Create.ACollection">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TGridColumn.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TGridColumn.FillDefaultFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TGridColumn.IsDefault">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumn.IsDefault.Result">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TGridColumn.Grid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TGridColumn.WidthChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.Alignment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.ButtonStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.DropDownRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.Expanded">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.Layout">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.MinSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.MaxSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.PickList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.ReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.SizePriority">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.Title">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TGridColumn.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- record type Visibility: default -->
      <element name="TGridPropertyBackup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridPropertyBackup.ValidData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridPropertyBackup.FixedRowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridPropertyBackup.FixedColCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TGridColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TGridColumns.FGrid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumns.GetColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumns.GetColumn.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.GetColumn.Index">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumns.GetEnabled">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumns.GetEnabled.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TGridColumns.SetColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.SetColumn.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.SetColumn.Value">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TGridColumns.GetVisibleCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumns.GetVisibleCount.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumns.Update">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.Update.Item">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumns.TitleFontChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumns.FontChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumns.RemoveColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.RemoveColumn.Index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumns.MoveColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.MoveColumn.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.MoveColumn.ToIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumns.ExchangeColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.ExchangeColumn.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.ExchangeColumn.WithIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TGridColumns.InsertColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.InsertColumn.Index">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TGridColumns.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.Create.AGrid">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.Create.aItemClass">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TGridColumns.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumns.Add.Result">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TGridColumns.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TGridColumns.RealIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumns.RealIndex.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.RealIndex.Index">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TGridColumns.IndexOf">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumns.IndexOf.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.IndexOf.Column">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TGridColumns.IsDefault">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumns.IsDefault.Result">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TGridColumns.HasIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumns.HasIndex.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.HasIndex.Index">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TGridColumns.VisibleIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TGridColumns.VisibleIndex.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.VisibleIndex.Index">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TGridColumns.Grid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TGridColumns.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TGridColumns.Items.Index">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TGridColumns.VisibleCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TGridColumns.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ValidRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ValidCols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.HotCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.HotCellPainted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.HotGridZone">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ClickCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ClickMouse">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.PushedCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.PushedMouse">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: default -->
      <element name="TGridDataCache.ClickCellPushed">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FAlternateColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FAutoEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FBorderColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FEditorHidingCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FExtendedSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FFastEditing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FAltColorStartNormal">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FSortOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FTitleStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOnEditButtonClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FOnPickListSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FFixedHotColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FUseXORFeatures">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FTitleFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FLastFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FTitleFontIsDefault">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FColumns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FButtonEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FStringEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FPickListEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FExtendedColSizing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FExtendedRowSizing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FUpdatingAutoFillCols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FPrevLine">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FPrevValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FGridBorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FGridFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FGridPropBackup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FStrictSort">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FIgnoreClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FAllowOutboundEvents">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FHeaderHotZones">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomGrid.FHeaderPushZones">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.CancelSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.CheckIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckIndex.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckIndex.Index">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetSelectedColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetSelectedColumn.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.IsDefRowHeightStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.IsDefRowHeightStored.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetAlternateColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetAlternateColor.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetBorderColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetBorderColor.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetColumns.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetEditorOptions">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetEditorOptions.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetEditorBorderStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetEditorBorderStyle.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetAltColorStartNormal">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetAltColorStartNormal.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetTitleFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetTitleFont.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetTitleStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetTitleStyle.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.SetUseXorFeatures">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetUseXorFeatures.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.DrawXORVertLine">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawXORVertLine.X">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.DrawXORHorzLine">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawXORHorzLine.Y">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.FixPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColumns.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetEditorBorderStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetEditorBorderStyle.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.GetBorderWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetBorderWidth.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.HeadersMouseMove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.HeadersMouseMove.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.HeadersMouseMove.Y">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.InternalNeedBorder">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.InternalNeedBorder.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.InternalSetColWidths">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InternalSetColWidths.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InternalSetColWidths.aValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.InternalSetFixedCols">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InternalSetFixedCols.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.InternalUpdateColumnWidths">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.InvalidateMovement">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateMovement.DCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateMovement.DRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateMovement.OldRange">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.IsAltColorStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.IsAltColorStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.IsColumnsStored">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.IsColumnsStored.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomGrid.IsPushCellActive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.IsPushCellActive.Result">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.OnTitleFontChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.OnTitleFontChanged.Sender">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.ReadColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ReadColumns.Reader">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.ResetHotCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.ResetPushedCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ResetPushedCell.ResetColRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetCol.AValue">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetColCount.AValue">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetDefColWidth.AValue">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetDefRowHeight.AValue">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetRow.AValue">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetRowCount.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.UpdateCachedSizes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.UpdateSBVisibility">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.UpdateSizes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomGrid.WriteColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WriteColumns.Writer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.AdjustDefaultRowHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.CanEditShow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.CanEditShow.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.CanGridAcceptKey">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.CanGridAcceptKey.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CanGridAcceptKey.Key">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CanGridAcceptKey.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.CheckLimitsWithError">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckLimitsWithError.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckLimitsWithError.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.CMMouseLeave">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CMMouseLeave.Message">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ColRowInserted">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowInserted.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowInserted.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowToOffset.Relative">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowToOffset.StartPos">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColRowToOffset.EndPos">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.ColumnIndexFromGridColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.ColumnIndexFromGridColumn.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColumnIndexFromGridColumn.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.ColumnFromGridColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.ColumnFromGridColumn.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColumnFromGridColumn.Column">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ColumnsChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ColumnsChanged.aColumn">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.CreateColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.CreateColumns.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.CheckNewCachedSizes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CheckNewCachedSizes.AGCache">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.Click">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.DoCompareCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.DoCompareCells.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoCompareCells.Acol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoCompareCells.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoCompareCells.Bcol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoCompareCells.BRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoCopyToClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoCutToClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoEditorHide">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoEditorShow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.DoMouseWheelDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.DoMouseWheelDown.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoMouseWheelDown.Shift">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoMouseWheelDown.MousePos">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.DoMouseWheelUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.DoMouseWheelUp.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoMouseWheelUp.Shift">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoMouseWheelUp.MousePos">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoOPDeleteColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPDeleteColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPDeleteColRow.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoOPExchangeColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPExchangeColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPExchangeColRow.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPExchangeColRow.WithIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoOPInsertColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPInsertColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPInsertColRow.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoOPMoveColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPMoveColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPMoveColRow.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoOPMoveColRow.ToIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoPasteFromClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DoPrepareCanvas">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoPrepareCanvas.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoPrepareCanvas.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DoPrepareCanvas.aState">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawAllRows">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawCellText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCellText.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCellText.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCellText.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCellText.aState">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawCellText.aText">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.DrawColumnText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawColumnText.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawColumnText.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawColumnText.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.DrawColumnText.aState">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.EditButtonClicked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditButtonClicked.Sender">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.EditorLocked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.EditorLocked.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.EditorShowInCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorShowInCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorShowInCell.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.EditorWidthChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorWidthChanged.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorWidthChanged.aWidth">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.FixedGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.FixedGrid.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.FontChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.FontChanged.Sender">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetColumnAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColumnAlignment.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnAlignment.Column">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnAlignment.ForTitle">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetColumnColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColumnColor.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnColor.Column">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnColor.ForTitle">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetColumnFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColumnFont.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnFont.Column">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnFont.ForTitle">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetColumnLayout">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColumnLayout.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnLayout.Column">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnLayout.ForTitle">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetColumnReadonly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColumnReadonly.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnReadonly.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetColumnTitle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColumnTitle.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnTitle.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetColumnWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetColumnWidth.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetColumnWidth.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetDeltaMoveNext">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetDeltaMoveNext.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetDeltaMoveNext.Inverse">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetDeltaMoveNext.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetDeltaMoveNext.ARow">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetDefaultColumnAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnAlignment.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnAlignment.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetDefaultColumnWidth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnWidth.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnWidth.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetDefaultColumnLayout">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnLayout.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnLayout.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetDefaultColumnReadOnly">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnReadOnly.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnReadOnly.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetDefaultColumnTitle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnTitle.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetDefaultColumnTitle.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetDefaultEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetDefaultEditor.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetDefaultEditor.Column">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetDefaultRowHeight">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetDefaultRowHeight.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetScrollBarPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetScrollBarPosition.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetScrollBarPosition.Which">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.GetSBVisibility">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetSBVisibility.HsbVisible">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetSBVisibility.VsbVisible">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.GetSBRanges">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetSBRanges.HsbVisible">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetSBRanges.VsbVisible">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetSBRanges.HsbRange">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetSBRanges.VsbRange">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetSBRanges.HsbPage">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetSBRanges.VsbPage">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GridColumnFromColumnIndex">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GridColumnFromColumnIndex.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GridColumnFromColumnIndex.ColumnIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.InternalSetColCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InternalSetColCount.ACount">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.InvalidateRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateRange.aRange">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.InvalidateFromCol">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.InvalidateFromCol.ACol">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.InvalidateFocused">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.GetIsCellSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.GetIsCellSelected.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetIsCellSelected.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.GetIsCellSelected.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.LockEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MoveNextAuto.Inverse">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.OffsetToColRow.Index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ParentFormHandleInitialized">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.PickListItemSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.PickListItemSelected.Sender">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ResetEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ResetSizes">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ResizeColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ResizeColumn.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ResizeColumn.aWidth">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.ResizeRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ResizeRow.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ResizeRow.aHeight">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomGrid.ScrollBarIsVisible">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.ScrollBarIsVisible.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.ScrollBarIsVisible.Which">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SetCanvasFont">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetCanvasFont.aFont">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetColor.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.SetColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetColRow.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.SetColRow.ARow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.UnLockEditor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.UpdateBorderStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.WMKillFocus">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WMKillFocus.message">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomGrid.WMSetFocus">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.WMSetFocus.message">
        <short/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.AllowOutboundEvents">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.AlternateColor">
        <short>The other colour which can be used in this grid (eg for highlighting selected text etc)</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.AutoEdit">
        <short>Whether the Edit mode is automatically entered when a cell is selected</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.BorderColor">
        <short>The colour of the border for this control</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.Columns">
        <short>The properties of the columns in this grid</short>
        <descr>
          <p>The <i>Columns</i> property of a grid refers to the physical column in the table, and determines its size, shape, colour etc. It should not be confused with the COLUMNS construct frequently used in SQL programming, which refers to <i>Fields</i> of data. The contents of Fields can be displayed as Columns in a Grid, but they must be seen as separate and distinct. It is irrelevant to refer to the colour, font or width of a data field from a database, but these are all very relevant in specifying the appearance of a column in a grid.</p>
        </descr>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.EditorBorderStyle">
        <short>The border style for the editor used in this grid</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.EditorOptions">
        <short>The set of options available for the grid's editor</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.ExtendedColSizing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.ExtendedRowSizing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.ExtendedSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.FastEditing">
        <short>Is the FastEditing method being used?</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.AltColorStartNormal">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.FixedHotColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.GridFlags">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.HeaderHotZones">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.HeaderPushZones">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.InplaceEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.SelectedColumn">
        <short>The column (field) currently selected</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.StrictSort">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.TitleFont">
        <short>The font to be used in the grid's title</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.TitleStyle">
        <short>The style to be used for the grid's title</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.UseXORFeatures">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.OnEditButtonClick">
        <short>Event handler for when the Edit button is clicked</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomGrid.OnPickListSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.EditingDone">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomGrid.CellToGridZone">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.CellToGridZone.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CellToGridZone.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.CellToGridZone.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.CheckPosition">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomGrid.EditorByStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.EditorByStyle.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EditorByStyle.Style">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EndUpdate.aRefresh">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.EraseBackground">
        <short>Clear the background to the grid</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.EraseBackground.DC">
        <short/>
      </element>
      <!-- function Visibility: public -->
      <element name="TCustomGrid.MouseCoord">
        <short>Find the mouse coordinates relative to the grid origin</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomGrid.MouseCoord.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseCoord.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomGrid.MouseCoord.Y">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomGrid.SetFocus">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomGrid.SortOrder">
        <short>Order of sorting - ascending or descending</short>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCustomDrawGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnColRowDeleted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnColRowExchanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnColRowInserted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnColRowMoved">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnGetEditMask">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnGetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnHeaderClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnHeaderSized">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnSelectCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomDrawGrid.FOnSetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: protected -->
      <element name="TCustomDrawGrid.FGrid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.CalcCellExtent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.CalcCellExtent.acol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.CalcCellExtent.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.CalcCellExtent.aRect">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.ColRowDeleted">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowDeleted.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowDeleted.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.ColRowExchanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowExchanged.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowExchanged.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowExchanged.WithIndex">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.ColRowInserted">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowInserted.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowInserted.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.ColRowMoved">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowMoved.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowMoved.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ColRowMoved.ToIndex">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomDrawGrid.CreateVirtualGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomDrawGrid.CreateVirtualGrid.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.DrawCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawCell.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawCell.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawCell.aState">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.DrawCellAutonumbering">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawCellAutonumbering.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawCellAutonumbering.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawCellAutonumbering.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawCellAutonumbering.aValue">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.DrawFocusRect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawFocusRect.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawFocusRect.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DrawFocusRect.ARect">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomDrawGrid.GetEditMask">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomDrawGrid.GetEditMask.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.GetEditMask.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.GetEditMask.aRow">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomDrawGrid.GetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomDrawGrid.GetEditText.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.GetEditText.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.GetEditText.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.HeaderClick">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.HeaderClick.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.HeaderClick.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.HeaderSized">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.HeaderSized.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.HeaderSized.index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.NotifyColRowChange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.NotifyColRowChange.WasInsert">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.NotifyColRowChange.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.NotifyColRowChange.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.NotifyColRowChange.ToIndex">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomDrawGrid.SelectCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomDrawGrid.SelectCell.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SelectCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SelectCell.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.SetColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SetColor.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.SetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SetEditText.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SetEditText.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SetEditText.Value">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomDrawGrid.SizeChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SizeChanged.OldColCount">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SizeChanged.OldRowCount">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomDrawGrid.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TCustomDrawGrid.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomDrawGrid.DeleteColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DeleteColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DeleteColRow.index">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomDrawGrid.ExchangeColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ExchangeColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ExchangeColRow.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.ExchangeColRow.WithIndex">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomDrawGrid.InsertColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.InsertColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.InsertColRow.index">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomDrawGrid.MoveColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.MoveColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.MoveColRow.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.MoveColRow.ToIndex">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomDrawGrid.SortColRow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SortColRow.IsColumn">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SortColRow.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SortColRow.FromIndex">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.SortColRow.ToIndex">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomDrawGrid.DefaultDrawCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DefaultDrawCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DefaultDrawCell.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DefaultDrawCell.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomDrawGrid.DefaultDrawCell.aState">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.AllowOutboundEvents">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.BorderColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Canvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Col">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.ColWidths">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Editor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.EditorBorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.EditorMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.ExtendedColSizing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.AltColorStartNormal">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.FastEditing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.FocusColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.FocusRectVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.GridHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.GridLineColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.GridLineStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.GridWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.IsCellSelected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.LeftCol">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Row">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.RowHeights">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.SaveOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.SelectedColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.SelectedColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Selection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.StrictSort">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.TopRow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.UseXORFeatures">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.AutoAdvance">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.AutoFillColumns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.BorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.ColCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Columns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.DefaultColWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.DefaultDrawing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.DefaultRowHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.FixedColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.FixedCols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.FixedHotColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.FixedRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Flat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.GridLineWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Options">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.RowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.ScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.VisibleColCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.VisibleRowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnBeforeSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnColRowDeleted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnColRowExchanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnColRowInserted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnColRowMoved">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnCompareCells">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnDrawCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnEditButtonClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnGetEditMask">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnGetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnHeaderClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnHeaderSized">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnKeyPress">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnKeyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnMouseWheelDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnMouseWheelUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnPickListSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnPrepareCanvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnSelectEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnSelectCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnSetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomDrawGrid.OnTopleftChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.AlternateColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.AutoEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.AutoFillColumns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.Columns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.HeaderHotZones">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.HeaderPushZones">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.TitleFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.TitleStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnColRowInserted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnEditButtonClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnEditingDone">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnMouseWheelDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnMouseWheelUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnPickListSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TDrawGrid.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCustomStringGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TStringGridStrings">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringGridStrings.FGrid">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringGridStrings.FIsCol">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringGridStrings.FIndex">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TStringGridStrings.FOwner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TStringGridStrings.ConvertIndexLineCol">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGridStrings.ConvertIndexLineCol.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.ConvertIndexLineCol.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.ConvertIndexLineCol.Line">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.ConvertIndexLineCol.Col">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGridStrings.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringGridStrings.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGridStrings.Add.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Add.S">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringGridStrings.Get">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGridStrings.Get.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Get.Index">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringGridStrings.GetCount">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGridStrings.GetCount.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TStringGridStrings.GetObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TStringGridStrings.GetObject.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.GetObject.Index">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGridStrings.Put">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Put.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Put.S">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TStringGridStrings.PutObject">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.PutObject.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.PutObject.aObject">
        <short/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TStringGridStrings.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Create.aGrid">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Create.OwnerMap">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Create.aIsCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Create.aIndex">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TStringGridStrings.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TStringGridStrings.Assign">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Assign.Source">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TStringGridStrings.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Delete.Index">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TStringGridStrings.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Insert.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TStringGridStrings.Insert.S">
        <short/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomStringGrid.FModified">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomStringGrid.FColsMap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomStringGrid.FRowsMap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomStringGrid.GetCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomStringGrid.GetCells.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.GetCells.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.GetCells.ARow">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomStringGrid.GetCols">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomStringGrid.GetCols.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.GetCols.index">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomStringGrid.GetObjects">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomStringGrid.GetObjects.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.GetObjects.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.GetObjects.ARow">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomStringGrid.GetRows">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomStringGrid.GetRows.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.GetRows.index">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomStringGrid.MapFree">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.MapFree.aMap">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomStringGrid.MapGetColsRows">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomStringGrid.MapGetColsRows.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.MapGetColsRows.IsCols">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.MapGetColsRows.Index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.MapGetColsRows.AMap">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomStringGrid.ReadCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.ReadCells.Reader">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomStringGrid.SetCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetCells.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetCells.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetCells.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomStringGrid.SetCols">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetCols.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetCols.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomStringGrid.SetObjects">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetObjects.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetObjects.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetObjects.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomStringGrid.SetRows">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetRows.index">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetRows.AValue">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomStringGrid.WriteCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.WriteCells.Writer">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.AutoAdjustColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.AutoAdjustColumn.aCol">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.CalcCellExtent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.CalcCellExtent.acol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.CalcCellExtent.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.CalcCellExtent.aRect">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.DefineProperties">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DefineProperties.Filer">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomStringGrid.DoCompareCells">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomStringGrid.DoCompareCells.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DoCompareCells.Acol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DoCompareCells.ARow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DoCompareCells.Bcol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DoCompareCells.BRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.DoCopyToClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.DoCutToClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.DoPasteFromClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.DrawCell">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DrawCell.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DrawCell.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DrawCell.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DrawCell.aState">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.DrawCellAutonumbering">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DrawCellAutonumbering.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DrawCellAutonumbering.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DrawCellAutonumbering.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.DrawCellAutonumbering.aValue">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomStringGrid.GetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomStringGrid.GetEditText.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.GetEditText.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.GetEditText.aRow">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.LoadContent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.LoadContent.cfg">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.LoadContent.Version">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.Loaded">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.SaveContent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SaveContent.cfg">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.SelectionSetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SelectionSetText.TheText">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomStringGrid.SetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetEditText.aCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetEditText.aRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.SetEditText.aValue">
        <short/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomStringGrid.Modified">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomStringGrid.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Create.AOwner">
        <short/>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TCustomStringGrid.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomStringGrid.AutoSizeColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.AutoSizeColumn.aCol">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomStringGrid.AutoSizeColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomStringGrid.Clean">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Clean.CleanOptions">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Clean.aRect">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Clean.StartCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Clean.StartRow">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Clean.EndCol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Clean.EndRow">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomStringGrid.Cells">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Cells.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Cells.ARow">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomStringGrid.Cols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Cols.index">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomStringGrid.DefaultTextStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomStringGrid.EditorMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomStringGrid.ExtendedSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomStringGrid.Objects">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Objects.ACol">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Objects.ARow">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomStringGrid.Rows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomStringGrid.Rows.index">
        <short/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomStringGrid.UseXORFeatures">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TStringGrid.Modified">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.AlternateColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.AutoAdvance">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.AutoEdit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.AutoFillColumns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.BorderStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.ColCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.Columns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.DefaultColWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.DefaultDrawing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.DefaultRowHeight">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.FixedColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.FixedCols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.FixedRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.Flat">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.GridLineWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.HeaderHotZones">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.HeaderPushZones">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.Options">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.RowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.ScrollBars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.TitleFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.TitleStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.VisibleColCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.VisibleRowCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnBeforeSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnChangeBounds">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnColRowDeleted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnColRowExchanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnColRowInserted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnColRowMoved">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnCompareCells">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnDrawCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnEditButtonClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnEditingDone">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnGetEditMask">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnGetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnHeaderClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnHeaderSized">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnKeyPress">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnKeyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnMouseWheelDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnMouseWheelUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnPickListSelect">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnPrepareCanvas">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnResize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnSelectEditor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnSelection">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnSelectCell">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnSetEditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TStringGrid.OnTopLeftChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
    </module>
    <!-- Grids -->
  </package>
</fpdoc-descriptions>
