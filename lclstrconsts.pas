{  $Id$  }
{
 /***************************************************************************
                            lclstrconsts.pas
                            ----------------
     This unit contains all resource strings of the LCL (not interfaces)


 ***************************************************************************/

 ***************************************************************************
 *                                                                         *
 *   This source is free software; you can redistribute it and/or modify   *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This code is distributed in the hope that it will be useful, but      *
 *   WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU     *
 *   General Public License for more details.                              *
 *                                                                         *
 *   A copy of the GNU General Public License is available on the World    *
 *   Wide Web at <http://www.gnu.org/copyleft/gpl.html>. You can also      *
 *   obtain it by writing to the Free Software Foundation,                 *
 *   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.        *
 *                                                                         *
 ***************************************************************************
}
unit LCLStrConsts;

{$mode objfpc}{$H+}

interface

ResourceString
   // message/input dialog buttons
   rsMbYes          = '&Yes';
   rsMbNo           = '&No';
   rsMbOK           = '&OK';
   rsMbCancel       = 'Cancel';
   rsMbAbort        = 'Abort';
   rsMbRetry        = '&Retry';
   rsMbIgnore       = '&Ignore';
   rsMbAll          = '&All';
   rsMbNoToAll      = 'No to all';
   rsMbYesToAll     = 'Yes to all';
   rsMbHelp         = '&Help';
   rsMbClose        = '&Close';

   rsMtWarning      = 'Warning';
   rsMtError        = 'Error';
   rsMtInformation  = 'Information';
   rsMtConfirmation = 'Confirmation';
   rsMtCustom       = 'Custom';

   // file dialog
   rsfdOpenFile          = 'Open existing file';
   rsfdOverwriteFile     = 'Overwrite file ?';
   rsfdFileAlreadyExists = 'The file "%s" already exists.'#13'Overwrite ?';
   rsfdPathMustExist     = 'Path must exist';
   rsfdPathNoExist       = 'The path "%s" does not exist.';
   rsfdFileMustExist     = 'File must exist';
   rsfdFileNotExist      = 'The file "%s" does not exist.';
   rsfdFileReadOnlyTitle = 'File is not writable';
   rsfdFileReadOnly      = 'The file "%s" is not writable.';
   rsfdFileSaveAs        = 'Save file as';
   
   // Select color dialog
   rsSelectcolorTitle    = 'Select color';
   
   // Select font dialog
   rsSelectFontTitle     = 'Select a font';
   
   // gtk interface
   rsWarningUnremovedPaintMessages = ' WARNING: There are %s unremoved LM_'
     +'PAINT/LM_GtkPAINT message links left.';
   rsWarningUnreleasedDCsDump = ' WARNING: There are %d unreleased DCs, a '
     +'detailed dump follows:';
   rsWarningUnreleasedGDIObjectsDump = ' WARNING: There are %d unreleased '
     +'GDIObjects, a detailed dump follows:';
   rsWarningUnreleasedMessagesInQueue = ' WARNING: There are %d messages left '
     +'in the queue! I''ll free them';
   rsWarningUnreleasedTimerInfos = ' WARNING: There are %d TimerInfo '
     +'structures left, I''ll free them';
   rsFileInformation = 'File information';
   rsDefaultFileInfoValue = 'permissions user group size date time';
   rsBlank = 'Blank';
   rsUnableToLoadDefaultFont = 'Unable to load default font';
   rsFileInfoFileNotFound = '(file not found: "%s")';
   rsgtkOptionModule = '--gtk-module module   Load the specified module at '
     +'startup.';
   rsgOptionFatalWarnings = '--g-fatal-warnings    Warnings and errors '
     +'generated by Gtk+/GDK willhalt the application.';
   rsgtkOptionDebug = '--gtk-debug flags     Turn on specific Gtk+ trace/'
     +'debug messages.';
   rsgtkOptionNoDebug = '--gtk-no-debug flags  Turn off specific Gtk+ trace/'
     +'debug messages.';
   rsgdkOptionDebug = '--gdk-debug flags     Turn on specific GDK trace/debug '
     +'messages.';
   rsgdkOptionNoDebug = '--gdk-no-debug flags  Turn off specific GDK trace/'
     +'debug messages.';
   rsgtkOptionDisplay = '--display h:s:d       Connect to the specified X '
     +'server, where "h" isthe hostname, "s" is the server number (usually0), '
     +'and "d" is the display number (typicallyomitted). If --display is not '
     +'specified, theDISPLAY environment variable is used.';
   rsgtkOptionSync = '--sync                Call XSynchronize (display, True) '
     +'after the Xserver connection has been established. Thismakes debugging '
     +'X protocol erros easier,because X request buffering will be disabled '
     +'andX errors will be received immediatey after theprotocol request that '
     +'generated the error hasbeen processed by the X server.';
   rsgtkOptionNoXshm = '--no-xshm             Disable use of the X Shared '
     +'Memory Extension.';
   rsgtkOptionName = '--name programe       Set program name to "progname". '
     +'If notspecified, program name will be set toParamStr(0).';
   rsgtkOptionClass = '--class classname     Following Xt conventions, the '
     +'class of aprogram is the program name with the initialcharacter '
     +'capitalized. For example, the classname for gimp is "Gimp". If --class '
     +'isspecified, the class of the program will beset to "classname".';
   
   
implementation

end.

