<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="AnchorDocking">
    <module name="AnchorDocking">
      <element name="TAnchorDockMaster.SetHeaderAlignLeft">
        <short>Setter for HeaderAlignLeft</short>
      </element>
      <element name="TAnchorDockMaster.SetHeaderAlignTop">
        <short>Setter for HeaderAlignTop</short>
      </element>
      <element name="TAnchorDockMaster.SetShowHeaderCaptionFloatingControl">
        <short>Setter for ShowHeaderCaptionFloatingControl</short>
      </element>
      <element name="TAnchorDockMaster.SetSplitterWidth">
        <short>Setter for SplitterWidth</short>
      </element>
      <element name="TAnchorDockMaster.DoCreateControl">
        <short>Create a control with OnCreateControl if not already exists and delay autosizing</short>
      </element>
      <element name="TAnchorDockMaster.DisableControlAutoSizing">
        <short>Add control to the internal list only once and delay autosizing</short>
      </element>
      <element name="TAnchorDockMaster.ControlCount">
        <short>Returns number of dockable controls, added via MakeDockable or MakeDockSite or OnCreateControl</short>
      </element>
      <element name="TAnchorDockMaster.Controls">
        <short>the list of dockable controls, starting at 0</short>
      </element>
      <element name="TAnchorDockMaster.IndexOfControl">
        <short>Index of control with Name is aName in the list of dockable controls (case insensitive)</short>
      </element>
      <element name="TAnchorDockMaster.FindControl">
        <short>returns a dockable control with Name is aName (case insensitive)</short>
      </element>
      <element name="TAnchorDockMaster.IsSite">
        <short>Returns true if control is a site (TAnchorDockHostSite) or custom site (MakeDockSite)</short>
      </element>
      <element name="TAnchorDockMaster.IsCustomSite">
        <short>returns true if AControl is a custom dock site (MakeDockSite)</short>
      </element>
      <element name="TAnchorDockMaster.GetSite">
        <short>returns the site (TAnchorDockHostSite) of AControl</short>
      </element>
      <element name="TAnchorDockMaster.GetPopupMenu">
        <short>returns the shared popupmenu used by all headers and pages.</short>
        <descr>The popup menu is cleared on popup and filled by the headers and pages on Popup.
</descr>
      </element>
      <element name="TAnchorDockMaster.AddPopupMenuItem">
        <short>Utility function to easily add a menu item to the popupmenu.</short>
      </element>
      <element name="TAnchorDockMaster.AddRemovePopupMenuItem">
        <short>Utility function to add or remove a menu item to/from the popupmenu.</short>
      </element>
      <element name="TAnchorDockMaster.MakeDockable">
        <short>Give AControl a site and optionally show it</short>
        <descr>If not already done AControl is added to the list of dockable controls and create a site.
You can call MakeDockable on already dockable forms to show them.
If Show=true the site, the control and all parents are made visible.
If BringToFront=true then all parent pages are made active and the top form is focused.
</descr>
      </element>
      <element name="TAnchorDockMaster.MakeDockSite">
        <short>Give AForm a dockmanager to make it a custom dock site</short>
        <descr>Sites defines at which sides a site can be docked. The site is docked by putting it onto the form with a splitter and use the Align property . For example alBottom when docking to the bottom. The ResizePolicy defines what happens with the docked site when AForm is resized. 
</descr>
      </element>
      <element name="TAnchorDockMaster.MakeVisible">
        <short>Make a control and its parents visible</short>
        <descr>If SwitchPages is true then all parent pages are made active.
This function does not give focus, not does it bring the form to the front or to the current screen.
</descr>
      </element>
      <element name="TAnchorDockMaster.ShowControl">
        <short>Create and show a control by name.</short>
        <descr>If the control does not exist, OnCreateControl is used to create it and is made dockable.
Then the control and all its parents are made visible.
If BringToFront=true then the form gets focus.
</descr>
      </element>
      <element name="TAnchorDockMaster.CloseAll">
        <short>Close all dockable controls.</short>
      </element>
    </module>
  </package>
</fpdoc-descriptions>
