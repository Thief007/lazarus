// included by graphics.pp

{******************************************************************************
                         TPortableNetworkGraphic
 ******************************************************************************

 *****************************************************************************
 *                                                                           *
 *  This file is part of the Lazarus Component Library (LCL)                 *
 *                                                                           *
 *  See the file COPYING.LCL, included in this distribution,                 *
 *  for details about the copyright.                                         *
 *                                                                           *
 *  This program is distributed in the hope that it will be useful,          *
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of           *
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                     *
 *                                                                           *
 *****************************************************************************
}

{ TPortableNetworkGraphic }

{$IFDEF UseFPImage}
function TPortableNetworkGraphic.GetFPReaderForFileExt(
  const FileExtension: string): TFPCustomImageReaderClass;
begin
  Result:=TFPReaderPNG;
end;

function TPortableNetworkGraphic.GetFPWriterForFileExt(
  const FileExtension: string): TFPCustomImageWriterClass;
begin
  Result:=TFPWriterPNG;
end;
{$ENDIF}

function TPortableNetworkGraphic.LazarusResourceTypeValid(
  const ResourceType: string): boolean;
begin
  Result:=(ResourceType='PNG');
end;

procedure TPortableNetworkGraphic.ReadStream(Stream: TStream; Size: Longint);
begin
{$IFDEF UseFPImage}
  ReadStreamWithFPImage(Stream,Size,TFPReaderPNG);
{$ELSE}
  RaiseGDBException('TPortableNetworkGraphic.ReadStream needs FPImage');
{$ENDIF}
end;

procedure TPortableNetworkGraphic.WriteStream(Stream: TStream;
  WriteSize: Boolean);
begin
{$IFDEF UseFPImage}
  WriteStreamWithFPImage(Stream,WriteSize,TFPWriterPNG);
{$ELSE}
  RaiseGDBException('TPortableNetworkGraphic.WriteStream needs FPImage');
{$ENDIF}
end;

function TPortableNetworkGraphic.GetDefaultMimeType: string;
begin
  Result:='image/png';
end;


// included by graphics.pp

