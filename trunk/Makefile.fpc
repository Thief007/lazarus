#
#   Makefile.fpc for Lazarus for Free Pascal
#

[package]
name=lazarus
version=0.8a

[require]
#rtl=1
#options=-gl
packages=fcl gtk regexpr

[target]
programs=lazarus
dirs=lcl components
#dirs=lcl components tools
exampledirs=examples

[compiler]
options=-gl
unitdir=. ./lcl/units ./lcl/units/$(LCLPLATFORM) ./components/units ./designer ./debugger
includedir=. ./include ./include/$(OS_TARGET)

[clean]
#units=$(basename $(wildcard *$(PPUEXT))) $(basename $(wildcard ./designer/*$(PPUEXT))) $(basename $(wildcard ./debugger/*$(PPUEXT)))
#files=$(wildcard ./designer/*$(OEXT))

[install]
basedir=lib/lazarus
#prefix=/usr

[dist]
destdir=$(BASEDIR)/dist

[prerules]
ifndef LCLPLATFORM
ifeq ($(OS_TARGET), win32)
LCLPLATFORM=win32
override FPCOPT+=-dSUPPORTS_RESOURCES
export FPCOPT
else
LCLPLATFORM=gtk
endif
export LCLPLATFORM
endif

[rules]
.SUFFIXES: .rc .res
%.res: %.rc
        windres -i $< -o $@


.PHONY: examples lcl components ide tools all cleanall makefile makefiles

lcl: lcl_all

examples: lcl examples_all

components: lcl components_all

ide:
ifeq ($(LCLPLATFORM), win32)
        $(MAKE) lazarus.res
endif
        $(MAKE) --assume-new=lazarus.pp lazarus$(EXEEXT)

tools: lcl components tools_all

all: lcl components ide

cleanall:
        $(MAKE) clean
        $(DEL) $(wildcard ./*$(PPUEXT)) $(wildcard ./*$(OEXT))
        $(DEL) $(wildcard ./debugger/*$(PPUEXT)) $(wildcard ./debugger/*$(OEXT))
        $(DEL) $(wildcard ./designer/*$(PPUEXT)) $(wildcard ./designer/*$(OEXT))
ifeq ($(LCLPLATFORM), win32)
        $(DEL) $(wildcard *.res)
        $(DEL) lazarus.owr
endif

# MWE: moved to a more generic rule
#lazarus.res: lazarus.rc
#       windres -i lazarus.rc -o lazarus.res

makefile: Makefile.fpc
        -$(FPCMAKE) -w

makefiles: makefile
        $(MAKE) -C components makefiles
        $(MAKE) -C lcl makefiles
        $(MAKE) -C tools makefiles

