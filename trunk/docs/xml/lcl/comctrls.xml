<?xml version="1.0" encoding="ISO8859-1"?>
<fpdoc-descriptions>
<package name="lcl">

<!--
  ====================================================================
    ComCtrls
  ====================================================================
-->

<module name="ComCtrls">
<short></short>
<descr>
</descr>

<!-- unresolved type reference Visibility: default -->
<element name="SysUtils">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Classes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Math">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="FPCAdds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLStrConsts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LResources">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLIntf">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="AvgLvlTree">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LMessages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="ImgList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="ActnList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="GraphType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Graphics">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Menus">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Controls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Forms">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="StdCtrls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="ExtCtrls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="ToolWin">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="CommCtrl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Buttons">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="THitTest">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htAbove">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htBelow">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htNowhere">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htOnItem">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htOnButton">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htOnIcon">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htOnIndent">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htOnLabel">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htOnRight">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htOnStateIcon">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htToLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="THitTest.htToRight">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="THitTests">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TStatusPanelStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TStatusPanelStyle.psText">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TStatusPanelStyle.psOwnerDraw">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TStatusPanelBevel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TStatusPanelBevel.pbNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TStatusPanelBevel.pbLowered">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TStatusPanelBevel.pbRaised">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TStatusBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TPanelPart">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPanelPart.ppText">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPanelPart.ppBorder">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPanelPart.ppWidth">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TPanelParts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TStatusPanel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusPanel.FText">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusPanel.FWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusPanel.FAlignment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusPanel.FBevel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusPanel.FParentBiDiMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusPanel.FStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TStatusPanel.SetAlignment">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanel.SetAlignment.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TStatusPanel.SetBevel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanel.SetBevel.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TStatusPanel.SetStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanel.SetStyle.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TStatusPanel.SetText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanel.SetText.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TStatusPanel.SetWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanel.SetWidth.Value">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TStatusPanel.GetDisplayName">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TStatusPanel.GetDisplayName.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TStatusPanel.PanelChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanel.PanelChanged.Parts">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TStatusPanel.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanel.Create.aCollection">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TStatusPanel.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanel.Assign.Source">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TStatusPanel.StatusBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TStatusPanel.StatusBar.Result">
<short></short>
</element>

<!-- property Visibility: published -->
<element name="TStatusPanel.Alignment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TStatusPanel.Bevel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TStatusPanel.Style">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TStatusPanel.Text">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TStatusPanel.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TStatusPanels">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusPanels.FStatusBar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TStatusPanels.GetItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TStatusPanels.GetItem.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanels.GetItem.Index">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TStatusPanels.SetItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanels.SetItem.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanels.SetItem.Value">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TStatusPanels.GetOwner">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TStatusPanels.GetOwner.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TStatusPanels.Update">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanels.Update.Item">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TStatusPanels.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanels.Create.TheStatusBar">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TStatusPanels.Add">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TStatusPanels.Add.Result">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TStatusPanels.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusPanels.Items.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TStatusPanels.StatusBar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TStatusBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusBar.FHandlePanelCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusBar.FHandleObjectNeedsUpdate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusBar.FHandleUpdatePanelIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusBar.FUpdateLock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusBar.FPanels">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusBar.FSimpleText">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TStatusBar.FSimplePanel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TStatusBar.SetPanels">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusBar.SetPanels.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TStatusBar.SetSimpleText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusBar.SetSimpleText.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TStatusBar.SetSimplePanel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusBar.SetSimplePanel.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TStatusBar.CreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TStatusBar.DestroyWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TStatusBar.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TStatusBar.UpdateHandleObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusBar.UpdateHandleObject.PanelIndex">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TStatusBar.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusBar.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TStatusBar.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TStatusBar.InvalidatePanel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TStatusBar.InvalidatePanel.PanelIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TStatusBar.InvalidatePanel.PanelParts">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TStatusBar.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TStatusBar.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TStatusBar.UpdatingStatusBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TStatusBar.UpdatingStatusBar.Result">
<short></short>
</element>

<!-- property Visibility: published -->
<element name="TStatusBar.Panels">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TStatusBar.SimpleText">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TStatusBar.SimplePanel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TStatusBar.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TStatusBar.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TPageControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTabStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabStyle.tsTabs">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabStyle.tsButtons">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabStyle.tsFlatButtons">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TTabSheet">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabSheet.FOnHide">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabSheet.FOnShow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TTabSheet.GetPageControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabSheet.GetPageControl.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTabSheet.GetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabSheet.GetTabIndex.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTabSheet.SetPageControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabSheet.SetPageControl.APageControl">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTabSheet.SetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabSheet.SetTabIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabSheet.DoHide">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabSheet.DoShow">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TTabSheet.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabSheet.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TTabSheet.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabSheet.PageControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabSheet.TabIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.ClientHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.ClientWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.ImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.Left">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.OnHide">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.OnShow">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.PageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.TabVisible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.Top">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabSheet.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TPageControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TPageControl.FOnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TPageControl.GetActivePageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TPageControl.GetActivePageIndex.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TPageControl.GetActiveTabSheet">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TPageControl.GetActiveTabSheet.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TPageControl.GetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TPageControl.GetTabIndex.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TPageControl.GetTabSheet">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TPageControl.GetTabSheet.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.GetTabSheet.Index">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TPageControl.SetActivePageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.SetActivePageIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TPageControl.SetActiveTabSheet">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.SetActiveTabSheet.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TPageControl.SetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.SetTabIndex.AValue">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TPageControl.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.Create.TheOwner">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TPageControl.FindNextPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TPageControl.FindNextPage.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.FindNextPage.CurPage">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.FindNextPage.GoForward">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.FindNextPage.CheckTabVisible">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TPageControl.SelectNextPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.SelectNextPage.GoForward">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TPageControl.SelectNextPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.SelectNextPage.GoForward">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.SelectNextPage.CheckTabVisible">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TPageControl.ActivePageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TPageControl.Pages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TPageControl.Pages.Index">
<short></short>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.ActivePage">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.Images">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.TabIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.TabPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPageControl.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomTabControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTabControlStrings">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FHotTrack">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FMultiLine">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FMultiSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FOwnerDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FRaggedRight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FScrollOpposite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FTabControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FTabHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FTabWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlStrings.FUpdateCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TTabControlStrings.GetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlStrings.GetTabIndex.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetHotTrack">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetHotTrack.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetImages.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetMultiLine">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetMultiLine.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetMultiSelect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetMultiSelect.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetOwnerDraw">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetOwnerDraw.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetRaggedRight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetRaggedRight.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetScrollOpposite">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetScrollOpposite.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetTabHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetTabHeight.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetTabIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlStrings.SetTabWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.SetTabWidth.AValue">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TTabControlStrings.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.Create.TheTabControl">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTabControlStrings.GetHitTestInfoAt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlStrings.GetHitTestInfoAt.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.GetHitTestInfoAt.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.GetHitTestInfoAt.Y">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTabControlStrings.GetSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlStrings.GetSize.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTabControlStrings.IndexOfTabAt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlStrings.IndexOfTabAt.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.IndexOfTabAt.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.IndexOfTabAt.Y">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTabControlStrings.RowCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlStrings.RowCount.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTabControlStrings.TabRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlStrings.TabRect.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.TabRect.Index">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlStrings.ImageListChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.ImageListChange.Sender">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlStrings.ScrollTabs">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlStrings.ScrollTabs.Delta">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlStrings.TabControlBoundsChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlStrings.UpdateTabImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlStrings.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlStrings.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TTabControlStrings.IsUpdating">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlStrings.IsUpdating.Result">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.TabControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.TabIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.HotTrack">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.Images">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.MultiLine">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.MultiSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.OwnerDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.RaggedRight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.ScrollOpposite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.TabHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControlStrings.TabWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTabControlNoteBookStrings">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTabControlNoteBookStrings.FNoteBook">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TTabControlNoteBookStrings.Get">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlNoteBookStrings.Get.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.Get.Index">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TTabControlNoteBookStrings.GetCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlNoteBookStrings.GetCount.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TTabControlNoteBookStrings.GetObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlNoteBookStrings.GetObject.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.GetObject.Index">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TTabControlNoteBookStrings.GetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlNoteBookStrings.GetTabIndex.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.NBChanging">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.NBChanging.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.NBChanging.AllowChange">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.NBGetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.NBGetImageIndex.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.NBGetImageIndex.TheTabIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.NBGetImageIndex.ImageIndex">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.NBPageChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.NBPageChanged.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.Put">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.Put.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.Put.S">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.PutObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.PutObject.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.PutObject.AObject">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.SetImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.SetImages.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.SetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.SetTabIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.SetUpdateState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.SetUpdateState.Updating">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.SetTabHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.SetTabHeight.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTabControlNoteBookStrings.SetTabWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.SetTabWidth.AValue">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TTabControlNoteBookStrings.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.Create.TheTabControl">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TTabControlNoteBookStrings.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlNoteBookStrings.Clear">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlNoteBookStrings.Delete">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.Delete.Index">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlNoteBookStrings.Insert">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.Insert.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.Insert.S">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTabControlNoteBookStrings.GetSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlNoteBookStrings.GetSize.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTabControlNoteBookStrings.TabControlBoundsChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TTabControlNoteBookStrings.IndexOfTabAt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTabControlNoteBookStrings.IndexOfTabAt.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.IndexOfTabAt.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabControlNoteBookStrings.IndexOfTabAt.Y">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TTabControlNoteBookStrings.NoteBook">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TDrawTabEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TDrawTabEvent.Control">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDrawTabEvent.TabIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDrawTabEvent.Rect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TDrawTabEvent.Active">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TCustomTabControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FImageChangeLink">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FOnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FOnChangeNeeded">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FOnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FOnDrawTab">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FOnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FTabControlCreating">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FTabPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTabControl.FTabs">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetDisplayRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetDisplayRect.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetHotTrack">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetHotTrack.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetMultiLine">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetMultiLine.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetMultiSelect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetMultiSelect.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetOwnerDraw">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetOwnerDraw.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetRaggedRight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetRaggedRight.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetScrollOpposite">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetScrollOpposite.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetTabHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetTabHeight.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetTabIndex.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTabControl.GetTabWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetTabWidth.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetHotTrack">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetHotTrack.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetImages.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetMultiLine">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetMultiLine.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetMultiSelect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetMultiSelect.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetOwnerDraw">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetOwnerDraw.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetRaggedRight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetRaggedRight.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetScrollOpposite">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetScrollOpposite.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetStyle.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetTabHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetTabHeight.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetTabPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetTabPosition.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetTabs">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetTabs.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTabControl.SetTabWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetTabWidth.AValue">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTabControl.CanChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.CanChange.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTabControl.CanShowTab">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.CanShowTab.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.CanShowTab.ATabIndex">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.Change">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.DrawTab">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.DrawTab.ATabIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.DrawTab.Rect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.DrawTab.Active">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTabControl.GetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetImageIndex.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.GetImageIndex.ATabIndex">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.CreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.DestroyHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.SetTabIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.SetTabIndex.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.UpdateTabImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.ImageListChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.ImageListChange.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.DoSetBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.DoSetBounds.ALeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.DoSetBounds.ATop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.DoSetBounds.AWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.DoSetBounds.AHeight">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTabControl.GetDisplayRectWithBorder">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetDisplayRectWithBorder.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTabControl.AdjustClientRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.AdjustClientRect.ARect">
<short></short>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.DisplayRect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.HotTrack">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.Images">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.MultiLine">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.MultiSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.OnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.OnDrawTab">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.OnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.OwnerDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.RaggedRight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.ScrollOpposite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.Style">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.TabHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.TabIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.TabPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.Tabs">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTabControl.TabWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomTabControl.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomTabControl.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomTabControl.IndexOfTabAt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.IndexOfTabAt.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.IndexOfTabAt.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.IndexOfTabAt.Y">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomTabControl.GetHitTestInfoAt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.GetHitTestInfoAt.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.GetHitTestInfoAt.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.GetHitTestInfoAt.Y">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomTabControl.TabRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.TabRect.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.TabRect.Index">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomTabControl.RowCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.RowCount.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTabControl.ScrollTabs">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTabControl.ScrollTabs.Delta">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTabControl.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTabControl.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomTabControl.IsUpdating">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTabControl.IsUpdating.Result">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomTabControl.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTabControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTabControl.DisplayRect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.DockSite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.DragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.HotTrack">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.Images">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.MultiLine">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.MultiSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnDockDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnDockOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnDrawTab">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnEndDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnGetSiteInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnStartDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OnUnDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.OwnerDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.RaggedRight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.ScrollOpposite">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.Style">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.TabHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.TabIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.TabPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.Tabs">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.TabWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTabControl.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TCustomDrawTarget">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawTarget.dtControl">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawTarget.dtItem">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawTarget.dtSubItem">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TCustomDrawStage">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStage.cdPrePaint">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStage.cdPostPaint">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStage.cdPreErase">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStage.cdPostErase">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TCustomDrawStateFlag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStateFlag.cdsSelected">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStateFlag.cdsGrayed">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStateFlag.cdsDisabled">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStateFlag.cdsChecked">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStateFlag.cdsFocused">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStateFlag.cdsDefault">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStateFlag.cdsHot">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStateFlag.cdsMarked">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TCustomDrawStateFlag.cdsIndeterminate">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TCustomDrawState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TListItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomListView">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TSortType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TSortType.stNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TSortType.stData">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TSortType.stText">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TSortType.stBoth">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TListItemState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TListItemState.lisCut">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TListItemState.lisDropTarget">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TListItemState.lisFocused">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TListItemState.lisSelected">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TListItemStates">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TListItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItem.FOwner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItem.FSubItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItem.FCaption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItem.FData">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItem.FImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItem.FDestroying">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItem.FStates">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TListItem.GetState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItem.GetState.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.GetState.ALisOrd">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TListItem.GetIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItem.GetIndex.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TListItem.GetSubItemImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItem.GetSubItemImages.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.GetSubItemImages.AIndex">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TListItem.GetSubItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItem.GetSubItems.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TListItem.IntfUpdateAllowed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItem.IntfUpdateAllowed.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListItem.IntfUpdateText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TListItem.IntfUpdateImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TListItem.SetState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.SetState.ALisOrd">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.SetState.AIsSet">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListItem.SetSubItemImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.SetSubItemImages.AIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.SetSubItemImages.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListItem.SetData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.SetData.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListItem.SetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.SetImageIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListItem.SetCaption">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.SetCaption.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListItem.SetSubItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.SetSubItems.AValue">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TListItem.IsEqual">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItem.IsEqual.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.IsEqual.AItem">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TListItem.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.Assign.ASource">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TListItem.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TListItem.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TListItem.Delete">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TListItem.MakeVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.MakeVisible.PartialOK">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TListItem.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.Cut">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.Data">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.DropTarget">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.Focused">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.Index">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.ImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.Owner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.Selected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.SubItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItem.SubItemImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItem.SubItemImages.AIndex">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TListItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItems.FOwner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItems.FItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItems.FCacheIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListItems.FCacheItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TListItems.ItemDeleted">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.ItemDeleted.AItem">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListItems.ReadData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.ReadData.Stream">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListItems.WriteData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.WriteData.Stream">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TListItems.DefineProperties">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.DefineProperties.Filer">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TListItems.GetCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItems.GetCount.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TListItems.GetItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItems.GetItem.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.GetItem.AIndex">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TListItems.IndexOf">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItems.IndexOf.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.IndexOf.AItem">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TListItems.SetITem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.SetITem.AIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.SetITem.AValue">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TListItems.Add">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItems.Add.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TListItems.AddItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.AddItem.AItem">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TListItems.Clear">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TListItems.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TListItems.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TListItems.Delete">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.Delete.AIndex">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TListItems.FindData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItems.FindData.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.FindData.AData">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TListItems.Insert">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListItems.Insert.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.Insert.AIndex">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TListItems.InsertItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.InsertItem.AItem">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.InsertItem.AIndex">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TListItems.Count">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListItems.Item">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListItems.Item.AIndex">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TListItems.Owner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- range type Visibility: default -->
<element name="TWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TListColumn">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumn.FAlignment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumn.FAutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumn.FCaption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumn.FMinWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumn.FMaxWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumn.FVisible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumn.FWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumn.FImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumn.FTag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TListColumn.GetWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListColumn.GetWidth.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TListColumn.IntfUpdateAllowed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListColumn.IntfUpdateAllowed.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListColumn.SetVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.SetVisible.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListColumn.SetAutoSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.SetAutoSize.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListColumn.SetMinWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.SetMinWidth.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListColumn.SetMaxWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.SetMaxWidth.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListColumn.SetWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.SetWidth.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListColumn.SetCaption">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.SetCaption.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListColumn.SetAlignment">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.SetAlignment.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListColumn.SetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.SetImageIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TListColumn.SetIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.SetIndex.AValue">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TListColumn.GetDisplayName">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListColumn.GetDisplayName.Result">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TListColumn.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.Create.ACollection">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TListColumn.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TListColumn.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumn.Assign.ASource">
<short></short>
</element>

<!-- property Visibility: published -->
<element name="TListColumn.Alignment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListColumn.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListColumn.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListColumn.ImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListColumn.MaxWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListColumn.MinWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListColumn.Tag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListColumn.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListColumn.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TListColumns">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumns.FOwner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumns.FUpdateCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumns.FItemNeedsUpdate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TListColumns.FNeedsUpdate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TListColumns.GetItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListColumns.GetItem.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListColumns.GetItem.AIndex">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TListColumns.SetItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumns.SetItem.AIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TListColumns.SetItem.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TListColumns.Update">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumns.Update.AnItem">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TListColumns.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumns.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TListColumns.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TListColumns.Add">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TListColumns.Add.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TListColumns.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TListColumns.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListColumns.Owner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TListColumns.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumns.Items.AIndex">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TListColumns.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TListColumns.Assign.Source">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TItemChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TItemChange.ctText">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TItemChange.ctImage">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TItemChange.ctState">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TViewStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TViewStyle.vsList">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TViewStyle.vsReport">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TLVChangeEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TLVChangeEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVChangeEvent.Item">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVChangeEvent.Change">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TLVColumnClickEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TLVColumnClickEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVColumnClickEvent.Column">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TLVColumnRClickEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TLVColumnRClickEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVColumnRClickEvent.Column">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVColumnRClickEvent.Point">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TLVCompareEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TLVCompareEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVCompareEvent.Item1">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVCompareEvent.Item2">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVCompareEvent.Data">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVCompareEvent.Compare">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TLVDeletedEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TLVDeletedEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVDeletedEvent.Item">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TLVSelectItemEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TLVSelectItemEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVSelectItemEvent.Item">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TLVSelectItemEvent.Selected">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TListViewState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TListViewState.lvMultiSelect">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TListViewState.lvUpdateNeeded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TListViewState.lvPropertiesNeedsUpdate">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TListViewStates">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomListView">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FDefItemHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FSmallImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FListItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FColumns">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FViewStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FSortType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FSortColumn">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FImageChangeLink">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FScrollBars">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FScrolledLeft">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FScrolledTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FSelected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FLastHorzScrollInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FLastVertScrollInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FUpdateCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FOnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FOnColumnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FOnCompare">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FOnDeletion">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FOnSelectItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomListView.FStates">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TCustomListView.GetMultiSelect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomListView.GetMultiSelect.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomListView.GetSelection">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomListView.GetSelection.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetColumns">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetColumns.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetDefaultItemHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetDefaultItemHeight.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetItems.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetItemVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetItemVisible.Avalue">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetItemVisible.PartialOK">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetMultiSelect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetMultiSelect.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetSmallImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetSmallImages.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetScrollBars">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetScrollBars.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetScrolledLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetScrolledLeft.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetScrolledTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetScrolledTop.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetSelection">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetSelection.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetSortColumn">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetSortColumn.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetSortType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetSortType.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.SetViewStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.SetViewStyle.Avalue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.Sort">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.UpdateScrollbars">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.CNNotify">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.CNNotify.AMessage">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.DoUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomListView.UpdateProperties">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.ItemDeleted">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.ItemDeleted.AIndex">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.ItemInserted">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.ItemInserted.AItem">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.ItemInserted.AIndex">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.ColumnsChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.InitializeWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.Change">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.Change.AItem">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.Change.AChange">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.ColClick">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.ColClick.AColumn">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.Delete">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.Delete.Item">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.DoDeletion">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.DoDeletion.AItem">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.DoSelectItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.DoSelectItem.AItem">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.DoSelectItem.ASelected">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.InsertItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.InsertItem.Item">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomListView.GetMaxScrolledLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomListView.GetMaxScrolledLeft.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomListView.GetMaxScrolledTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomListView.GetMaxScrolledTop.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.ImageChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.ImageChanged.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.WMHScroll">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.WMHScroll.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomListView.WMVScroll">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.WMVScroll.Msg">
<short></short>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.Columns">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.DefaultItemHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.MultiSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.ScrolledLeft">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.ScrolledTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.ScrollBars">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.SmallImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.SortType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.SortColumn">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.ViewStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.OnColumnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.OnCompare">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.OnDeletion">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.OnSelectItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomListView.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomListView.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomListView.Create.Aowner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomListView.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomListView.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomListView.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomListView.Selected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomListView.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TListView">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.BorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.Columns">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.MultiSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.ScrollBars">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.SmallImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.SortColumn">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.SortType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.ViewStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnColumnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnCompare">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnKeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnKeyUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnDeletion">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TListView.OnSelectItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TProgressBarOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TProgressBarOrientation.pbHorizontal">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TProgressBarOrientation.pbVertical">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TProgressBarOrientation.pbRightToLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TProgressBarOrientation.pbTopDown">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TProgressBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TProgressBar.FMin">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TProgressBar.FMax">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TProgressBar.FStep">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TProgressBar.FPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TProgressBar.FSmooth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TProgressBar.FBarShowText">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TProgressBar.FBarTextFormat">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TProgressBar.FOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TProgressBar.GetMin">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TProgressBar.GetMin.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TProgressBar.GetMax">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TProgressBar.GetMax.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TProgressBar.GetPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TProgressBar.GetPosition.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TProgressBar.SetParams">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.SetParams.AMin">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.SetParams.AMax">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TProgressBar.SetMin">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.SetMin.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TProgressBar.SetMax">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.SetMax.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TProgressBar.SetPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.SetPosition.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TProgressBar.SetStep">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.SetStep.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TProgressBar.SetSmooth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.SetSmooth.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TProgressBar.SetBarShowText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.SetBarShowText.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TProgressBar.SetOrientation">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.SetOrientation.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TProgressBar.ApplyChanges">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TProgressBar.InitializeWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TProgressBar.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TProgressBar.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.Create.AOwner">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TProgressBar.StepIt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TProgressBar.StepBy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TProgressBar.StepBy.Delta">
<short></short>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.BorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.DragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Hint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Max">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Min">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnStartDock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Orientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Position">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Smooth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Step">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TProgressBar.BarShowText">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TUDAlignButton">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TUDAlignButton.udLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TUDAlignButton.udRight">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TUDAlignButton.udTop">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TUDAlignButton.udBottom">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TUDOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TUDOrientation.udHorizontal">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TUDOrientation.udVertical">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TUDBtnType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TUDBtnType.btNext">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TUDBtnType.btPrev">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TUDClickEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TUDClickEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TUDClickEvent.Button">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TUDChangingEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TUDChangingEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TUDChangingEvent.AllowChange">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TCustomUpDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.MinBtn">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.MaxBtn">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.BTimerProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.BTimerBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FArrowKeys">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FAssociate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FMin">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FMax">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FIncrement">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FThousands">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FWrap">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FOnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FAlignButton">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomUpDown.FOnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TCustomUpDown.GetPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomUpDown.GetPosition.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.BTimerExec">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.BTimerExec.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetAlignButton">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetAlignButton.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetArrowKeys">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetArrowKeys.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetAssociate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetAssociate.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetIncrement">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetIncrement.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetMax">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetMax.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetMin">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetMin.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetOrientation">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetOrientation.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetPosition.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetThousands">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetThousands.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.SetWrap">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.SetWrap.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.UpdateAlignButtonPos">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.UpdateOrientation">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomUpDown.UpdateUpDownPositionText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: protected -->
<element name="TCustomUpDown.OldKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomUpDown.AssociateKeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.AssociateKeyDown.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.AssociateKeyDown.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.AssociateKeyDown.ShiftState">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomUpDown.OnAssociateChangeBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.OnAssociateChangeBounds.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomUpDown.DoOnResize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TCustomUpDown.CanChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomUpDown.CanChange.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomUpDown.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomUpDown.Click">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.Click.Button">
<short></short>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.AlignButton">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.ArrowKeys">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.Associate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.Min">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.Max">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.Increment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.Orientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.Position">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.Thousands">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.Wrap">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.OnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomUpDown.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomUpDown.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomUpDown.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomUpDown.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TUpDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.AlignButton">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Associate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.ArrowKeys">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Hint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Min">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Max">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Increment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Orientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Position">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Thousands">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.Wrap">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.OnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TUpDown.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="CN_DROPDOWNCLOSED">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TToolButtonStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TToolButtonStyle.tbsButton">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TToolButtonStyle.tbsCheck">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TToolButtonStyle.tbsDropDown">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TToolButtonStyle.tbsSeparator">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TToolButtonStyle.tbsDivider">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TToolButtonFlag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TToolButtonFlag.tbfPressed">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TToolButtonFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TToolButtonActionLink">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButtonActionLink.AssignClient">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButtonActionLink.AssignClient.AClient">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TToolButtonActionLink.IsCheckedLinked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButtonActionLink.IsCheckedLinked.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TToolButtonActionLink.IsImageIndexLinked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButtonActionLink.IsImageIndexLinked.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButtonActionLink.SetChecked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButtonActionLink.SetChecked.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButtonActionLink.SetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButtonActionLink.SetImageIndex.Value">
<short></short>
</element>

<!-- "class of" type Visibility: default -->
<element name="TToolButtonActionLinkClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TToolBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TToolButton">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FAllowAllUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FDropdownMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FGrouped">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FIndeterminate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FLastButtonDrawFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FMarked">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FMenuItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FMouseInControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FToolButtonFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FUpdateCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolButton.FWrap">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.GetGroupBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.GetGroupBounds.StartIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.GetGroupBounds.EndIndex">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TToolButton.GetIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButton.GetIndex.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TToolButton.IsCheckedStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButton.IsCheckedStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TToolButton.IsImageIndexStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButton.IsImageIndexStored.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TToolButton.IsWidthStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButton.IsWidthStored.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetAutoSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetAutoSize.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetDown.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetDropdownMenu">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetDropdownMenu.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetGrouped">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetGrouped.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetImageIndex.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetIndeterminate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetIndeterminate.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetMarked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetMarked.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetMenuItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetMenuItem.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetStyle.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetWrap">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetWrap.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.SetMouseInControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetMouseInControl.NewMouseInControl">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolButton.CMHitTest">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.CMHitTest.Message">
<short></short>
</element>

<!-- variable Visibility: protected -->
<element name="TToolButton.FToolBar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.CopyPropertiesFromMenuItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.CopyPropertiesFromMenuItem.Value">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TToolButton.GetActionLinkClass">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButton.GetActionLinkClass.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.ActionChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.ActionChange.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.ActionChange.CheckDefaults">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.AssignTo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.AssignTo.Dest">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.MouseDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseDown.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseDown.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseDown.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseDown.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.MouseMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseMove.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseMove.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseMove.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.MouseUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseUp.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseUp.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseUp.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.MouseUp.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.MouseEnter">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.MouseLeave">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.RefreshControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.SetToolBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetToolBar.NewToolBar">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.UpdateControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TToolButton.GetButtonDrawFlags">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButton.GetButtonDrawFlags.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.SetParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.SetParent.AParent">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.UpdateVisibleToolbar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TToolButton.GroupAllUpAllowed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButton.GroupAllUpAllowed.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolButton.DoSetBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.DoSetBounds.ALeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.DoSetBounds.ATop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.DoSetBounds.AWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.DoSetBounds.AHeight">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TToolButton.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.Create.TheOwner">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TToolButton.CheckMenuDropdown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolButton.CheckMenuDropdown.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TToolButton.GetCurrentIcon">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.GetCurrentIcon.ImageList">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolButton.GetCurrentIcon.TheIndex">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TToolButton.Index">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Action">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.AllowAllUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Down">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.DragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.DropdownMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Grouped">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.ImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Indeterminate">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Marked">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.MenuItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Wrap">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Style">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolButton.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TToolBarFlag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TToolBarFlag.tbfUpdateVisibleBarNeeded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TToolBarFlag.tbfPlacingControls">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TToolBarFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TToolBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FButtonHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FRealizedButtonHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FButtons">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FButtonWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FDisabledImageChangeLink">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FDisabledImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FDropDownWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FDropDownButton">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FFlat">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FHotImageChangeLink">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FHotImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FImageChangeLink">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FIndent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FNewStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FRowCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FShowCaptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FCurrentMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FCurrentMenuAutoFree">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FSrcMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FSrcMenuItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FToolBarFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FTransparent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FUpdateCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TToolBar.FWrapable">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TToolBar.GetButton">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolBar.GetButton.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.GetButton.Index">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TToolBar.GetButtonCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolBar.GetButtonCount.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetButtonHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetButtonHeight.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetButtonWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetButtonWidth.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetDisabledImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetDisabledImages.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetFlat">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetFlat.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetHotImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetHotImages.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetImages.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetIndent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetIndent.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetList">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetList.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetShowCaptions">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetShowCaptions.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetTransparent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetTransparent.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.SetWrapable">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetWrapable.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.ToolButtonDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.ToolButtonDown.AButton">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.ToolButtonDown.NewDown">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.ImageListChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.ImageListChange.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.DisabledImageListChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.DisabledImageListChange.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.HotImageListChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.HotImageListChange.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.UpdateVisibleBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.OnTemporaryPopupMenuClose">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.OnTemporaryPopupMenuClose.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.MoveSubMenuItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.MoveSubMenuItems.SrcMenuItem">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.MoveSubMenuItems.DestMenuItem">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.AddButton">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.AddButton.Button">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TToolBar.RemoveButton">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.RemoveButton.Button">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TToolBar.CanAutoSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolBar.CanAutoSize.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.CanAutoSize.NewWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.CanAutoSize.NewHeight">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TToolBar.CheckMenuDropdown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolBar.CheckMenuDropdown.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.CheckMenuDropdown.Button">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolBar.ClickButton">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.ClickButton.Button">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolBar.CreateParams">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.CreateParams.Params">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolBar.CreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolBar.ControlsAligned">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TToolBar.FindButtonFromAccel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolBar.FindButtonFromAccel.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.FindButtonFromAccel.Accel">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolBar.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolBar.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolBar.RepositionButton">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.RepositionButton.Index">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TToolBar.RepositionButtons">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.RepositionButtons.Index">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TToolBar.WrapButtons">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TToolBar.WrapButtons.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.WrapButtons.NewWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.WrapButtons.NewHeight">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TToolBar.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TToolBar.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TToolBar.FlipChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.FlipChildren.AllLevels">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TToolBar.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TToolBar.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TToolBar.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TToolBar.SetButtonSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetButtonSize.NewButtonWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.SetButtonSize.NewButtonHeight">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TToolBar.ButtonCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TToolBar.Buttons">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TToolBar.Buttons.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TToolBar.ButtonList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TToolBar.RowCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.BorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.ButtonHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.ButtonWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Ctl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.DisabledImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.DragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.EdgeBorders">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.EdgeInner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.EdgeOuter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Flat">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.HotImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Images">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Indent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.List">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.ShowCaptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Transparent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.Wrapable">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnMouseEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnMouseLeave">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TToolBar.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTrackBarOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTrackBarOrientation.trHorizontal">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTrackBarOrientation.trVertical">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTickMark">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTickMark.tmBottomRight">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTickMark.tmTopLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTickMark.tmBoth">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTickStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTickStyle.tsNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTickStyle.tsAuto">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTickStyle.tsManual">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTrackBarScalePos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTrackBarScalePos.trLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTrackBarScalePos.trRight">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTrackBarScalePos.trTop">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTrackBarScalePos.trBottom">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TCustomTrackBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FOrientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FTickMarks">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FTickStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FLineSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FPageSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FMin">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FMax">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FFrequency">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FShowScale">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FScalePos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FScaleDigits">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTrackBar.FOnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetFrequency">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetFrequency.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetLineSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetLineSize.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetMax">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetMax.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetMin">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetMin.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetOrientation">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetOrientation.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetPageSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetPageSize.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetParams">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetParams.APosition">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetParams.AMin">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetParams.AMax">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetPosition.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetScalePos">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetScalePos.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetShowScale">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetShowScale.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetTickMarks">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetTickMarks.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.SetTickStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetTickStyle.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTrackBar.UpdateSelection">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTrackBar.ApplyChanges">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTrackBar.DoChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.DoChange.msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTrackBar.InitializeWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTrackBar.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomTrackBar.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.Create.AOwner">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTrackBar.SetTick">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTrackBar.SetTick.Value">
<short></short>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.Frequency">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.LineSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.Max">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.Min">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.Orientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.PageSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.Position">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.ScalePos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.ShowScale">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.TickMarks">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTrackBar.TickStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTrackBar">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Ctl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Frequency">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Hint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.LineSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Max">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Min">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnMouseEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnMouseLeave">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnKeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnKeyUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Orientation">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.PageSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.ParentCtl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Position">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.ScalePos">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.ShowScale">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.TickMarks">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.TickStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTrackBar.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomTreeView">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTreeNodes">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTreeNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TNodeState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeState.nsCut">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeState.nsDropHilited">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeState.nsFocused">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeState.nsSelected">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeState.nsMultiSelected">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeState.nsExpanded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeState.nsHasChildren">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TNodeStates">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TNodeAttachMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeAttachMode.naAdd">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeAttachMode.naAddFirst">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeAttachMode.naAddChild">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeAttachMode.naAddChildFirst">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeAttachMode.naInsert">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNodeAttachMode.naInsertBehind">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TAddMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAddMode.taAddFirst">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAddMode.taAdd">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TAddMode.taInsert">
<short></short>
</element>

<!-- pointer type Visibility: default -->
<element name="TTreeNodeArray">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="ETreeNodeError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="ETreeViewError">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="NodeAttachModeNames">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="AddModeNames">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="LCLStreamID">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVChangingEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVChangingEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVChangingEvent.Node">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVChangingEvent.AllowChange">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVChangedEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVChangedEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVChangedEvent.Node">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVEditingEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVEditingEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVEditingEvent.Node">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVEditingEvent.AllowEdit">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVEditedEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVEditedEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVEditedEvent.Node">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVEditedEvent.S">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVExpandingEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVExpandingEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVExpandingEvent.Node">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVExpandingEvent.AllowExpansion">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVCollapsingEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVCollapsingEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCollapsingEvent.Node">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCollapsingEvent.AllowCollapse">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVExpandedEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVExpandedEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVExpandedEvent.Node">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVCompareEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVCompareEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCompareEvent.Node1">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCompareEvent.Node2">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCompareEvent.Compare">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVCustomDrawEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVCustomDrawEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCustomDrawEvent.ARect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCustomDrawEvent.DefaultDraw">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVCustomDrawItemEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVCustomDrawItemEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCustomDrawItemEvent.Node">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCustomDrawItemEvent.State">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVCustomDrawItemEvent.DefaultDraw">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVAdvancedCustomDrawEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawEvent.ARect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawEvent.Stage">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawEvent.DefaultDraw">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTVAdvancedCustomDrawItemEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawItemEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawItemEvent.Node">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawItemEvent.State">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawItemEvent.Stage">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawItemEvent.PaintImages">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTVAdvancedCustomDrawItemEvent.DefaultDraw">
<short></short>
</element>

<!-- function type Visibility: default -->
<element name="TTreeNodeCompare">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodeCompare.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodeCompare.Node1">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodeCompare.Node2">
<short></short>
</element>

<!-- pointer type Visibility: default -->
<element name="PTreeNodeInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TTreeNodeInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeInfo.ImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeInfo.SelectedIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeInfo.StateIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeInfo.OverlayIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeInfo.Data">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeInfo.Count">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeInfo.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeInfo.Expanded">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeInfo.TextLen">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- pointer type Visibility: default -->
<element name="PDelphiNodeInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TDelphiNodeInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDelphiNodeInfo.ImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDelphiNodeInfo.SelectedIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDelphiNodeInfo.StateIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDelphiNodeInfo.OverlayIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDelphiNodeInfo.Data">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDelphiNodeInfo.Count">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TDelphiNodeInfo.Text">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTreeNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FOwner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FCapacity">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FData">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FDeleting">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FInTree">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FNextBrother">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FNextMultiSelected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FOverlayIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FParent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FPrevBrother">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FPrevMultiSelected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FSelectedIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FStateIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FStates">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FSubTreeCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FText">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNode.FTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.AreParentsExpanded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.AreParentsExpanded.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.BindToMultiSelected">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.CompareCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.CompareCount.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.CompareCount.CompareMe">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.DoCanExpand">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DoCanExpand.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.DoCanExpand.ExpandIt">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.DoExpand">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.DoExpand.ExpandIt">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.ExpandItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.ExpandItem.ExpandIt">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.ExpandItem.Recurse">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetAbsoluteIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetAbsoluteIndex.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetHasChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetHasChildren.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetCount.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetCut">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetCut.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetDropTarget">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetDropTarget.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetExpanded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetExpanded.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetFocused">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetFocused.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetHeight.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetIndex.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetItems.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.GetItems.AnIndex">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetLevel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetLevel.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetMultiSelected">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetMultiSelected.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetSelected">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetSelected.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetState.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.GetState.NodeState">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetTreeNodes">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetTreeNodes.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetTreeView">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetTreeView.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.GetTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetTop.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.InternalMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.InternalMove.ANode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.InternalMove.AddMode">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.IsEqual">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.IsEqual.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.IsEqual.Node">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.IsNodeVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.IsNodeVisible.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNode.IsNodeHeightFullVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.IsNodeHeightFullVisible.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.ReadData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.ReadData.Stream">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.ReadData.StreamVersion">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.ReadData.Info">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.ReadDelphiData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.ReadDelphiData.Stream">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.ReadDelphiData.Info">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetCut">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetCut.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetData.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetDropTarget">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetDropTarget.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetExpanded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetExpanded.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetFocused">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetFocused.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetHasChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetHasChildren.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetHeight.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetImageIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetItems.AnIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetItems.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetMultiSelected">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetMultiSelected.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetOverlayIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetOverlayIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetSelected">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetSelected.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetSelectedIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetSelectedIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetStateIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetStateIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.SetText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.SetText.S">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.Unbind">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.UnbindFromMultiSelected">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.WriteData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.WriteData.Stream">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.WriteData.Info">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNode.WriteDelphiData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.WriteDelphiData.Stream">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.WriteDelphiData.Info">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TTreeNode.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.Create.AnOwner">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.AlphaSort">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.AlphaSort.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.Assign.Source">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.Collapse">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.Collapse.Recurse">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.CustomSort">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.CustomSort.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.CustomSort.SortProc">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.DefaultTreeViewSort">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DefaultTreeViewSort.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.DefaultTreeViewSort.Node1">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.DefaultTreeViewSort.Node2">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.Delete">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.DeleteChildren">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- destructor Visibility: public -->
<element name="TTreeNode.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.DisplayExpandSignLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DisplayExpandSignLeft.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.DisplayExpandSignRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DisplayExpandSignRect.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.DisplayExpandSignRight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DisplayExpandSignRight.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.DisplayIconLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DisplayIconLeft.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.DisplayRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DisplayRect.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.DisplayRect.TextOnly">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.DisplayStateIconLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DisplayStateIconLeft.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.DisplayTextLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DisplayTextLeft.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.DisplayTextRight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.DisplayTextRight.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.EditText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.EditText.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.EndEdit">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.EndEdit.Cancel">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.Expand">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.Expand.Recurse">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.ExpandParents">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.Bottom">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.Bottom.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.BottomExpanded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.BottomExpanded.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetFirstChild">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetFirstChild.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetHandle.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetLastSibling">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetLastSibling.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetLastChild">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetLastChild.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetLastSubChild">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetLastSubChild.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetNext">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetNext.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetNextChild">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetNextChild.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.GetNextChild.AValue">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetNextExpanded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetNextExpanded.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetNextMultiSelected">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetNextMultiSelected.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetNextSibling">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetNextSibling.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetNextVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetNextVisible.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetPrev">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetPrev.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetPrevChild">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetPrevChild.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.GetPrevChild.AValue">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetPrevExpanded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetPrevExpanded.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetPrevMultiSelected">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetPrevMultiSelected.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetPrevSibling">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetPrevSibling.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.GetPrevVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.GetPrevVisible.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.HasAsParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.HasAsParent.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.HasAsParent.AValue">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.IndexOf">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.IndexOf.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.IndexOf.AValue">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNode.IndexOfText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNode.IndexOfText.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.IndexOfText.NodeText">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.MakeVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.MoveTo">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.MoveTo.Destination">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.MoveTo.Mode">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.MultiSelectGroup">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.Update">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.ConsistencyCheck">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNode.WriteDebugReport">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.WriteDebugReport.Prefix">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.WriteDebugReport.Recurse">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.AbsoluteIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Count">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Cut">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Data">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Deleting">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Focused">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.DropTarget">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Expanded">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Handle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.HasChildren">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.ImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Index">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.IsVisible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.IsFullHeightVisible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNode.Items.ItemIndex">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Level">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.MultiSelected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.OverlayIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Owner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Parent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Selected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.SelectedIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.SubTreeCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.StateIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Text">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.TreeNodes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.TreeView">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNode.Top">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- pointer type Visibility: default -->
<element name="PNodeCache">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- record type Visibility: default -->
<element name="TNodeCache">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TNodeCache.CacheNode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TNodeCache.CacheIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTreeNodes">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNodes.FCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNodes.FFirstMultiSelected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNodes.FKeepCollapsedNodes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNodes.FNodeCache">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNodes.FOwner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNodes.FTopLvlCapacity">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNodes.FTopLvlCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNodes.FTopLvlItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TTreeNodes.FUpdateCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.AddedNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddedNode.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.ClearCache">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TTreeNodes.GetHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.GetHandle.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNodes.GetNodeFromIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.GetNodeFromIndex.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.GetNodeFromIndex.Index">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TTreeNodes.GetTopLvlItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.GetTopLvlItems.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.GetTopLvlItems.Index">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.GrowTopLvlItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TTreeNodes.IndexOfTopLvlItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.IndexOfTopLvlItem.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.IndexOfTopLvlItem.Node">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.MoveTopLvlNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.MoveTopLvlNode.TopLvlFromIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.MoveTopLvlNode.TopLvlToIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.MoveTopLvlNode.Node">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.ReadData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.ReadData.Stream">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.ReadExpandedState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.ReadExpandedState.Stream">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.Repaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.Repaint.ANode">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.ShrinkTopLvlItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.SetTopLvlItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.SetTopLvlItems.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.SetTopLvlItems.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.WriteData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.WriteData.Stream">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TTreeNodes.WriteExpandedState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.WriteExpandedState.Stream">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TTreeNodes.InternalAddObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.InternalAddObject.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InternalAddObject.Node">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InternalAddObject.S">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InternalAddObject.Data">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InternalAddObject.AddMode">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTreeNodes.DefineProperties">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.DefineProperties.Filer">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TTreeNodes.GetCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.GetCount.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTreeNodes.SetItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.SetItem.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.SetItem.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TTreeNodes.SetUpdateState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.SetUpdateState.Updating">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TTreeNodes.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.Create.AnOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TTreeNodes.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.Add">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.Add.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.Add.SiblingNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.Add.S">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.AddChild">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.AddChild.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChild.ParentNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChild.S">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.AddChildFirst">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.AddChildFirst.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChildFirst.ParentNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChildFirst.S">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.AddChildObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.AddChildObject.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChildObject.ParentNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChildObject.S">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChildObject.Data">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.AddChildObjectFirst">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.AddChildObjectFirst.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChildObjectFirst.ParentNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChildObjectFirst.S">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddChildObjectFirst.Data">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.AddFirst">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.AddFirst.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddFirst.SiblingNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddFirst.S">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.AddObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.AddObject.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddObject.SiblingNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddObject.S">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddObject.Data">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.AddObjectFirst">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.AddObjectFirst.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddObjectFirst.SiblingNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddObjectFirst.S">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.AddObjectFirst.Data">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNodes.Assign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.Assign.Source">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNodes.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNodes.Clear">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNodes.ClearMultiSelection">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.IsMultiSelection">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.IsMultiSelection.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNodes.Delete">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.Delete.Node">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNodes.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.GetFirstNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.GetFirstNode.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.GetLastNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.GetLastNode.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.GetLastSubNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.GetLastSubNode.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.GetLastExpandedSubNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.GetLastExpandedSubNode.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.Insert">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.Insert.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.Insert.NextNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.Insert.S">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.InsertObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.InsertObject.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InsertObject.NextNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InsertObject.S">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InsertObject.Data">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.InsertBehind">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.InsertBehind.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InsertBehind.PrevNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InsertBehind.S">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TTreeNodes.InsertObjectBehind">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TTreeNodes.InsertObjectBehind.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InsertObjectBehind.PrevNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InsertObjectBehind.S">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.InsertObjectBehind.Data">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNodes.ConsistencyCheck">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TTreeNodes.WriteDebugReport">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.WriteDebugReport.Prefix">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.WriteDebugReport.AllNodes">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TTreeNodes.Count">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNodes.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.Items.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TTreeNodes.KeepCollapsedNodes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNodes.Owner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNodes.TopLvlCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TTreeNodes.TopLvlItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodes.TopLvlItems.Index">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTreeViewState">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsScrollbarChanged">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsMaxRightNeedsUpdate">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsTopsNeedsUpdate">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsMaxLvlNeedsUpdate">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsTopItemNeedsUpdate">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsBottomItemNeedsUpdate">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsCanvasChanged">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsDragged">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsIsEditing">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsStateChanging">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsManualNotify">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsUpdating">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsPainting">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsMouseCapture">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsWaitForDragging">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsDblClicked">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsTripleClicked">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsQuadClicked">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewState.tvsSelectionChanged">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TTreeViewStates">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTreeViewOption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoAllowMultiselect">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoAutoExpand">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoAutoInsertMark">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoAutoItemHeight">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoHideSelection">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoHotTrack">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoKeepCollapsedNodes">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoReadOnly">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoRightClickSelect">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoRowSelect">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoShowButtons">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoShowLines">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoShowRoot">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoShowSeparators">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewOption.tvoToolTips">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TTreeViewOptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="DefaultTreeViewOptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTreeViewExpandSignType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewExpandSignType.tvestPlusMinus">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewExpandSignType.tvestArrow">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTreeViewInsertMarkType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewInsertMarkType.tvimNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewInsertMarkType.tvimAsFirstChild">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewInsertMarkType.tvimAsNextSibling">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTreeViewInsertMarkType.tvimAsPrevSibling">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TCustomTreeView">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FBackgroundColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FBottomItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FExpandSignType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FExpandSignSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FDefItemHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FDragImage">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FDragNode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FIndent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FImageChangeLink">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FInsertMarkNode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FInsertMarkType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FLastDropTarget">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FLastHorzScrollInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FLastVertScrollInfo">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FMaxLvl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FMaxRight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.fMouseDownX">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.fMouseDownY">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnAdvancedCustomDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnAdvancedCustomDrawItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnCollapsed">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnCollapsing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnCompare">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnCustomDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnCustomDrawItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnDeletion">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnEditing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnEdited">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnExpanded">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnExpanding">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnGetSelectedIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOnSelectionChanged">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FOptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FRClickNode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FSaveItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FScrollBars">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FScrolledLeft">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FScrolledTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FSelectedColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FSelectedNode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.fSelectionChangeEventLock">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.fSeparatorColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FSortType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FStateChangeLink">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FStateImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FStates">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FTopItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FTreeLineColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FTreeNodes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomTreeView.FUpdateCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.CanvasChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CanvasChanged.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.CMDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CMDrag.AMessage">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetAutoExpand">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetAutoExpand.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetBottomItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetBottomItem.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetChangeDelay">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetChangeDelay.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetDropTarget">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetDropTarget.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetHideSelection">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetHideSelection.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetHotTrack">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetHotTrack.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetKeepCollapsedNodes">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetKeepCollapsedNodes.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetReadOnly">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetReadOnly.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetRightClickSelect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetRightClickSelect.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetRowSelect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetRowSelect.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetSelection">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetSelection.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetShowButtons">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetShowButtons.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetShowLines">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetShowLines.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetShowRoot">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetShowRoot.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetShowSeparators">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetShowSeparators.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetToolTips">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetToolTips.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomTreeView.GetTopItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetTopItem.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.ImageListChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.ImageListChange.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.OnChangeTimer">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.OnChangeTimer.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetAutoExpand">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetAutoExpand.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetBackgroundColor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetBackgroundColor.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetBottomItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetBottomItem.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetChangeDelay">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetChangeDelay.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetDefaultItemHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetDefaultItemHeight.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetExpandSignType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetExpandSignType.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetDropTarget">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetDropTarget.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetHideSelection">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetHideSelection.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetHotTrack">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetHotTrack.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetIndent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetIndent.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetImages.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetInsertMarkNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetInsertMarkNode.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetInsertMarkType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetInsertMarkType.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetKeepCollapsedNodes">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetKeepCollapsedNodes.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetReadOnly">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetReadOnly.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetRightClickSelect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetRightClickSelect.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetRowSelect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetRowSelect.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetScrollBars">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetScrollBars.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetScrolledLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetScrolledLeft.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetScrolledTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetScrolledTop.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetSelectedColor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetSelectedColor.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetSelection">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetSelection.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetSeparatorColor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetSeparatorColor.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetShowButton">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetShowButton.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetShowLines">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetShowLines.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetShowRoot">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetShowRoot.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetShowSeparators">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetShowSeparators.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetSortType">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetSortType.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetStateImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetStateImages.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetToolTips">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetToolTips.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetTreeLineColor">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetTreeLineColor.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetTreeNodes">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetTreeNodes.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.SetTopItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetTopItem.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.UpdateAllTops">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.UpdateBottomItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.UpdateMaxLvl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.UpdateMaxRight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.UpdateTopItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.UpdateScrollbars">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomTreeView.InternalSelectionChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: protected -->
<element name="TCustomTreeView.FChangeTimer">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.CanChange">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.CanChange.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CanChange.Node">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.CanCollapse">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.CanCollapse.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CanCollapse.Node">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.CanEdit">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.CanEdit.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CanEdit.Node">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.CanExpand">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.CanExpand.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CanExpand.Node">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.CreateNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.CreateNode.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.CustomDraw">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.CustomDraw.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CustomDraw.ARect">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CustomDraw.Stage">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.CustomDrawItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.CustomDrawItem.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CustomDrawItem.Node">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CustomDrawItem.State">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CustomDrawItem.Stage">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CustomDrawItem.PaintImages">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.GetDragImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetDragImages.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.GetMaxLvl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetMaxLvl.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.GetMaxScrollLeft">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetMaxScrollLeft.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.GetMaxScrollTop">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetMaxScrollTop.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.GetNodeAtInternalY">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetNodeAtInternalY.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetNodeAtInternalY.Y">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.GetNodeAtY">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetNodeAtY.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetNodeAtY.Y">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.GetNodeDrawAreaHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetNodeDrawAreaHeight.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.GetNodeDrawAreaWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetNodeDrawAreaWidth.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.IsCustomDrawn">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.IsCustomDrawn.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.IsCustomDrawn.Target">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.IsCustomDrawn.Stage">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.IsNodeVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.IsNodeVisible.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.IsNodeVisible.ANode">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.IsNodeHeightFullVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.IsNodeHeightFullVisible.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.IsNodeHeightFullVisible.ANode">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomTreeView.IsInsertMarkVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.IsInsertMarkVisible.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.Change">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.Change.Node">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.Collapse">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.Collapse.Node">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.CreateParams">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CreateParams.Params">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.CreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.Delete">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.Delete.Node">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.DestroyWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.DoEndDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DoEndDrag.Target">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DoEndDrag.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DoEndDrag.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.DragOver">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DragOver.Source">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DragOver.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DragOver.Y">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DragOver.State">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DragOver.Accept">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.DoPaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.DoPaintNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DoPaintNode.Node">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.DoStartDrag">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.DoStartDrag.DragObject">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.EndEditing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.EnsureNodeIsVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.EnsureNodeIsVisible.ANode">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.Expand">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.Expand.Node">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.GetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetImageIndex.Node">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.GetSelectedIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetSelectedIndex.Node">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.InitializeWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.Invalidate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.EraseBackground">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.EraseBackground.DC">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.KeyDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.KeyDown.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.KeyDown.Shift">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.MouseDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseDown.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseDown.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseDown.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseDown.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.MouseMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseMove.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseMove.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseMove.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.MouseUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseUp.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseUp.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseUp.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.MouseUp.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.SetDragMode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetDragMode.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.SetOptions">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetOptions.NewOptions">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.UpdateDefaultItemHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.WndProc">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.WndProc.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.UpdateInsertMark">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.UpdateInsertMark.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.UpdateInsertMark.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.DoSelectionChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.WMHScroll">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.WMHScroll.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.WMVScroll">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.WMVScroll.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.WMLButtonDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.WMLButtonDown.AMessage">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.WMNotify">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.WMNotify.AMessage">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomTreeView.Resize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.AutoExpand">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.ChangeDelay">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.HideSelection">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.HotTrack">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.Images">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.Indent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnAdvancedCustomDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnAdvancedCustomDrawItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnCollapsed">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnCollapsing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnCompare">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnCustomDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnCustomDrawItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnDeletion">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnEdited">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnEditing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnExpanded">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnExpanding">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnGetSelectedIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.OnSelectionChanged">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.ReadOnly">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.RightClickSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.RowSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.ScrolledLeft">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.ScrolledTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.ShowButtons">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.ShowLines">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.ShowRoot">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.ShowSeparators">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.SortType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.StateImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomTreeView.ToolTips">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomTreeView.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.Create.AnOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomTreeView.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomTreeView.AlphaSort">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.AlphaSort.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.ConsistencyCheck">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomTreeView.CustomSort">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.CustomSort.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.CustomSort.SortProc">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomTreeView.GetHitTestInfoAt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetHitTestInfoAt.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetHitTestInfoAt.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetHitTestInfoAt.Y">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomTreeView.GetNodeAt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetNodeAt.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetNodeAt.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetNodeAt.Y">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.GetInsertMarkAt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetInsertMarkAt.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetInsertMarkAt.Y">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetInsertMarkAt.AnInsertMarkNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.GetInsertMarkAt.AnInsertMarkType">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.SetInsertMark">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetInsertMark.AnInsertMarkNode">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetInsertMark.AnInsertMarkType">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.SetInsertMarkAt">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetInsertMarkAt.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SetInsertMarkAt.Y">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomTreeView.IsEditing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.IsEditing.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.BeginUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.EndUpdate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.FullCollapse">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.FullExpand">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.LoadFromFile">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.LoadFromFile.FileName">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.LoadFromStream">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.LoadFromStream.Stream">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.SaveToFile">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SaveToFile.FileName">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.SaveToStream">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.SaveToStream.Stream">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.WriteDebugReport">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.WriteDebugReport.Prefix">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomTreeView.WriteDebugReport.AllNodes">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.LockSelectionChangeEvent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.UnlockSelectionChangeEvent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomTreeView.GetFirstMultiSelected">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.GetFirstMultiSelected.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomTreeView.SelectionVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomTreeView.SelectionVisible.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomTreeView.MakeSelectionVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.BackgroundColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.BorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.BottomItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.DefaultItemHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.DropTarget">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.ExpandSignType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.InsertMarkNode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.InsertMarkType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.KeepCollapsedNodes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.Options">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.ScrollBars">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.Selected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.SelectionColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.SeparatorColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.TopItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomTreeView.TreeLineColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomTreeView.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTreeView">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.AutoExpand">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.BackgroundColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.BorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ChangeDelay">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Ctl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.DefaultItemHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.DragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ExpandSignType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.HideSelection">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.HotTrack">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Images">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Indent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ParentCtl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ReadOnly">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.RightClickSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.RowSelect">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ScrollBars">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.SelectionColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ShowButtons">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ShowLines">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ShowRoot">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.SortType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.StateImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Tag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.ToolTips">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnAdvancedCustomDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnAdvancedCustomDrawItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnCollapsed">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnCollapsing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnCompare">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnCustomDraw">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnCustomDrawItem">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnDeletion">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnEdited">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnEditing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnExpanded">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnExpanding">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnGetSelectedIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnKeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnKeyUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnSelectionChanged">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Options">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TTreeView.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTreeNodeExpandedState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeExpandedState.NodeText">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: default -->
<element name="TTreeNodeExpandedState.Childs">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: default -->
<element name="TTreeNodeExpandedState.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodeExpandedState.Create.FirstTreeNode">
<short></short>
</element>

<!-- constructor Visibility: default -->
<element name="TTreeNodeExpandedState.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodeExpandedState.Create.TreeView">
<short></short>
</element>

<!-- destructor Visibility: default -->
<element name="TTreeNodeExpandedState.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="TTreeNodeExpandedState.Clear">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="TTreeNodeExpandedState.CreateChildNodes">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodeExpandedState.CreateChildNodes.FirstTreeNode">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TTreeNodeExpandedState.Apply">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodeExpandedState.Apply.FirstTreeNode">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="TTreeNodeExpandedState.Apply">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTreeNodeExpandedState.Apply.TreeView">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="CompareExpandedNodes">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="CompareExpandedNodes.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="CompareExpandedNodes.Data1">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="CompareExpandedNodes.Data2">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="CompareTextWithExpandedNode">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="CompareTextWithExpandedNode.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="CompareTextWithExpandedNode.Key">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="CompareTextWithExpandedNode.Data">
<short></short>
</element>

<!-- function Visibility: default -->
<element name="InitCommonControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="InitCommonControl.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="InitCommonControl.CC">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="CheckCommonControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="CheckCommonControl.CC">
<short></short>
</element>

<!-- procedure Visibility: default -->
<element name="Register">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>
</module> <!-- ComCtrls -->
</package>
</fpdoc-descriptions>
