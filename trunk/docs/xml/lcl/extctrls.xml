<?xml version="1.0" encoding="ISO8859-1"?>
<fpdoc-descriptions>
<package name="lcl">

<!--
  ====================================================================
    ExtCtrls
  ====================================================================
-->

<module name="ExtCtrls">
<short></short>
<descr>
</descr>

<!-- unresolved type reference Visibility: default -->
<element name="SysUtils">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Classes">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLStrConsts">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLProc">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LResources">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Controls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Forms">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="StdCtrls">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="lMessages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="GraphType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="Graphics">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="LCLIntf">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- unresolved type reference Visibility: default -->
<element name="CustomTimer">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- alias type Visibility: default -->
<element name="TAbstractReader">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TPageFlag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPageFlag.pfAdded">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TPageFlag.pfRemoving">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TPageFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomPage.FFlags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomPage.FImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TCustomPage.GetTabVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomPage.GetTabVisible.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomPage.SetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPage.SetImageIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomPage.SetTabVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPage.SetTabVisible.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomPage.WMPaint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPage.WMPaint.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomPage.SetParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPage.SetParent.AParent">
<short></short>
</element>

<!-- property Visibility: protected -->
<element name="TCustomPage.Flags">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomPage.CMHitTest">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPage.CMHitTest.Message">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomPage.DestroyHandle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TCustomPage.GetPageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomPage.GetPageIndex.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomPage.SetPageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPage.SetPageIndex.AValue">
<short></short>
</element>

<!-- property Visibility: protected -->
<element name="TCustomPage.TabVisible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPage.PageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomPage.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPage.Create.TheOwner">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomPage.AdjustClientRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPage.AdjustClientRect.ARect">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomPage.CanTab">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomPage.CanTab.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomPage.IsVisible">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomPage.IsVisible.Result">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomPage.ImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPage.Left">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPage.Top">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPage.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPage.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPage.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- "class of" type Visibility: default -->
<element name="TCustomPageClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomNotebook">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TNBPages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TNBPages.FPageList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TNBPages.FNotebook">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TNBPages.Get">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TNBPages.Get.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Get.Index">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TNBPages.GetCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TNBPages.GetCount.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TNBPages.GetObject">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TNBPages.GetObject.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.GetObject.Index">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TNBPages.Put">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Put.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Put.S">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TNBPages.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Create.thePageList">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Create.theNotebook">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TNBPages.Clear">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TNBPages.Delete">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Delete.Index">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TNBPages.Insert">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Insert.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Insert.S">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TNBPages.Move">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Move.CurIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TNBPages.Move.NewIndex">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTabChangingEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabChangingEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabChangingEvent.AllowChange">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTabPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabPosition.tpTop">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabPosition.tpBottom">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabPosition.tpLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabPosition.tpRight">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TTabStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabStyle.tsTabs">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabStyle.tsButtons">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TTabStyle.tsFlatButtons">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TTabGetImageEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TTabGetImageEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabGetImageEvent.TabIndex">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TTabGetImageEvent.ImageIndex">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TNoteBookOption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNoteBookOption.nboShowCloseButtons">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TNoteBookOption.nboMultiLine">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TNoteBookOptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomNotebook">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FAccess">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FAddingPages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FImages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FLoadedPageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FOnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FOnCloseTabClicked">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FOnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.fOnPageChanged">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FOptions">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FPageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FPageIndexOnLastChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FPageList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FShowTabs">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomNotebook.FTabPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.CNNotify">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.CNNotify.Message">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.DoSendPageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.DoSendShowTabs">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.DoSendTabPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TCustomNotebook.GetActivePage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.GetActivePage.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomNotebook.GetActivePageComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.GetActivePageComponent.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomNotebook.GetPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.GetPage.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.GetPage.aIndex">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomNotebook.GetPageCount">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.GetPageCount.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomNotebook.GetPageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.GetPageIndex.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.InsertPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.InsertPage.APage">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.InsertPage.Index">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomNotebook.IsStoredActivePage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.IsStoredActivePage.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.MoveTab">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.MoveTab.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.MoveTab.NewIndex">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.WSMovePage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.WSMovePage.APage">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.WSMovePage.NewIndex">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.RemovePage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.RemovePage.Index">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.SetActivePage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.SetActivePage.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.SetActivePageComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.SetActivePageComponent.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.SetImages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.SetImages.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.SetOptions">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.SetOptions.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.SetPageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.SetPageIndex.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.SetPages">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.SetPages.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.SetShowTabs">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.SetShowTabs.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.SetTabPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.SetTabPosition.tabPos">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.ShowCurrentPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.UpdateAllDesignerFlags">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomNotebook.UpdateDesignerFlags">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.UpdateDesignerFlags.APageIndex">
<short></short>
</element>

<!-- variable Visibility: protected -->
<element name="TCustomNotebook.PageClass">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomNotebook.CreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomNotebook.DoCreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomNotebook.Change">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomNotebook.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomNotebook.ReadState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.ReadState.Reader">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomNotebook.ShowControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.ShowControl.APage">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomNotebook.UpdateTabProperties">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TCustomNotebook.ChildClassAllowed">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.ChildClassAllowed.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.ChildClassAllowed.ChildClass">
<short></short>
</element>

<!-- property Visibility: protected -->
<element name="TCustomNotebook.ActivePageComponent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomNotebook.ActivePage">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomNotebook.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomNotebook.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomNotebook.TabIndexAtClientPos">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.TabIndexAtClientPos.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.TabIndexAtClientPos.ClientPos">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomNotebook.CanTab">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.CanTab.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomNotebook.GetImageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.GetImageIndex.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.GetImageIndex.ThePageIndex">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomNotebook.IndexOf">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.IndexOf.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.IndexOf.APage">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomNotebook.CustomPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.CustomPage.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.CustomPage.Index">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomNotebook.CanChangePageIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.CanChangePageIndex.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomNotebook.GetMinimumTabWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.GetMinimumTabWidth.Result">
<short></short>
</element>

<!-- function Visibility: public -->
<element name="TCustomNotebook.GetMinimumTabHeight">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomNotebook.GetMinimumTabHeight.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomNotebook.DoCloseTabClicked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.DoCloseTabClicked.APage">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.Images">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.OnChanging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.OnCloseTabClicked">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.OnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.OnPageChanged">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.Options">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.Page">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomNotebook.Page.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.PageCount">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.PageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.PageList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.Pages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.ShowTabs">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomNotebook.TabPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCustomNotebook.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.ClientWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.ClientHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.ImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.Left">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.Top">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.PageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPage.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TNotebook">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TNotebook.GetActiveNotebookPageComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TNotebook.GetActiveNotebookPageComponent.Result">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TNotebook.GetNoteBookPage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TNotebook.GetNoteBookPage.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TNotebook.GetNoteBookPage.Index">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TNotebook.SetActiveNotebookPageComponent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TNotebook.SetActiveNotebookPageComponent.AValue">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TNotebook.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TNotebook.Create.TheOwner">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TNotebook.Page">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TNotebook.Page.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TNotebook.ActivePageComponent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TNotebook.Pages">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.ActivePage">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.Images">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnCloseTabClicked">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnContextPopup">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnGetImageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnPageChanged">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.Options">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.PageIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TNotebook.ShowTabs">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TTimer">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TIdleTimerAutoEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TIdleTimerAutoEvent.itaOnIdle">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TIdleTimerAutoEvent.itaOnIdleEnd">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TIdleTimerAutoEvent.itaOnUserInput">
<short></short>
</element>

<!-- set type Visibility: default -->
<element name="TIdleTimerAutoEvents">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TIdleTimer">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TIdleTimer.FAutoEnabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TIdleTimer.FAutoEndEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TIdleTimer.FAutoStartEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TIdleTimer.FHandlersConnected">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TIdleTimer.UpdateHandlers">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TIdleTimer.SetAutoEndEvent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIdleTimer.SetAutoEndEvent.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TIdleTimer.SetAutoStartEvent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIdleTimer.SetAutoStartEvent.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TIdleTimer.SetAutoEnabled">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIdleTimer.SetAutoEnabled.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TIdleTimer.DoOnIdle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIdleTimer.DoOnIdle.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TIdleTimer.DoOnIdleEnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIdleTimer.DoOnIdleEnd.Sender">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TIdleTimer.DoOnUserInput">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIdleTimer.DoOnUserInput.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TIdleTimer.DoOnUserInput.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TIdleTimer.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TIdleTimer.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TIdleTimer.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TIdleTimer.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TIdleTimer.AutoEnabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TIdleTimer.AutoEndEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TIdleTimer.AutoStartEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TShapeType">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TShapeType.stRectangle">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TShapeType.stSquare">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TShapeType.stRoundRect">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TShapeType.stRoundSquare">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TShapeType.stEllipse">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TShapeType.stCircle">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TShapeType.stSquaredDiamond">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TShapeType.stDiamond">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TShape">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TShape.FPen">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TShape.FBrush">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TShape.FShape">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TShape.SetBrush">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TShape.SetBrush.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TShape.SetPen">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TShape.SetPen.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TShape.SetShape">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TShape.SetShape.Value">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TShape.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TShape.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TShape.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TShape.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TShape.StyleChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TShape.StyleChanged.Sender">
<short></short>
</element>

<!-- property Visibility: published -->
<element name="TShape.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.Brush">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.DragCursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.DragKind">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.Pen">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.Shape">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TShape.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TResizeStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TResizeStyle.rsLine">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TResizeStyle.rsNone">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TResizeStyle.rsPattern">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TResizeStyle.rsUpdate">
<short></short>
</element>

<!-- procedure type Visibility: default -->
<element name="TCanResizeEvent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCanResizeEvent.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCanResizeEvent.NewSize">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCanResizeEvent.Accept">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TCustomSplitter">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomSplitter.FAutoSnap">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomSplitter.FBeveled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomSplitter.FMinSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomSplitter.FOnCanResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomSplitter.FOnMoved">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomSplitter.FResizeStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomSplitter.FSplitDragging">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomSplitter.fSplitterStartMouseXY">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomSplitter.fSplitterStartLeftTop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomSplitter.SetAutoSnap">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.SetAutoSnap.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomSplitter.SetBeveled">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.SetBeveled.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomSplitter.SetMinSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.SetMinSize.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomSplitter.SetResizeStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.SetResizeStyle.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomSplitter.StartSplitterMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.StartSplitterMove.Restart">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.StartSplitterMove.MouseXY">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomSplitter.MouseDown">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseDown.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseDown.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseDown.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseDown.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomSplitter.MouseMove">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseMove.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseMove.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseMove.Y">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomSplitter.MouseUp">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseUp.Button">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseUp.Shift">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseUp.X">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.MouseUp.Y">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomSplitter.FindAlignControl">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomSplitter.FindAlignControl.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomSplitter.SetAlign">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.SetAlign.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomSplitter.SetAnchors">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.SetAnchors.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomSplitter.CheckAlignment">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TCustomSplitter.CheckNewSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomSplitter.CheckNewSize.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.CheckNewSize.NewSize">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomSplitter.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomSplitter.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomSplitter.Create.TheOwner">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomSplitter.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomSplitter.ResizeStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomSplitter.AutoSnap">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomSplitter.Beveled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomSplitter.MinSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomSplitter.OnCanResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomSplitter.OnMoved">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomSplitter.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomSplitter.Cursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TSplitter">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.AutoSnap">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.Beveled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.Cursor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.MinSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.ResizeStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.OnCanResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TSplitter.OnMoved">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TPaintBox">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TPaintBox.FOnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TPaintBox.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TPaintBox.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TPaintBox.Create.AOwner">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TPaintBox.Canvas">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.Hint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnMouseEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnMouseLeave">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPaintBox.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomImage.FPicture">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomImage.FCenter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomImage.FProportional">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomImage.FTransparent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomImage.FStretch">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomImage.SetPicture">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomImage.SetPicture.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomImage.SetCenter">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomImage.SetCenter.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomImage.SetProportional">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomImage.SetProportional.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomImage.SetStretch">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomImage.SetStretch.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomImage.SetTransparent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomImage.SetTransparent.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomImage.PictureChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomImage.PictureChanged.SEnder">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomImage.DestRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomImage.DestRect.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomImage.DoAutoSize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomImage.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomImage.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomImage.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomImage.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.Center">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.Picture">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.Stretch">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.Transparent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomImage.Proportional">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TImage">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.Center">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.OnMouseEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.OnMouseLeave">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.OnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.Picture">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.Proportional">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.Stretch">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.Transparent">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TImage.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TBevelStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBevelStyle.bsLowered">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBevelStyle.bsRaised">
<short></short>
</element>

<!-- enumeration type Visibility: default -->
<element name="TBevelShape">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBevelShape.bsBox">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBevelShape.bsFrame">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBevelShape.bsTopLine">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBevelShape.bsBottomLine">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBevelShape.bsLeftLine">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TBevelShape.bsRightLine">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TBevel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TBevel.FStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TBevel.FShape">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TBevel.GetStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TBevel.GetStyle.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TBevel.SetStyle">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TBevel.SetStyle.aStyle">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TBevel.GetShape">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TBevel.GetShape.Result">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TBevel.SetShape">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TBevel.SetShape.aShape">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TBevel.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TBevel.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TBevel.Create.AOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TBevel.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: public -->
<element name="TBevel.Invalidate">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Left">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Name">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Shape">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Top">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Style">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBevel.OnPaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TColumnLayout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TColumnLayout.clHorizontalThenVertical">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TColumnLayout.clVerticalThenHorizontal">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TCustomRadioGroup">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomRadioGroup.FButtonList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomRadioGroup.FColumnLayout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomRadioGroup.FHiddenButton">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomRadioGroup.FCreatingWnd">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomRadioGroup.FItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomRadioGroup.FItemIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomRadioGroup.FColumns">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomRadioGroup.FReading">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomRadioGroup.FOnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomRadioGroup.ItemsChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomRadioGroup.ItemsChanged.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomRadioGroup.Clicked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomRadioGroup.Clicked.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomRadioGroup.DoPositionButtons">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomRadioGroup.SetColumnLayout">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomRadioGroup.SetColumnLayout.AValue">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomRadioGroup.UpdateRadioButtonStates">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomRadioGroup.ReadState">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomRadioGroup.ReadState.Reader">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomRadioGroup.SetItem">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomRadioGroup.SetItem.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomRadioGroup.SetColumns">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomRadioGroup.SetColumns.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomRadioGroup.SetItemIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomRadioGroup.SetItemIndex.Value">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomRadioGroup.GetItemIndex">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomRadioGroup.GetItemIndex.Result">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomRadioGroup.Resize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomRadioGroup.ItemIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomRadioGroup.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomRadioGroup.Columns">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomRadioGroup.ColumnLayout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: protected -->
<element name="TCustomRadioGroup.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomRadioGroup.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomRadioGroup.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomRadioGroup.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomRadioGroup.CanModify">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomRadioGroup.CanModify.Result">
<short></short>
</element>

<!-- procedure Visibility: public -->
<element name="TCustomRadioGroup.CreateWnd">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomRadioGroup.Rows">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomRadioGroup.Rows.Result">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TRadioGroup">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.ColumnLayout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Columns">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Ctl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.ItemIndex">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnKeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnKeyUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.ParentCtl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TRadioGroup.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure type Visibility: default -->
<element name="TCheckGroupClicked">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCheckGroupClicked.Sender">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCheckGroupClicked.Index">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TCustomCheckGroup">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomCheckGroup.FButtonList">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomCheckGroup.FColumnLayout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomCheckGroup.FCreatingWnd">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomCheckGroup.FItems">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomCheckGroup.FColumns">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomCheckGroup.FOnItemClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- function Visibility: private -->
<element name="TCustomCheckGroup.GetChecked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomCheckGroup.GetChecked.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.GetChecked.Index">
<short></short>
</element>

<!-- function Visibility: private -->
<element name="TCustomCheckGroup.GetCheckEnabled">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomCheckGroup.GetCheckEnabled.Result">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.GetCheckEnabled.Index">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomCheckGroup.Clicked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.Clicked.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomCheckGroup.DoClick">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.DoClick.Index">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomCheckGroup.DoPositionButtons">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomCheckGroup.ItemsChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.ItemsChanged.Sender">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomCheckGroup.SetChecked">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.SetChecked.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.SetChecked.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomCheckGroup.SetCheckEnabled">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.SetCheckEnabled.Index">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.SetCheckEnabled.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomCheckGroup.SetColumnLayout">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.SetColumnLayout.AValue">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomCheckGroup.UpdateItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomCheckGroup.SetItems">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.SetItems.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomCheckGroup.SetColumns">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.SetColumns.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomCheckGroup.DefineProperties">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.DefineProperties.Filer">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomCheckGroup.ReadData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.ReadData.Stream">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomCheckGroup.WriteData">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.WriteData.Stream">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomCheckGroup.Loaded">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomCheckGroup.DoOnResize">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomCheckGroup.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.Create.TheOwner">
<short></short>
</element>

<!-- destructor Visibility: public -->
<element name="TCustomCheckGroup.Destroy">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: public -->
<element name="TCustomCheckGroup.Rows">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomCheckGroup.Rows.Result">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomCheckGroup.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomCheckGroup.Checked">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.Checked.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomCheckGroup.CheckEnabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomCheckGroup.CheckEnabled.Index">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomCheckGroup.Columns">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomCheckGroup.ColumnLayout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomCheckGroup.OnItemClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCheckGroup">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.ColumnLayout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Columns">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Ctl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Items">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnChangeBounds">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnItemClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnKeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnKeyUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.ParentCtl3D">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TCheckGroup.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TBoundLabel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TBoundLabel.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TBoundLabel.Create.TheOwner">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TBoundLabel.FocusControl">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.Height">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.Left">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.ShowAccelChar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.Top">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.Layout">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.WordWrap">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.Width">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TBoundLabel.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration type Visibility: default -->
<element name="TLabelPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- enumeration value Visibility: default -->
<element name="TLabelPosition.lpAbove">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TLabelPosition.lpBelow">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TLabelPosition.lpLeft">
<short></short>
</element>

<!-- enumeration value Visibility: default -->
<element name="TLabelPosition.lpRight">
<short></short>
</element>

<!-- object Visibility: default -->
<element name="TCustomLabeledEdit">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomLabeledEdit.FEditLabel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomLabeledEdit.FLabelPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomLabeledEdit.FLabelSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomLabeledEdit.SetLabelPosition">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.SetLabelPosition.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomLabeledEdit.SetLabelSpacing">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.SetLabelSpacing.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomLabeledEdit.SetParent">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.SetParent.AParent">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomLabeledEdit.SetName">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.SetName.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomLabeledEdit.DoSetBounds">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.DoSetBounds.ALeft">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.DoSetBounds.ATop">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.DoSetBounds.AWidth">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.DoSetBounds.AHeight">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomLabeledEdit.DoPositionLabel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomLabeledEdit.Notification">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.Notification.AComponent">
<short></short>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.Notification.Operation">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomLabeledEdit.CMVisibleChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.CMVisibleChanged.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomLabeledEdit.CMEnabledChanged">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.CMEnabledChanged.Msg">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomLabeledEdit.CreateInternalLabel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomLabeledEdit.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomLabeledEdit.Create.TheOwner">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomLabeledEdit.EditLabel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomLabeledEdit.LabelPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomLabeledEdit.LabelSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TLabeledEdit">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.CharCase">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.LabelPosition">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.LabelSpacing">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.MaxLength">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.PasswordChar">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.ReadOnly">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.Text">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnChange">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnKeyDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnKeyPress">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnKeyUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TLabeledEdit.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- alias type Visibility: default -->
<element name="TPanelBevel">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- range type Visibility: default -->
<element name="TBevelWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TCustomPanel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomPanel.FBevelInner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomPanel.FBevelOuter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomPanel.FBevelWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomPanel.FBorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomPanel.FAlignment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- variable Visibility: private -->
<element name="TCustomPanel.FFullRepaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomPanel.SetAlignment">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPanel.SetAlignment.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomPanel.SetBevelInner">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPanel.SetBevelInner.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomPanel.SetBevelOuter">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPanel.SetBevelOuter.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomPanel.SetBevelWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPanel.SetBevelWidth.Value">
<short></short>
</element>

<!-- procedure Visibility: private -->
<element name="TCustomPanel.SetBorderWidth">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPanel.SetBorderWidth.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomPanel.AdjustClientRect">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPanel.AdjustClientRect.Rect">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomPanel.RealSetText">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPanel.RealSetText.Value">
<short></short>
</element>

<!-- procedure Visibility: protected -->
<element name="TCustomPanel.Paint">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function Visibility: protected -->
<element name="TCustomPanel.ParentColorIsStored">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomPanel.ParentColorIsStored.Result">
<short></short>
</element>

<!-- function Visibility: protected -->
<element name="TCustomPanel.CanTab">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- function result Visibility: default -->
<element name="TCustomPanel.CanTab.Result">
<short></short>
</element>

<!-- constructor Visibility: public -->
<element name="TCustomPanel.Create">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- argument Visibility: default -->
<element name="TCustomPanel.Create.TheOwner">
<short></short>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.Alignment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.BevelInner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.BevelOuter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.BevelWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.BorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.FullRepaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: public -->
<element name="TCustomPanel.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- object Visibility: default -->
<element name="TPanel">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.Align">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.Alignment">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.Anchors">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.AutoSize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.BevelInner">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.BevelOuter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.BevelWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.BorderWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.BorderStyle">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.Caption">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.ClientHeight">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.ClientWidth">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.Color">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.Constraints">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.DragMode">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.Enabled">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.Font">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.FullRepaint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.ParentColor">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.ParentFont">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.ParentShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.PopupMenu">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.ShowHint">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.TabOrder">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.TabStop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.Visible">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnDblClick">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnDragDrop">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnDragOver">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnEndDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnEnter">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnExit">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnMouseDown">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnMouseMove">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnMouseUp">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnResize">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- property Visibility: published -->
<element name="TPanel.OnStartDrag">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="TCN_First">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="TCN_SELCHANGE">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- constant Visibility: default -->
<element name="TCN_SELCHANGING">
<short></short>
<descr>
</descr>
<seealso>
</seealso>
</element>

<!-- procedure Visibility: default -->
<element name="Register">
<short></short>
<descr>
</descr>
<errors>
</errors>
<seealso>
</seealso>
</element>
</module> <!-- ExtCtrls -->
</package>
</fpdoc-descriptions>
