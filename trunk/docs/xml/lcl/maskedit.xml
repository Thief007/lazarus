<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="lcl">
    <!--
  ====================================================================
    MaskEdit
  ====================================================================
-->
    <module name="MaskEdit">
      <short/>
      <descr/>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="SysUtils">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="StdCtrls">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Controls">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LMessages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="LCLType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="Graphics">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="DefaultBlank">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="MaskFieldSeparator">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="MaskNoSave">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mDirReverse">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mDirUpperCase">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mDirLowerCase">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mDirLiteral">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskAlpha">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskAlphaOpt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskAlphaNum">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskAlphaNumOpt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskAscii">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskAsciiOpt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskNumeric">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskNumericOpt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskNumSymOpt">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskTimeSeparator">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constant Visibility: default -->
      <element name="mMskDateSeparator">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="EDBEditError">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TMbcsByteType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMbcsByteType.mbSingleByte">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMbcsByteType.mbLeadByte">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMbcsByteType.mbTrailByte">
        <short/>
      </element>
      <!-- enumeration type Visibility: default -->
      <element name="TMaskCharType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskCharType.mcNone">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskCharType.mcLiteral">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskCharType.mcIntlLiteral">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskCharType.mcDirective">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskCharType.mcMask">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskCharType.mcMaskOpt">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskCharType.mcFieldSeparator">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskCharType.mcField">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TMaskDirectives">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskDirectives.mdReverseDir">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskDirectives.mdUpperCase">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskDirectives.mdLowerCase">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskDirectives.mdLiteralChar">
        <short/>
      </element>
      <!-- set type Visibility: default -->
      <element name="TMaskedState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskedState.msMasked">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskedState.msReEnter">
        <short/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TMaskedState.msDBSetText">
        <short/>
      </element>
      <!-- object Visibility: default -->
      <element name="TCustomMaskEdit">
        <short>Custom Mask Edit</short>
        <descr>Custom Mask Edit: the base type for Mask Edit</descr>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomMaskEdit.FEditMask">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomMaskEdit.FMaskBlank">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomMaskEdit.FMaxChars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomMaskEdit.FMaskSave">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomMaskEdit.FMaskState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomMaskEdit.FCaretPos">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomMaskEdit.FBtnDownX">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- variable Visibility: private -->
      <element name="TCustomMaskEdit.FOldValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.IsCharAlpha">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.IsCharAlpha.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.IsCharAlpha.AChar">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.IsCharAlphaNumeric">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.IsCharAlphaNumeric.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.IsCharAlphaNumeric.AChar">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.DoInputChar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.DoInputChar.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.DoInputChar.NewChar">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.DoInputChar.MaskOffset">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.InputChar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.InputChar.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.InputChar.NewChar">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.InputChar.Offset">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.DeleteSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.DeleteSelection.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.DeleteSelection.Value">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.DeleteSelection.Offset">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.DeleteSelection.Len">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.InputString">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.InputString.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.InputString.Value">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.InputString.NewValue">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.InputString.Offset">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.AddEditFormat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.AddEditFormat.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.AddEditFormat.Value">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.AddEditFormat.Active">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.RemoveEditFormat">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.RemoveEditFormat.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.RemoveEditFormat.Value">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.FindLiteralChar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.FindLiteralChar.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.FindLiteralChar.MaskOffset">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.FindLiteralChar.InChar">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.GetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.GetEditText.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.GetMasked">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.GetMasked.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.GetMaskText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.GetMaskText.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.GetMaxLength">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.GetMaxLength.Result">
        <short/>
      </element>
      <!-- function Visibility: private -->
      <element name="TCustomMaskEdit.CharKeys">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.CharKeys.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.CharKeys.CharCode">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.SetEditText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.SetEditText.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.SetEditMask">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.SetEditMask.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.SetMaxLength">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.SetMaxLength.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.SetMaskText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.SetMaskText.Value">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.DeleteKeys">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.DeleteKeys.CharCode">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.HomeEndKeys">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.HomeEndKeys.CharCode">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.HomeEndKeys.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.CursorInc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.CursorInc.CursorPos">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.CursorInc.Incr">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.CursorDec">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.CursorDec.CursorPos">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.ArrowKeys">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.ArrowKeys.CharCode">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.ArrowKeys.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: private -->
      <element name="TCustomMaskEdit.CMTextChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.CMTextChanged.Message">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.ReformatText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.ReformatText.NewMask">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.SetCursor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.SetCursor.Pos">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.KeyDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.KeyDown.Key">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.KeyDown.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.KeyUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.KeyUp.Key">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.KeyUp.Shift">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.KeyPress">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.KeyPress.Key">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomMaskEdit.EditCanModify">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.EditCanModify.Result">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.MouseDown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.MouseDown.Button">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.MouseDown.Shift">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.MouseDown.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.MouseDown.Y">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.MouseUp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.MouseUp.Button">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.MouseUp.Shift">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.MouseUp.X">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.MouseUp.Y">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.DoEnter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.DoExit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.Reset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomMaskEdit.GetFirstEditChar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.GetFirstEditChar.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomMaskEdit.GetLastEditChar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.GetLastEditChar.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomMaskEdit.GetNextEditChar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.GetNextEditChar.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.GetNextEditChar.Offset">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomMaskEdit.GetPriorEditChar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.GetPriorEditChar.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.GetPriorEditChar.Offset">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomMaskEdit.GetMaxChars">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.GetMaxChars.Result">
        <short/>
      </element>
      <!-- function Visibility: protected -->
      <element name="TCustomMaskEdit.Validate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="TCustomMaskEdit.Validate.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.Validate.Value">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.Validate.Pos">
        <short/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.ValidateError">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: protected -->
      <element name="TCustomMaskEdit.CheckCursor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomMaskEdit.EditMask">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomMaskEdit.MaskState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: protected -->
      <element name="TCustomMaskEdit.MaxLength">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TCustomMaskEdit.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TCustomMaskEdit.Create.AOwner">
        <short/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomMaskEdit.ValidateEdit">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TCustomMaskEdit.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomMaskEdit.IsMasked">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomMaskEdit.EditText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TCustomMaskEdit.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- object Visibility: default -->
      <element name="TMaskEdit">
        <short>Mask Edit</short>
        <descr>Mask Edit: Displays an Edit Box with the input text masked by a selected character specified by PasswordChar, usually an asterisk, or by EditMask (a complete string), specified in TCustomMaskEdit. <br/>Useful for inputting passwords etc.</descr>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.Align">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.Anchors">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.AutoSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.BorderSpacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.CharCase">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.Constraints">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.Ctl3D">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.DragCursor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.DragKind">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.DragMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.Enabled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.EditMask">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.Font">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.MaxLength">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.ParentColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.ParentCtl3D">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.ParentFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.ParentShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.PasswordChar">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.ReadOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.ShowHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.TabOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.TabStop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnDblClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnDragDrop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnDragOver">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnEndDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnEnter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnExit">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnKeyDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnKeyPress">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnKeyUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnMouseDown">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnMouseMove">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnMouseUp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: published -->
      <element name="TMaskEdit.OnStartDrag">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <!-- function Visibility: default -->
      <element name="FormatMaskText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="FormatMaskText.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="FormatMaskText.EditMask">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="FormatMaskText.Value">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="MaskGetMaskSave">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="MaskGetMaskSave.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="MaskGetMaskSave.EditMask">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="MaskGetMaskBlank">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="MaskGetMaskBlank.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="MaskGetMaskBlank.EditMask">
        <short/>
      </element>
      <!-- function Visibility: default -->
      <element name="MaskGetFldSeparator">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: default -->
      <element name="MaskGetFldSeparator.Result">
        <short/>
      </element>
      <!-- argument Visibility: default -->
      <element name="MaskGetFldSeparator.EditMask">
        <short/>
      </element>
      <!-- procedure Visibility: default -->
      <element name="Register">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
    </module>
    <!-- MaskEdit -->
  </package>
</fpdoc-descriptions>
